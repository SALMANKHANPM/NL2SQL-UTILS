{
    "0": "SELECT\n    COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / \n    COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio\nFROM customers;\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT\n    CustomerID,\n    Consumption\nFROM\n    yearmonth\nWHERE\n    Date BETWEEN '201201' AND '201212'\nORDER BY\n    Consumption ASC\nLIMIT\n    1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption)/12 AS AvgMonthlyConsumption  \nFROM yearmonth ym  \nJOIN customers c ON ym.CustomerID = c.CustomerID  \nWHERE c.Segment = 'SME'  \n  AND LEFT(ym.Date,4) BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT\n    (COALESCE(SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption END),0) -\n     COALESCE(SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption END),0)) AS Difference\nFROM\n    customers c\nJOIN\n    yearmonth y ON c.CustomerID = y.CustomerID\nWHERE\n    y.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT\n    LEFT(`Date`, 4) AS `Year`,\n    SUM(`Consumption`) AS `TotalConsumption`\nFROM\n    `yearmonth`\nGROUP BY\n    `Year`\nORDER BY\n    `TotalConsumption` DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT\n    SUBSTRING(Date,5,2) AS PeakMonth,\n    SUM(Consumption) AS TotalConsumption\nFROM\n    yearmonth\nJOIN\n    customers USING (CustomerID)\nWHERE\n    customers.Segment = 'SME'\n    AND SUBSTRING(Date,1,4) = '2013'\nGROUP BY\n    PeakMonth\nORDER BY\n    TotalConsumption DESC\nLIMIT\n    1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT\n    /* Difference between SME and LAM */\n    ( \n        (SELECT SUM(y.Consumption) / COUNT(*) \n         FROM yearmonth y \n         JOIN customers c ON y.CustomerID = c.CustomerID \n         WHERE SUBSTRING(y.Date,1,4) = '2013' \n           AND c.Segment = 'SME') \n        - \n        (SELECT SUM(y.Consumption) / COUNT(*) \n         FROM yearmonth y \n         JOIN customers c ON y.CustomerID = c.CustomerID \n         WHERE SUBSTRING(y.Date,1,4) = '2013' \n           AND c.Segment = 'LAM')\n    ) AS SME_LAM_Diff,\n    /* Difference between LAM and KAM */\n    ( \n        (SELECT SUM(y.Consumption) / COUNT(*) \n         FROM yearmonth y \n         JOIN customers c ON y.CustomerID = c.CustomerID \n         WHERE SUBSTRING(y.Date,1,4) = '2013' \n           AND c.Segment = 'LAM') \n        - \n        (SELECT SUM(y.Consumption) / COUNT(*) \n         FROM yearmonth y \n         JOIN customers c ON y.CustomerID = c.CustomerID \n         WHERE SUBSTRING(y.Date,1,4) = '2013' \n           AND c.Segment = 'KAM')\n    ) AS LAM_KAM_Diff,\n    /* Difference between KAM and SME */\n    ( \n        (SELECT SUM(y.Consumption) / COUNT(*) \n         FROM yearmonth y \n         JOIN customers c ON y.CustomerID = c.CustomerID \n         WHERE SUBSTRING(y.Date,1,4) = '2013' \n           AND c.Segment = 'KAM') \n        - \n        (SELECT SUM(y.Consumption) / COUNT(*) \n         FROM yearmonth y \n         JOIN customers c ON y.CustomerID = c.CustomerID \n         WHERE SUBSTRING(y.Date,1,4) = '2013' \n           AND c.Segment = 'SME')\n    ) AS KAM_SME_Diff;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT Segment,\n       CASE\n           WHEN IncreasePercentage = (SELECT MAX(IncreasePercentage) FROM (\n                SELECT Segment,\n                       (SUM(CASE WHEN LEFT(Date,4)='2013' THEN Consumption END)\n                       - SUM(CASE WHEN LEFT(Date,4)='2012' THEN Consumption END)) /\n                       SUM(CASE WHEN LEFT(Date,4)='2013' THEN Consumption END) * 100) AS IncreasePercentage\n                FROM yearmonth ym\n                JOIN customers c ON ym.CustomerID = c.CustomerID\n                WHERE ym.Date LIKE '2012%' OR ym.Date LIKE '2013%'\n                GROUP BY Segment\n           ) sub) THEN 'biggest'\n           WHEN IncreasePercentage = (SELECT MIN(IncreasePercentage) FROM (\n                SELECT Segment,\n                       (SUM(CASE WHEN LEFT(Date,4)='2013' THEN Consumption END)\n                       - SUM(CASE WHEN LEFT(Date,4)='2012' THEN Consumption END)) /\n                       SUM(CASE WHEN LEFT(Date,4)='2013' THEN Consumption END) * 100) AS IncreasePercentage\n                FROM yearmonth ym\n                JOIN customers c ON ym.CustomerID = c.CustomerID\n                WHERE ym.Date LIKE '2012%' OR ym.Date LIKE '2013%'\n                GROUP BY Segment\n           ) sub) THEN 'lowest'\n           ELSE 'other'\n       END AS Result\nFROM (\n    SELECT c.Segment,\n           (SUM(CASE WHEN LEFT(ym.Date,4)='2013' THEN ym.Consumption END) -\n            SUM(CASE WHEN LEFT(ym.Date,4)='2012' THEN ym.Consumption END)) /\n           SUM(CASE WHEN LEFT(ym.Date,4)='2013' THEN ym.Consumption END) * 100 AS IncreasePercentage\n    FROM yearmonth ym\n    JOIN customers c ON ym.CustomerID = c.CustomerID\n    WHERE ym.Date LIKE '2012%' OR ym.Date LIKE '2013%'\n    GROUP BY c.Segment\n) AS sub;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS total_consumption\nFROM yearmonth\nWHERE CustomerID = 6\n  AND CAST(SUBSTRING(Date, 1, 4) AS UNSIGNED) = 2013\n  AND CAST(SUBSTRING(Date, 6, 2) AS UNSIGNED) BETWEEN 8 AND 11;\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT\n  (SELECT COUNT(*) FROM gasstations WHERE Country='CZE' AND Segment='discount')\n  - (SELECT COUNT(*) FROM gasstations WHERE Country='SVK' AND Segment='discount') AS difference;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT\n    SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) -\n    SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS Difference\nFROM customers\nWHERE Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT ROUND(100 * SUM(CASE WHEN Consumption > 46.73 THEN 1 ELSE 0 END) / COUNT(*) , 2) AS Percentage\nFROM yearmonth;\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT  \n    100 * COUNT(CASE WHEN Consumption > 528.3 THEN 1 END) / COUNT(*) AS percentage_of_consumers_above_528_3  \nFROM  \n    yearmonth  \nWHERE  \n    Date LIKE '201202%';\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT \n    SUBSTRING(`Date`,5,2) AS `Month`,\n    SUM(`Consumption`) AS `HighestMonthlyConsumption`\nFROM \n    `yearmonth`\nWHERE \n    SUBSTRING(`Date`,1,4) = '2012'\nGROUP BY \n    `Month`\nORDER BY \n    `HighestMonthlyConsumption` DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT p.Description\nFROM transactions_1k t\nJOIN yearmonth y ON t.CustomerID = y.CustomerID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE y.Date LIKE '201309%';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE YEAR(t.Date) = 2013\n  AND MONTH(t.Date) = 6;\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT yearmonth.CustomerID)\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE customers.Currency = 'EUR'\n  AND yearmonth.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT Time\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*)  \nFROM transactions_1k t  \nJOIN gasstations g ON t.GasStationID = g.GasStationID  \nWHERE g.Country = 'CZE'  \n  AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-23'\n  AND t.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) AS transaction_count\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE'\n  AND t.Date = '2012-08-26'\n  AND t.Time BETWEEN '08:00:00' AND '09:00:00';\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT NULL AS Nationality;\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT\n    ROUND(100 * SUM(CASE WHEN c.Currency = 'EUR' THEN 1 ELSE 0 END) / COUNT(*), 2) AS Percentage_EUR\nFROM\n    yearmonth ym\n    JOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE\n    ym.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT\n    (t2012.Consumption - t2013.Consumption) / t2012.Consumption AS ConsumptionDecreaseRate\nFROM\n    (SELECT ym.Consumption\n     FROM yearmonth ym\n     JOIN transactions_1k tr ON ym.CustomerID = tr.CustomerID\n     WHERE tr.Amount = 634.8\n       AND tr.Date = '2012-08-25'\n       AND ym.Date LIKE '2012%') AS t2012\nJOIN\n    (SELECT ym.Consumption\n     FROM yearmonth ym\n     JOIN transactions_1k tr ON ym.CustomerID = tr.CustomerID\n     WHERE tr.Amount = 634.8\n       AND tr.Date = '2012-08-25'\n       AND ym.Date LIKE '2013%') AS t2013;\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n  100.0 * COUNT(CASE WHEN Segment = 'premium' THEN 1 END) / COUNT(*) AS premium_percentage\nFROM gasstations\nWHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(Amount) AS Total_Spent_at_GasStations\nFROM transactions_1k\nWHERE CustomerID = 38508\n  AND GasStationID IS NOT NULL;\n\nSELECT SUM(Amount) AS Total_Spent_in_January_2012\nFROM transactions_1k\nWHERE CustomerID = 38508\n  AND DATE_FORMAT(`Date`, '%Y%m') = '201201';\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.`CustomerID`, c.`Currency`, \n       SUM(t.`Price`) AS TotalSpending, \n       SUM(t.`Amount`) AS TotalItems,\n       SUM(t.`Price`) / SUM(t.`Amount`) AS AvgPricePerItem\nFROM transactions_1k t\nJOIN customers c ON t.`CustomerID` = c.`CustomerID`\nGROUP BY c.`CustomerID`, c.`Currency`\nORDER BY TotalSpending DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT ym.CustomerID, ym.Consumption\nFROM yearmonth ym\nJOIN (\n    SELECT DISTINCT t.CustomerID\n    FROM transactions_1k t\n    JOIN products p ON t.ProductID = p.ProductID\n    WHERE p.ProductID = 5\n      AND t.Price / t.Amount > 29\n) AS high_paid ON ym.CustomerID = high_paid.CustomerID\nWHERE ym.Date = '201208';\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT m.major_name\nFROM member m\nJOIN major g ON m.link_to_major = g.major_id\nWHERE m.first_name = 'Angela' AND m.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) AS medium_tshirt_count\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON e.event_id = a.link_to_event\nWHERE e.event_name = 'Women's Soccer'\n  AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) AS meeting_events_over_10\nFROM event e\nJOIN (\n    SELECT link_to_event\n    FROM attendance\n    GROUP BY link_to_event\n    HAVING COUNT(*) > 10\n) a ON e.event_id = a.link_to_event\nWHERE e.type = 'Meeting';\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nGROUP BY e.event_id, e.event_name\nHAVING COUNT(a.link_to_member) > 20\n   AND e.type <> 'fundraiser';\t----- bird -----\tstudent_club",
    "34": "SELECT i.amount\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": "SELECT CONCAT(member.first_name,' ',member.last_name) AS full_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT e.expense_id, e.approved\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting'\n  AND ev.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) AS avg_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah'\n  AND m.last_name = 'Allen'\n  AND (SUBSTRING(e.expense_date,5,2) = '09'\n       OR SUBSTRING(e.expense_date,5,2) = '10');\t----- bird -----\tstudent_club",
    "38": "SELECT \n    SUM(b.spent) - (\n        SELECT COALESCE(SUM(b2.spent),0)\n        FROM budget b2\n        JOIN event e2 ON e2.event_id = b2.link_to_event\n        WHERE YEAR(e2.event_date) = 2020\n    ) AS difference\nFROM budget b\nJOIN event e ON e.event_id = b.link_to_event\nWHERE YEAR(e.event_date) = 2019;\t----- bird -----\tstudent_club",
    "39": "SELECT `notes` \nFROM `income` \nWHERE `date_received` = '2019-09-14' \n  AND `source` = 'Fundraising';\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT e.status\nFROM expense exp\nJOIN budget b ON exp.link_to_budget = b.budget_id\nJOIN event e ON b.link_to_event = e.event_id\nWHERE exp.expense_description = 'Post Cards, Posters'\n  AND exp.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "42": "SELECT m.major_name\nFROM major AS m\nJOIN member AS mb ON m.major_id = mb.link_to_major\nWHERE mb.first_name = 'Brent' AND mb.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) AS medium_tshirt_count\nFROM member m\nJOIN major g ON m.link_to_major = g.major_id\nWHERE g.major_name = 'Business'\n  AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT m.department\nFROM member AS mem\nJOIN major AS m ON mem.link_to_major = m.major_id\nWHERE mem.position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT \n  SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) /\n  SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END) AS ratio\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE b.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_pizza_cost FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) AS city_count\nFROM zip_code\nWHERE county = 'Orange'\n  AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT m.major_name\nFROM member AS mem\nJOIN major AS m ON mem.link_to_major = m.major_id\nWHERE mem.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT a.`link_to_member`) AS attendee_count\nFROM `attendance` a\nJOIN `event` e ON a.`link_to_event` = e.`event_id`\nWHERE e.`event_name` = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN major g ON m.link_to_major = g.major_id\nWHERE g.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT\n    e.event_name\nFROM\n    event e\n    JOIN budget b ON e.event_id = b.link_to_event\nWHERE\n    e.status = 'Closed'\nORDER BY\n    DIVIDE(b.spent, b.amount) DESC\nLIMIT\n    1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS max_spent\nFROM budget;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_food_spent\nFROM budget\nWHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name, m.last_name\nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON e.event_id = a.link_to_event\nWHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name\nFROM event e\nJOIN expense exp ON exp.link_to_budget = e.event_id\nWHERE exp.cost = (\n    SELECT MIN(cost)\n    FROM expense\n);\n\t----- bird -----\tstudent_club",
    "58": "SELECT \n    IFNULL(SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost END), 0) /\n    NULLIF(SUM(ex.cost), 0) * 100 AS percentage\nFROM expense ex\nJOIN budget b ON ex.link_to_budget = b.budget_id\nJOIN event e ON b.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "59": "SELECT `source`\nFROM `income`\nWHERE `date_received` BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY `source`\nORDER BY SUM(`amount`) DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) AS num_members\nFROM member m\nJOIN major g ON m.link_to_major = g.major_id\nWHERE g.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'Advertisement'\nORDER BY b.spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT a.* \nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nJOIN event e ON a.link_to_event = e.event_id\nWHERE m.first_name = 'Maya'\n  AND m.last_name = 'Mclean'\n  AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "63": "SELECT e.cost\nFROM expense e\nJOIN event ev ON e.link_to_event = ev.event_id\nWHERE e.expense_description = 'Posters'\n  AND ev.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\n  AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT\n    e.expense_description AS expense_type,\n    SUM(e.cost) AS total_approved_cost\nFROM\n    expense e\nJOIN\n    budget b ON e.link_to_budget = b.budget_id\nJOIN\n    event ev ON b.link_to_event = ev.event_id\nWHERE\n    ev.event_name = 'October Meeting'\n    AND e.approved = 'approved'\nGROUP BY\n    e.expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT SUM(amount) AS total_budget\nFROM budget\nWHERE link_to_event IN (\n    SELECT event_id\n    FROM event\n    WHERE event_name = 'April Speaker'\n);\n\nSELECT category, SUM(amount) AS category_amount\nFROM budget\nWHERE link_to_event IN (\n    SELECT event_id\n    FROM event\n    WHERE event_name = 'April Speaker'\n)\nGROUP BY category\nORDER BY category_amount ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense_used_on_2019_08_20\nFROM expense\nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name || ' ' || m.last_name AS full_name,\n       SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT e.expense_description\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT event.type\nFROM event\nWHERE event.location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT \n    m.`last_name`,\n    ma.`department`,\n    ma.`college`\nFROM \n    `member` m\nJOIN \n    `major` ma\n    ON m.`link_to_major` = ma.`major_id`\nWHERE \n    ma.`major_name` = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT b.category\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.location = 'MU 215'\n  AND e.type = 'Guest Speaker'\n  AND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT DIVIDE(COUNT(CASE WHEN income.amount = 50 THEN 1 END), COUNT(*)) * 100 AS percentage\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.t_shirt_size = 'Medium'\n  AND member.position = 'Member'\n  AND income.source = 'Student_Club';\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game'\n  AND status = 'Closed'\n  AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT\n    m.first_name,\n    m.last_name,\n    m.phone\nFROM\n    member AS m\nJOIN\n    expense AS e\n    ON e.link_to_member = m.member_id\nWHERE\n    e.cost > (\n        SELECT\n            AVG(cost)\n        FROM\n            expense\n    );\t----- bird -----\tstudent_club",
    "76": "SELECT m.first_name, m.last_name, e.cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": "SELECT CONCAT(i.first_name, ' ', i.last_name) AS full_name,\n       i.amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "78": "SELECT\n    SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END) AS InpatientMaleCount,\n    SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END) AS OutpatientMaleCount,\n    CONCAT(\n        FORMAT(\n            DIVIDE(\n                SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END),\n                SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END)\n                + SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END)\n            ) * 100,\n            2\n        ),\n        '%'\n    ) AS InpatientMalePercentage,\n    CONCAT(\n        FORMAT(\n            DIVIDE(\n                SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END),\n                SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END)\n                + SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END)\n            ) * 100,\n            2\n        ),\n        '%'\n    ) AS OutpatientMalePercentage,\n    CONCAT(\n        FORMAT(\n            ABS(\n                DIVIDE(\n                    SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END),\n                    SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END)\n                    + SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END)\n                ) * 100\n                -\n                DIVIDE(\n                    SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END),\n                    SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END)\n                    + SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END)\n                ) * 100,\n            2\n        ),\n        '%'\n    ) AS DeviationPercentage\nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT\n    100 *\n    SUM(CASE WHEN YEAR(Birthday) > 1930 THEN 1 ELSE 0 END) /\n    NULLIF(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END), 0)\n    AS percentage\nFROM Patient\nWHERE SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT DIVIDE(\n    (SELECT COUNT(ID) FROM Patient WHERE Diagnosis='SLE' AND Admission='+'),\n    (SELECT COUNT(ID) FROM Patient WHERE Diagnosis='SLE' AND Admission='-')\n) AS outpatient_to_inpatient_ratio;\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT p.Diagnosis AS Patient_Diagnosis, l.Date AS Lab_Test_Date\nFROM Patient p\nLEFT JOIN Laboratory l ON p.ID = l.ID\nWHERE p.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT P.ID, P.SEX, P.Birthday\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT e.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) AS age\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.RVVT = '+';\n\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT \n    p.ID, \n    p.SEX, \n    e.Diagnosis\nFROM \n    Examination e\nJOIN \n    Patient p ON e.ID = p.ID\nWHERE \n    e.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) AS female_patients_1997 \nFROM Patient \nWHERE SEX = 'F' \n  AND YEAR(Description) = 1997 \n  AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*)\nFROM Examination ex\nJOIN Patient p ON ex.ID = p.ID\nWHERE ex.Thrombosis = 1\n  AND YEAR(ex.`Examination Date`) = 1997\n  AND p.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT e.Symptoms, e.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE p.Birthday = (SELECT MAX(Birthday) FROM Patient)\n  AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT\n    l.`Date` AS `LabCompletionDate`,\n    (YEAR(p.`First Date`) - YEAR(p.Birthday)) AS `AgeOnArrival`\nFROM\n    `Patient` p\nJOIN\n    `Examination` e ON p.`ID` = e.`ID`\nJOIN\n    `Laboratory` l ON p.`ID` = l.`ID`\nWHERE\n    e.`Diagnosis` = 'SJS'\nORDER BY\n    p.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT\n    SUM(CASE WHEN P.SEX = 'M' AND L.UA <= 8.0 THEN 1 ELSE 0 END) /\n    SUM(CASE WHEN P.SEX = 'F' AND L.UA <= 6.5 THEN 1 ELSE 0 END) AS male_to_female_ratio\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT p.ID) AS underage_examinations\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE (YEAR(CURDATE()) - YEAR(p.Birthday)) < 18\n  AND YEAR(e.`Examination Date`) BETWEEN 1990 AND 1993;\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT\n    (YEAR(e.`Examination Date`) - YEAR(p.Birthday)) AS Age,\n    e.`Diagnosis`\nFROM\n    Examination e\nINNER JOIN\n    Patient p\nON\n    e.ID = p.ID\nINNER JOIN\n    Laboratory l\nON\n    e.ID = l.ID\nWHERE\n    l.HGB = (SELECT MAX(HGB) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT e.`aCL IgM`\nFROM Patient p\nJOIN Examination e ON p.`ID` = e.`ID`\nWHERE p.`Description` = '1994-02-19'\n  AND e.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n    (SUM(CASE WHEN DATE_FORMAT(l.Date, '%Y-%m') = '1981-11' THEN l.`T-CHO` END) -\n     SUM(CASE WHEN DATE_FORMAT(l.Date, '%Y-%m') = '1981-12' THEN l.`T-CHO` END))\n    / NULLIF(SUM(CASE WHEN DATE_FORMAT(l.Date, '%Y-%m') = '1981-12' THEN l.`T-CHO` END),0)\n    AS decrease_rate\nFROM \n    Laboratory l\nJOIN \n    Patient p ON l.ID = p.ID\nWHERE \n    p.Birthday = '1959-02-18'\n    AND l.Date >= '1981-11-01' AND l.Date < '1982-01-01';\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Examination e ON e.ID = p.ID\nJOIN Laboratory l ON l.ID = e.ID AND l.Date = e.`Examination Date`\nWHERE e.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31'\n  AND l.GPT > 30\n  AND l.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) AS NumPatients\nFROM Examination\nWHERE Thrombosis = 2\n  AND `ANA Pattern` = 'S'\n  AND `aCL IgM` > 1.4 * (SELECT AVG(`aCL IgM`) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.`First Date`, p.Admission, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '-'\n  AND l.Date LIKE '1991-10%'\n  AND l.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(L.Alb) AS avg_alb\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'F'\n  AND L.PLT > 400\n  AND P.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) AS Female_APS_Count\nFROM Patient\nWHERE SEX = 'F'\n  AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT DIVIDE(SUM(CASE WHEN `SEX` = 'F' THEN 1 ELSE 0 END), COUNT(`SEX`)) * 100 AS percentage\nFROM `Patient`\nWHERE YEAR(`Birthday`) = 1980\n  AND `Diagnosis` = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT\n    L.UA,\n    P.SEX,\n    CASE\n        WHEN (L.UA > 8.0 AND P.SEX = 'M')\n             OR (L.UA > 6.5 AND P.SEX = 'F') THEN 'YES'\n        ELSE 'NO'\n    END AS Is_Uric_Acid_Normal\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE L.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT L.ID\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE P.SEX = 'M' AND L.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.ID, p.Diagnosis, p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.`ID`, Patient.`SEX`, Patient.`Birthday`\nFROM Patient\nJOIN Laboratory ON Patient.`ID` = Laboratory.`ID`\nWHERE Laboratory.`UN` = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT \n    p.SEX,\n    COUNT(*) AS total_bilirubin_abnormal\nFROM \n    Patient p\nJOIN \n    Laboratory l\n    ON p.ID = l.ID\nWHERE \n    l.`T-BIL` >= 2.0\nGROUP BY \n    p.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT DIVIDE(SUM(YEAR(NOW())-YEAR(P.Birthday)), COUNT(P.ID)) AS avg_age\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX='M' AND L.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.TG >= 200\n  AND TIMESTAMPDIFF(YEAR, p.Birthday, CURRENT_TIMESTAMP) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT l.ID) AS male_patients_with_high_cpk\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE p.SEX = 'M'\n  AND YEAR(p.Birthday) BETWEEN 1936 AND 1956\n  AND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT\n    l.`ID`,\n    p.`SEX`,\n    (YEAR(CURRENT_TIMESTAMP) - YEAR(p.`Birthday`)) AS age\nFROM\n    `Patient` p\nJOIN\n    `Laboratory` l\n    ON p.`ID` = l.`ID`\nWHERE\n    l.`GLU` >= 180\n    AND l.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT \n    p.ID, \n    YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) AS Age, \n    p.Diagnosis \nFROM \n    Patient p \nJOIN \n    Laboratory l \n    ON p.ID = l.ID \nWHERE \n    l.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT p.ID, p.SEX\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Diagnosis = 'SLE'\n  AND l.HGB > 10\n  AND l.HGB < 17\nORDER BY p.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT p.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday)) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.HCT >= 52\nGROUP BY p.ID\nHAVING COUNT(l.ID) >= 2;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT\n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_than_normal,\n    SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_than_normal,\n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS difference\nFROM Laboratory;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT\n    p.ID,\n    p.SEX,\n    p.Birthday,\n    l.PLT\nFROM\n    Patient p\nINNER JOIN\n    Laboratory l\nON\n    p.ID = l.ID\nWHERE\n    YEAR(l.Date) = 1984\n    AND YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) < 50\n    AND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT\n    DIVIDE(\n        SUM(CASE WHEN PT >= 14 AND SEX = 'F' THEN 1 ELSE 0 END),\n        SUM(CASE WHEN PT >= 14 THEN 1 ELSE 0 END)\n    ) * 100 AS percentage_female_with_abnormal_PT\nFROM\n    Patient p\nJOIN\n    Laboratory l\n    ON p.ID = l.ID\nWHERE\n    SUBTRACT(YEAR(CURRENT_TIMESTAMP), YEAR(Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT p.ID) AS MalePatientsWithAbnormalFibrinogen\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.WBC > 3.5\n  AND l.WBC < 9.0\n  AND (l.FG <= 150 OR l.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) AS NormalIgG_Symptomatic_Patients\nFROM Laboratory l\nJOIN Examination e ON l.ID = e.ID\nWHERE l.IGG > 900\n  AND l.IGG < 2000\n  AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.IGA > 80\n  AND l.IGA < 500\n  AND YEAR(p.`First Date`) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT l.Diagnosis, COUNT(*) AS cnt\nFROM Laboratory l\nWHERE l.IGM <= 40 OR l.IGM >= 400\nGROUP BY l.Diagnosis\nORDER BY cnt DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(DISTINCT p.ID) AS patients_without_CRPP_data\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRP = '+'\n  AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(DISTINCT p.ID) AS NumPatients\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRE >= 1.5\n  AND (YEAR(CURDATE()) - YEAR(p.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID) AS Normal_RNP_Admitted_Patients\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RNP IN ('-', '+-')\n  AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT p.ID) AS Normal_SM_No_Thrombosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE (e.SM = '-' OR e.SM = '+-')\n  AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT p.ID) AS Female_No_Symptoms\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.SC170 IN ('negative', '0')\n  AND p.SEX = 'F'\n  AND e.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT p.ID) AS male_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CENTROMEA IN('-', '+-')\n  AND l.SSB IN('-', '+-')\n  AND p.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GOT >= 60\nORDER BY p.Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT l.ID) AS PatientCount\nFROM Laboratory l\nJOIN Examination e ON l.ID = e.ID\nWHERE l.CPK < 250\n  AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT l.name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.season = '2015/2016'\nGROUP BY l.name\nORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT t.team_long_name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nJOIN Team t ON m.away_team_api_id = t.team_api_id\nWHERE l.name = 'Scotland Premier League'\n  AND m.season = '2009/2010'\n  AND m.away_team_goal > m.home_team_goal\nGROUP BY m.away_team_api_id, t.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT\n    t.team_long_name,\n    ta.buildUpPlaySpeed\nFROM\n    Team_Attributes ta\nJOIN\n    Team t\nON\n    ta.team_api_id = t.team_api_id\nORDER BY\n    ta.buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT l.name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.season = '2015/2016' AND m.home_team_goal = m.away_team_goal\nGROUP BY l.id, l.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT\n    TIMESTAMPDIFF(YEAR, p.birthday, CURDATE()) AS age,\n    pa.player_api_id\nFROM\n    Player_Attributes pa\nJOIN\n    Player p\nON\n    p.player_api_id = pa.player_api_id\nWHERE\n    pa.sprint_speed >= 97\n    AND YEAR(pa.date) BETWEEN 2013 AND 2015;\t----- bird -----\teuropean_football_2",
    "133": "SELECT \n    l.name AS league_name,\n    COUNT(m.league_id) AS match_count\nFROM \n    Match m\nJOIN \n    League l ON m.league_id = l.id\nWHERE \n    m.league_id IS NOT NULL\nGROUP BY \n    l.id, l.name\nORDER BY \n    match_count DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT `team_fifa_api_id`\nFROM `Team_Attributes`\nWHERE `buildUpPlaySpeed` > 50 AND `buildUpPlaySpeed` < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT\n    ta.team_long_name\nFROM\n    Team_Attributes ta\nWHERE\n    strftime('%Y', ta.date) = '2012'\n    AND ta.buildUpPlayPassing IS NOT NULL\n    AND ta.buildUpPlayPassing > (\n        SELECT\n            SUM(buildUpPlayPassing) / COUNT(team_long_name)\n        FROM\n            Team_Attributes\n        WHERE\n            strftime('%Y', date) = '2012'\n            AND buildUpPlayPassing IS NOT NULL\n    );\t----- bird -----\teuropean_football_2",
    "136": "SELECT\n    DIVIDE(SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) * 100,\n           COUNT(player_fifa_api_id)) AS left_foot_percentage\nFROM Player_Attributes\nWHERE YEAR(birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(pa.long_shots) AS average_long_shots\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id\nWHERE p.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.height > 180\nGROUP BY p.id\nORDER BY AVG(pa.heading_accuracy) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2009/2010'\nGROUP BY L.id, L.name\nHAVING SUM(M.home_team_goal) / COUNT(DISTINCT M.id) > SUM(M.away_team_goal) / COUNT(DISTINCT M.id);\t----- bird -----\teuropean_football_2",
    "140": "SELECT *\nFROM Player\nWHERE SUBSTR(birthday,1,7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.id\nWHERE p.player_name = 'Gabriel Tamas'\n  AND YEAR(pa.date) = 2011;\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(m.home_team_goal) AS avg_home_goal\nFROM Match AS m\nJOIN League AS l ON m.league_id = l.id\nWHERE l.name = 'Poland'\n  AND m.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT pa.player_api_id, AVG(pa.finishing) AS avg_finishing\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.id\nWHERE p.height BETWEEN (SELECT MIN(height) FROM Player) AND (SELECT MAX(height) FROM Player)\nGROUP BY pa.player_api_id\nORDER BY avg_finishing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE YEAR(pa.date) BETWEEN 2010 AND 2015\n  AND p.height > 170;\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    (SELECT AVG(pa.ball_control) \n     FROM Player_Attributes pa \n     JOIN Player p ON pa.player_api_id = p.player_api_id \n     WHERE p.player_name = 'Abdou Diallo') \n  - \n    (SELECT AVG(pa.ball_control) \n     FROM Player_Attributes pa \n     JOIN Player p ON pa.player_api_id = p.player_api_id \n     WHERE p.player_name = 'Aaron Appindangoye') \n  AS difference_of_average_ball_control;\t----- bird -----\teuropean_football_2",
    "146": "SELECT\n    CASE\n        WHEN a.birthday < b.birthday THEN 'Aaron Lennon'\n        WHEN a.birthday > b.birthday THEN 'Abdelaziz Barrada'\n        ELSE 'Same age'\n    END AS older_player\nFROM\n    Player AS a\n    JOIN Player AS b\n    ON a.player_name = 'Aaron Lennon' AND b.player_name = 'Abdelaziz Barrada';\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name, height\nFROM Player\nWHERE height IS NOT NULL\nORDER BY height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) AS num\nFROM Player_Attributes\nWHERE preferred_foot = 'left'\n  AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT p.id) AS num_players\nFROM Player p\nJOIN Player_Attributes pa ON pa.player_api_id = p.player_api_id\nWHERE YEAR(p.birthday) < 1986\n  AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": "SELECT P.player_name\nFROM Player AS P\nJOIN Player_Attributes AS PA\n  ON P.player_api_id = PA.player_api_id\nWHERE PA.volleys > 70\n  AND PA.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) AS match_count\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Belgium Jupiler League'\n  AND SUBSTR(m.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT l.name AS league_name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.season = '2008/2009'\nGROUP BY l.id, l.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT (pa.overall_rating - pp.overall_rating) / pp.overall_rating * 100 AS percent_increase\nFROM Player_Attributes AS pa\nJOIN Player AS p1 ON pa.player_api_id = p1.player_api_id\nJOIN Player_Attributes AS pp\nJOIN Player AS p2 ON pp.player_api_id = p2.player_api_id\nWHERE p1.player_name = 'Ariel Borysiuk'\n  AND p2.player_name = 'Paulin Puel';\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) AS avg_overall_rating\nFROM Player AS p\nJOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(ta.chanceCreationPassing) AS max_score,\n       ta.chanceCreationPassingClass\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "156": "SELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.id\nWHERE pa.overall_rating = 77\n  AND pa.date LIKE '2016-06-23%'\nORDER BY pa.birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT pa.overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Aaron Mooy'\n  AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": "SELECT pa.attacking_work_rate\nFROM Player AS p\nJOIN Player_Attributes AS pa\n  ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Francesco Migliore'\n  AND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT pa.date\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.id\nWHERE p.player_name = 'Kevin Constant'\nORDER BY pa.crossing DESC, pa.date ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "160": "SELECT tpa.buildUpPlayPassingClass\nFROM Team_Attributes tpa\nJOIN Team t ON tpa.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'FC Lorient'\n  AND tpa.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT ta.defenceAggressionClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Hannover 96'\n  AND ta.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) AS avg_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Marko Arnautovic'\n  AND LEFT(pa.date, 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT\n    ((LD.overall_rating - JB.overall_rating) / LD.overall_rating) * 100 AS percentage\nFROM\n    Player_Attributes AS LD\nJOIN\n    Player_Attributes AS JB\nON\n    LD.date = JB.date\nWHERE\n    LD.player_api_id = (\n        SELECT id FROM Player WHERE player_name = 'Landon Donovan'\n    )\n    AND JB.player_api_id = (\n        SELECT id FROM Player WHERE player_name = 'Jordan Bowery'\n    )\n    AND LD.date = '2013/7/12';\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "165": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nORDER BY pa.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT P.player_name\nFROM Player P\nJOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id\nWHERE PA.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT t.team_short_name\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) AS num_aarons\nFROM Player\nWHERE player_name LIKE 'Aaron%' AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": "SELECT pa1.jumping - pa2.jumping AS diff\nFROM Player_Attributes pa1\nJOIN Player_Attributes pa2\n  ON pa1.player_api_id = 6 AND pa2.player_api_id = 23;\t----- bird -----\teuropean_football_2",
    "170": "SELECT p.id\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.preferred_foot = 'right'\nORDER BY pa.potential ASC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) AS num_players\nFROM Player_Attributes\nWHERE preferred_foot = 'left'\n  AND crossing = (SELECT MAX(crossing) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "172": "SELECT m.home_team_goal, m.away_team_goal\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Belgium Jupiler League'\n  AND m.date LIKE '%2008-09-24%';\t----- bird -----\teuropean_football_2",
    "173": "SELECT taa.buildUpPlaySpeedClass\nFROM Team t\nJOIN Team_Attributes taa ON t.team_api_id = taa.team_api_id\nWHERE t.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing, pa.curve\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.id\nWHERE p.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "175": "SELECT L.name\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2015/2016'\nGROUP BY L.name\nORDER BY COUNT(M.id) DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT t.team_long_name\nFROM Match m\nJOIN Team t ON m.away_team_api_id = t.team_api_id\nWHERE m.away_team_goal = (\n    SELECT MAX(away_team_goal) FROM Match\n);\t----- bird -----\teuropean_football_2",
    "177": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player)) AS percentage_under_180_with_overall_gt_70\nFROM \n    Player\nINNER JOIN \n    Player_Attributes ON Player.id = Player_Attributes.id\nWHERE \n    Player.height < 180 AND \n    Player_Attributes.overall_rating > 70;\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 20\n  AND CAST(q.q1 AS DECIMAL) = (\n      SELECT MAX(CAST(q1 AS DECIMAL))\n      FROM qualifying\n      WHERE raceId = 20\n  )\nLIMIT 5;\t----- bird -----\tformula_1",
    "180": "SELECT d.surname\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 19\n  AND q.q2 IS NOT NULL\nORDER BY q.q2\nLIMIT 1;\t----- bird -----\tformula_1",
    "181": "SELECT r.name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT c.lat, c.lng\nFROM circuits c\nJOIN races r ON r.circuitId = c.circuitId\nWHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": "SELECT c.lat, c.lng\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE d.forename = 'Bruno'\n  AND d.surname = 'Senna'\n  AND q.raceId = 354;\t----- bird -----\tformula_1",
    "185": "SELECT d.number\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 903\n  AND q.q3 LIKE '0:01:54%';\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) AS not_finished_drivers\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2007\n  AND ra.name = 'Bahrain Grand Prix'\n  AND r.time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.raceId = 592 AND r.time IS NOT NULL\nORDER BY d.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT d.url\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE lt.raceId = 161\n  AND lt.time LIKE '0:01:27%';\t----- bird -----\tformula_1",
    "189": "SELECT c.lat, c.lng\nFROM circuits c\nJOIN races r ON r.circuitId = c.circuitId\nWHERE r.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT c.url\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE cr.raceId = 9\nORDER BY cr.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "191": "SELECT d.code\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 45\n  AND q.q3 LIKE '0:%';\t----- bird -----\tformula_1",
    "192": "SELECT s.url\nFROM races r\nJOIN seasons s ON r.year = s.year\nWHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT d.driverId,\n       d.forename,\n       d.surname,\n       d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 872\n  AND r.time IS NOT NULL\nORDER BY d.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.fastestLapSpeed = (\n    SELECT MAX(CAST(fastestLapSpeed AS DECIMAL(10,2))) FROM results\n)\nLIMIT 1;\t----- bird -----\tformula_1",
    "195": "SELECT ((t1.s853 - t2.s854) / t2.s854) * 100 AS percent_faster\nFROM\n    (SELECT r1.fastestLapSpeed AS s853\n     FROM results r1\n     JOIN drivers d1 ON r1.driverId = d1.driverId\n     WHERE r1.raceId = 853\n       AND d1.forename = 'Paul'\n       AND d1.surname = 'di Resta') t1,\n    (SELECT r2.fastestLapSpeed AS s854\n     FROM results r2\n     JOIN drivers d2 ON r2.driverId = d2.driverId\n     WHERE r2.raceId = 854\n       AND d2.forename = 'Paul'\n       AND d2.surname = 'di Resta') t2;\t----- bird -----\tformula_1",
    "196": "SELECT\n    ROUND(100 * SUM(CASE WHEN time IS NOT NULL THEN 1 END) / COUNT(*), 2) AS completion_rate\nFROM results\nWHERE raceId IN (\n    SELECT raceId\n    FROM races\n    WHERE date = '1983-07-16'\n);\t----- bird -----\tformula_1",
    "197": "SELECT r.name\nFROM races r\nWHERE r.date = (SELECT MIN(date) FROM races);\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, ds.points\nFROM driverStandings ds\nJOIN drivers d ON ds.driverId = d.driverId\nORDER BY ds.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT\n    d.forename,\n    d.surname,\n    r.name,\n    l.milliseconds\nFROM\n    lapTimes l\nINNER JOIN drivers d ON l.driverId = d.driverId\nINNER JOIN races r ON l.raceId = r.raceId\nWHERE l.milliseconds = (\n    SELECT MIN(milliseconds)\n    FROM lapTimes\n);\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis'\n  AND drivers.surname = 'Hamilton'\n  AND races.name = 'Malaysian Grand Prix'\n  AND races.year = 2009;\t----- bird -----\tformula_1",
    "201": "SELECT \n  ROUND(\n    COUNT(CASE WHEN r.position > 1 THEN 1 END) * 100 /\n    COUNT(*) , 2\n  ) AS percentage_not_first_place\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races rs ON r.raceId = rs.raceId\nWHERE d.surname = 'Hamilton' AND rs.year >= 2010;\t----- bird -----\tformula_1",
    "202": "SELECT \n    d.forename,\n    d.surname,\n    d.nationality,\n    ds.max_wins,\n    ds.max_points\nFROM (\n    SELECT \n        driverId,\n        MAX(wins) AS max_wins,\n        MAX(points) AS max_points\n    FROM driverStandings\n    GROUP BY driverId\n) ds\nJOIN drivers d ON ds.driverId = d.driverId\nWHERE ds.max_wins = (\n    SELECT MAX(sub.max_wins) FROM (\n        SELECT MAX(wins) AS max_wins FROM driverStandings GROUP BY driverId\n    ) sub\n);\t----- bird -----\tformula_1",
    "203": "SELECT CONCAT(forename, ' ', surname) AS name, YEAR(CURRENT_TIMESTAMP) - YEAR(dob) AS age\nFROM drivers\nWHERE nationality = 'Japanese'\nORDER BY dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT\n    r.name AS race_name,\n    c.name AS circuit_name,\n    c.location\nFROM\n    races AS r\nJOIN\n    circuits AS c\nON\n    r.circuitId = c.circuitId\nWHERE\n    MONTH(r.date) = 9\n    AND YEAR(r.date) = 2005;\t----- bird -----\tformula_1",
    "205": "SELECT r.* \nFROM races r \nJOIN results res ON r.raceId = res.raceId \nJOIN drivers d ON res.driverId = d.driverId \nWHERE d.forename = 'Alex' \n  AND d.surname = 'Yoong' \n  AND res.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT r.year, r.name\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nORDER BY lt.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT\n    r.year,\n    r.round,\n    res.points\nFROM\n    races r\nJOIN\n    results res\n    ON r.raceId = res.raceId\nJOIN\n    drivers d\n    ON res.driverId = d.driverId\nWHERE\n    d.forename = 'Lewis'\n    AND d.surname = 'Hamilton'\nORDER BY\n    r.year,\n    r.round\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT\n    (COUNT(CASE WHEN c.country = 'Germany' THEN 1 END) / COUNT(*)) * 100 AS percentage\nFROM\n    races r\n    JOIN circuits c ON r.circuitId = c.circuitId\nWHERE\n    r.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT `lat`, `lng` FROM `circuits` WHERE `name` = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT nationality\nFROM drivers\nWHERE dob = (SELECT MIN(dob) FROM drivers);\t----- bird -----\tformula_1",
    "212": "SELECT d.driverRef\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE r.year = 2007\n  AND r.name = 'Canadian Grand Prix'\n  AND res.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT\n    r.raceId,\n    r.name,\n    r.date,\n    res.rank\nFROM\n    results res\n    JOIN drivers d ON res.driverId = d.driverId\n    JOIN races r ON res.raceId = r.raceId\nWHERE\n    d.forename = 'Lewis'\n    AND d.surname = 'Hamilton'\nORDER BY\n    res.rank ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(CAST(fastestLapSpeed AS DECIMAL(10,2))) AS maxSpeed\nFROM results r\nJOIN races rs ON r.raceId = rs.raceId\nWHERE rs.year = 2009\n  AND rs.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "215": "SELECT r.positionOrder\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races rs ON r.raceId = rs.raceId\nWHERE rs.year = 2008\n  AND rs.name = 'Chinese Grand Prix'\n  AND d.forename = 'Lewis'\n  AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "216": "SELECT r.time\nFROM races r\nJOIN results res ON res.raceId = r.raceId\nWHERE r.year = 2008\n  AND r.name = 'Chinese Grand Prix'\n  AND res.position = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT ds.driverId) AS finished_drivers_with_participation\nFROM driverStandings ds\nJOIN races r ON ds.raceId = r.raceId\nWHERE r.year = 2008\n  AND r.name = 'Chinese Grand Prix'\n  AND ds.position IS NOT NULL\n  AND EXISTS (SELECT 1 FROM results rs WHERE rs.driverId = ds.driverId);\t----- bird -----\tformula_1",
    "218": "SELECT\n    ROUND((last_ms - champ_ms) / last_ms * 100, 2) AS percentage_faster\nFROM (\n    SELECT\n        champ.milliseconds AS champ_ms,\n        last.milliseconds AS last_ms\n    FROM (\n        SELECT r.raceId\n        FROM races r\n        WHERE r.year = 2008\n          AND r.name = 'Australian Grand Prix'\n    ) AS target\n    JOIN results champ\n        ON champ.raceId = target.raceId\n        AND champ.position = 1\n    JOIN results last\n        ON last.raceId = target.raceId\n        AND last.position = (\n            SELECT MAX(position)\n            FROM results\n            WHERE raceId = target.raceId\n        )\n) AS t;\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) AS number_of_circuits  \nFROM circuits  \nWHERE location = 'Adelaide'  \n  AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cs.points) AS max_points\nFROM constructorStandings cs\nJOIN constructors c ON cs.constructorId = c.constructorId\nWHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT c.name\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE cr.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) AS japanese_zero_point_constructors\nFROM (\n    SELECT cr.constructorId\n    FROM constructorResults cr\n    JOIN constructors c ON cr.constructorId = c.constructorId\n    WHERE c.nationality = 'Japanese'\n      AND cr.points = 0\n    GROUP BY cr.constructorId\n    HAVING COUNT(DISTINCT cr.raceId) = 2\n) AS t;\t----- bird -----\tformula_1",
    "223": "SELECT \n    ROUND(\n        IFNULL(\n            SUM(CASE WHEN r.time IS NOT NULL THEN 1 ELSE 0 END) \n            / COUNT(*) * 100, \n        0\n    ) AS race_completion_percentage\nFROM (\n    SELECT res.driverId, res.time \n    FROM results res\n    JOIN races rc ON res.raceId = rc.raceId\n    JOIN drivers d ON res.driverId = d.driverId\n    WHERE rc.year BETWEEN 2007 AND 2009\n    AND d.nationality = 'Japanese'\n) r;\t----- bird -----\tformula_1",
    "224": "SELECT \n    r.year,\n    AVG(\n        TIME_TO_SEC(\n            STR_TO_DATE(sub.time, '%H:%i:%s.%f')\n        )\n    ) AS avg_champion_seconds\nFROM\n    results AS sub\nJOIN\n    races AS r\n    ON sub.raceId = r.raceId\nWHERE\n    sub.time IS NOT NULL\n    AND r.year < 1975\n    AND sub.driverId = (\n        SELECT\n            ds.driverId\n        FROM\n            driverStandings AS ds\n        WHERE\n            ds.raceId = sub.raceId\n        ORDER BY\n            ds.points DESC\n        LIMIT 1\n    )\nGROUP BY\n    r.year;\t----- bird -----\tformula_1",
    "225": "SELECT r.fastestLap\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2009\n  AND r.driverId = (\n      SELECT ds.driverId\n      FROM driverStandings ds\n      JOIN races r2 ON ds.raceId = r2.raceId\n      WHERE r2.year = 2009\n      GROUP BY ds.driverId\n      ORDER BY SUM(ds.points) DESC\n      LIMIT 1\n  )\nLIMIT 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(r.fastestLapSpeed) AS average_fastest_lap_speed\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Spanish Grand Prix'\n  AND ra.year = 2009;\t----- bird -----\tformula_1",
    "227": "SELECT\n    ROUND(\n        100.0 *\n        SUM(CASE WHEN d.dob < '1985-01-01' AND r.laps > 50 THEN 1 ELSE 0 END) /\n        SUM(1),\n        2\n    ) AS percentage\nFROM\n    driverStandings ds\n    JOIN drivers d ON ds.driverId = d.driverId\n    JOIN races r ON ds.raceId = r.raceId\nWHERE\n    r.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT lt.driverId) AS french_driver_count\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE d.nationality = 'French'\n  AND lt.milliseconds < 120000;\t----- bird -----\tformula_1",
    "229": "SELECT `code` \nFROM `drivers` \nWHERE `nationality` = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT driverRef AS code, dob\nFROM (\n    SELECT driverRef, dob, \n           ROW_NUMBER() OVER (ORDER BY dob DESC) AS rn\n    FROM drivers\n) AS t\nWHERE rn <= 3;\n\nSELECT COUNT(*) AS dutch_count\nFROM (\n    SELECT nationality,\n           ROW_NUMBER() OVER (ORDER BY dob DESC) AS rn\n    FROM drivers\n) AS t\nWHERE rn <= 3 AND nationality = 'Netherlands';\t----- bird -----\tformula_1",
    "231": "SELECT driverRef\nFROM drivers\nWHERE dob IS NOT NULL\nORDER BY dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT d.driverId, d.code\nFROM drivers d\nJOIN lapTimes lt ON lt.driverId = d.driverId\nJOIN (\n    SELECT raceId, MIN(milliseconds) AS min_ms\n    FROM lapTimes\n    GROUP BY raceId\n) AS fast ON lt.raceId = fast.raceId AND lt.milliseconds = fast.min_ms\nWHERE YEAR(d.dob) = 1971;\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) AS disqualified_finishers\nFROM results\nWHERE raceId > 50\n  AND raceId < 100\n  AND statusId = 2\n  AND time IS NULL;\t----- bird -----\tformula_1",
    "234": "SELECT location, lat, lng, COUNT(*) AS times_held\nFROM circuits\nWHERE country = 'Austria'\nGROUP BY location, lat, lng;\t----- bird -----\tformula_1",
    "235": "SELECT d.forename, d.surname, r.date, r.time\nFROM drivers d\nJOIN (\n    SELECT driverId, MIN(date) AS firstQualify\n    FROM qualifying q\n    JOIN races r ON q.raceId = r.raceId\n    GROUP BY driverId\n) fq ON d.driverId = fq.driverId\nJOIN races r ON r.raceId = (\n    SELECT raceId FROM races WHERE date = fq.firstQualify\n)\nWHERE d.dob = (\n    SELECT MAX(dob) FROM drivers\n);\t----- bird -----\tformula_1",
    "236": "SELECT CONCAT(forename, ' ', surname) AS full_name, AVG(milliseconds) AS avg_duration\nFROM pitStops\nJOIN drivers USING(driverId)\nWHERE drivers.nationality = 'German'\n  AND YEAR(dob) BETWEEN 1980 AND 1985\nGROUP BY driverId\nORDER BY avg_duration ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT d.forename, d.surname, CONCAT(r.time, '.', LPAD(r.milliseconds,3,'0')) AS finish_time\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008\n  AND ra.name = 'Canadian Grand Prix'\n  AND r.position = 1\n  AND r.positionText = '1'\nORDER BY r.position, r.positionOrder\nLIMIT 1;\t----- bird -----\tformula_1",
    "238": "SELECT\n  c.constructorRef,\n  c.url,\n  r.time\nFROM\n  results r\n  JOIN constructors c ON r.constructorId = c.constructorId\n  JOIN races ra ON r.raceId = ra.raceId\nWHERE\n  ra.year = 2009\n  AND ra.round = 10\n  AND r.position = 1;\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT SUM(cr.points) AS total_points, c.name, c.nationality\nFROM races r\nJOIN constructorResults cr ON r.raceId = cr.raceId\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE r.year BETWEEN 1980 AND 2010\n  AND r.name LIKE '%Monaco%'\nGROUP BY cr.constructorId, c.name, c.nationality\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT d.forename, d.surname\nFROM qualifying q\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN drivers d ON q.driverId = d.driverId\nWHERE r.year = 2008\n  AND c.name LIKE '%Marina Bay Street Circuit%'\n  AND q.q3 = (\n      SELECT MIN(q2.q3)\n      FROM qualifying q2\n      JOIN races r2 ON q2.raceId = r2.raceId\n      JOIN circuits c2 ON r2.circuitId = c2.circuitId\n      WHERE r2.year = 2008\n        AND c2.name LIKE '%Marina Bay Street Circuit%'\n  );\t----- bird -----\tformula_1",
    "242": "SELECT d.forename, d.surname, d.nationality, r.name\nFROM (\n  SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1\n) AS youngest\nJOIN drivers d ON d.driverId = youngest.driverId\nJOIN results res ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE r.date = (\n  SELECT MIN(r2.date)\n  FROM results res2\n  JOIN races r2 ON res2.raceId = r2.raceId\n  WHERE res2.driverId = d.driverId\n)\nLIMIT 1;\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) AS accident_count\nFROM results r\nJOIN status s ON r.statusId = s.statusId\nJOIN races rs ON r.raceId = rs.raceId\nWHERE rs.name = 'Canadian Grand Prix'\n  AND s.statusId = 3\n  AND r.driverId = (\n      SELECT driverId\n      FROM results r2\n      JOIN status s2 ON r2.statusId = s2.statusId\n      JOIN races rs2 ON r2.raceId = rs2.raceId\n      WHERE rs2.name = 'Canadian Grand Prix'\n        AND s2.statusId = 3\n      GROUP BY driverId\n      ORDER BY COUNT(*) DESC\n      LIMIT 1\n  );\t----- bird -----\tformula_1",
    "244": "SELECT d.forename, d.surname\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.time IS NOT NULL\nORDER BY r.time ASC\nLIMIT 20;\t----- bird -----\tformula_1",
    "245": "SELECT c.circuitRef,\n       l.time\nFROM circuits c\nJOIN races r\n  ON r.circuitId = c.circuitId\nJOIN lapTimes l\n  ON l.raceId = r.raceId\nWHERE c.country = 'Italy'\n  AND l.milliseconds = (\n        SELECT MIN(l2.milliseconds)\n        FROM lapTimes l2\n        JOIN races r2\n          ON r2.raceId = l2.raceId\n        WHERE r2.circuitId = c.circuitId\n      )\nORDER BY l.milliseconds ASC;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) AS cnt\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength'\n  AND s.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) AS blue_eyes_agility_count\nFROM superhero AS s\nJOIN colour AS c ON s.eye_colour_id = c.id\nJOIN hero_power AS hp ON s.id = hp.hero_id\nJOIN superpower AS sp ON hp.power_id = sp.id\nWHERE c.colour = 'Blue' AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'Blue'\n  AND c2.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT s.superhero_name, s.height_cm\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nORDER BY s.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT\n    c.colour,\n    COUNT(s.id) AS count\nFROM\n    superhero s\n    JOIN colour c ON s.eye_colour_id = c.id\n    JOIN publisher p ON s.publisher_id = p.id\nWHERE\n    p.publisher_name = 'Marvel Comics'\nGROUP BY\n    c.id,\n    c.colour\nORDER BY\n    count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE p.publisher_name = 'Marvel Comics'\n  AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name\nFROM publisher p\nJOIN superhero s ON s.publisher_id = p.id\nJOIN hero_attribute ha ON ha.hero_id = s.id\nJOIN attribute a ON a.id = ha.attribute_id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*)\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE c.colour = 'Gold'\n  AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "254": "SELECT h.superhero_name, ha.attribute_value\nFROM superhero h\nJOIN hero_attribute ha ON h.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "255": "SELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON a.id = ha.attribute_id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE p.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT ha.hero_id) AS female_strength_100_count\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN superhero s ON ha.hero_id = s.id\nJOIN gender g ON s.gender_id = g.id\nWHERE a.attribute_name = 'Strength'\n  AND ha.attribute_value = 100\n  AND g.gender = 'Female';\t----- bird -----\tsuperhero",
    "259": "SELECT\n    (SUM(a.alignment = 'Bad') / COUNT(*) * 100) AS percentage,\n    SUM(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_bad\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "260": "SELECT \n    (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') -\n    (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') AS difference;\t----- bird -----\tsuperhero",
    "261": "SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) AS total_superheroes_without_full_name\nFROM superhero\nWHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) AS avg_female_weight\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female';\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superhero sh\nJOIN gender g ON sh.gender_id = g.id\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE g.gender = 'Male'\nLIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.height_cm BETWEEN 170 AND 190\n  AND c.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour AS hair_colour  \nFROM superhero s  \nJOIN race r ON s.race_id = r.id  \nJOIN colour c ON s.hair_colour_id = c.id  \nWHERE s.height_cm = 185  \n  AND r.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT ROUND(100.0 * SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(*), 2) AS percentage\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT s.superhero_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Male'\n  AND s.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero);\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT h.id) AS stealth_hero_count\nFROM superhero h\nJOIN hero_power hp ON h.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE a.attribute_name = 'durability'\n  AND p.publisher_name = 'Dark Horse Comics'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT \n    ec.colour AS eye_colour,\n    hc.colour AS hair_colour,\n    sc.colour AS skin_colour\nFROM superhero s\nJOIN colour ec ON s.eye_colour_id = ec.id\nJOIN colour hc ON s.hair_colour_id = hc.id\nJOIN colour sc ON s.skin_colour_id = sc.id\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE g.gender = 'Female'\n  AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT\n    s.superhero_name,\n    p.publisher_name\nFROM\n    superhero s\n    LEFT JOIN colour e ON s.eye_colour_id = e.id\n    LEFT JOIN colour h ON s.hair_colour_id = h.id\n    LEFT JOIN colour sk ON s.skin_colour_id = sk.id\n    LEFT JOIN publisher p ON s.publisher_id = p.id\nWHERE\n    h.id = e.id\n    AND h.id = sk.id;\t----- bird -----\tsuperhero",
    "275": "SELECT\n    SUM(CASE WHEN c.colour = 'Blue' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS percentage\nFROM\n    superhero s\n    JOIN gender g ON s.gender_id = g.id\n    JOIN colour c ON s.skin_colour_id = c.id\nWHERE\n    g.gender = 'Female';\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) AS number_of_powers\nFROM hero_power hp\nJOIN superhero s ON hp.hero_id = s.id\nWHERE s.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT s.height_cm\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour e ON s.eye_colour_id = e.id\nJOIN colour h ON s.hair_colour_id = h.id\nWHERE e.colour = 'Black' AND h.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT s.superhero_name\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT ha.hero_id) AS hero_count\nFROM hero_attribute ha\nJOIN attribute a ON a.id = ha.attribute_id\nWHERE a.attribute_name = 'Strength'\n  AND ha.attribute_value = (\n    SELECT MAX(attribute_value)\n    FROM hero_attribute ha2\n    JOIN attribute a2 ON a2.id = ha2.attribute_id\n    WHERE a2.attribute_name = 'Strength'\n  );\t----- bird -----\tsuperhero",
    "281": "SELECT \n    100 * SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) / COUNT(*) AS female_percentage\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT (e.weight_kg - c.weight_kg) AS difference\nFROM superhero e\nJOIN superhero c ON 1=1\nWHERE e.full_name = 'Emil Blonsky'\n  AND c.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "283": "SELECT DIVIDE(SUM(height_cm), COUNT(*)) AS average_height\nFROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour ce ON s.eye_colour_id = ce.id\nJOIN colour ch ON s.hair_colour_id = ch.id\nWHERE ce.colour = 'Blue' AND ch.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT \n    (SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) / COUNT(*) * 100.0) AS percentage_of_superheroes_with_blue_eyes\nFROM superhero;\t----- bird -----\tsuperhero",
    "290": "SELECT DIVIDE(\n    SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END),\n    SUM(CASE WHEN g.gender = 'Male' THEN 1 ELSE 0 END)\n) AS ratio\nFROM superhero sh\nJOIN gender g ON sh.gender_id = g.id;\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT\n    (SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) -\n     SUM(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference\nFROM superhero\nWHERE weight_kg = 0 OR weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*)  \nFROM superhero s  \nJOIN colour c ON s.skin_colour_id = c.id  \nJOIN alignment a ON s.alignment_id = a.id  \nWHERE c.colour = 'Green' AND a.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON hp.hero_id = s.id\nJOIN superpower sp ON sp.id = hp.power_id\nWHERE sp.power_name = 'Wind Control'\nORDER BY s.superhero_name;\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender\nFROM superhero s\nJOIN hero_power hp ON hp.hero_id = s.id\nJOIN superpower p ON p.id = hp.power_id\nJOIN gender g ON g.id = s.gender_id\nWHERE p.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT\n  (SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) -\n   SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS difference\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, Reputation\nFROM users\nWHERE DisplayName IN ('Harlan','Jarrod Dixon')\nORDER BY Reputation DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName\nFROM users\nWHERE YEAR(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) AS UsersAfter2014_09_01\nFROM users\nWHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName AS OwnerDisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) AS PostCount  \nFROM posts  \nWHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": "SELECT\n    `LastEditorDisplayName`\nFROM\n    `posts`\nWHERE\n    `Title` = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) AS PostCount\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Age > 65\n  AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body\nFROM tags t\nJOIN posts p ON t.ExcerptPostId = p.Id\nWHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) AS avg_score\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT \n  ROUND(\n    (CAST(SUM(CASE WHEN u.Age > 65 THEN 1 ELSE 0 END) AS DECIMAL(10,2))\n     / COUNT(*)) * 100,\n    2\n  ) AS percentage\nFROM posts p\nLEFT JOIN users u\n  ON p.OwnerUserId = u.Id\nWHERE p.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.UserId = 3025\n  AND c.CreationDate = '2014-04-23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "308": "SELECT \n    CASE WHEN p.ClosedDate IS NULL THEN 'Yes' ELSE 'No' END AS well_finished\nFROM comments AS c\nJOIN posts AS p ON c.PostId = p.Id\nWHERE c.UserId = 23853\n  AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) AS number_of_posts  \nFROM posts p  \nJOIN users u ON p.OwnerUserId = u.Id  \nWHERE u.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT u.DisplayName\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT\n    COALESCE(p.post_count,0) / COALESCE(v.vote_count,1) AS post_to_vote_ratio\nFROM\n    (SELECT COUNT(*) AS post_count\n     FROM posts\n     WHERE OwnerUserId = 24) p\nCROSS JOIN\n    (SELECT COUNT(*) AS vote_count\n     FROM votes\n     WHERE UserId = 24) v;\t----- bird -----\tcodebase_community",
    "312": "SELECT `ViewCount` AS views  \nFROM `posts`  \nWHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text\nFROM comments\nWHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT UserDisplayName\nFROM comments\nWHERE Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT u.Reputation\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data?';\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text\nFROM comments AS c\nJOIN postHistory AS ph ON c.UserId = ph.UserId\nJOIN posts AS p ON ph.PostId = p.Id\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\n  AND ph.PostHistoryTypeId = 2;\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nJOIN users u ON v.UserId = u.Id\nWHERE v.BountyAmount = 50\n  AND p.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": "SELECT\n    p.Title,\n    c.Text,\n    AVG(p.ViewCount) AS AvgViewCount\nFROM\n    posts p\nLEFT JOIN\n    comments c\n    ON c.PostId = p.Id\nWHERE\n    p.Tags LIKE '%<humor>%'\nGROUP BY\n    p.Id,\n    p.Title,\n    c.Text;\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) AS users_with_more_than_5_badges\nFROM (\n    SELECT UserId\n    FROM badges\n    GROUP BY UserId\n    HAVING COUNT(*) > 5\n) AS subquery;\t----- bird -----\tcodebase_community",
    "321": "SELECT DISTINCT u.Id, u.DisplayName\nFROM users u\nJOIN posts p ON p.OwnerUserId = u.Id\nJOIN postHistory ph ON ph.PostId = p.Id\nWHERE p.ViewCount >= 1000\nGROUP BY u.Id, p.Id\nHAVING COUNT(ph.Id) = 1;\t----- bird -----\tcodebase_community",
    "322": "SELECT \n    ( (COUNT(CASE WHEN YEAR(Date) = 2010 THEN 1 END) * 100.0 / COUNT(*))\n      - (COUNT(CASE WHEN YEAR(Date) = 2011 THEN 1 END) * 100.0 / COUNT(*)) ) \n    AS percentage_difference\nFROM badges\nWHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "323": "SELECT\n    AVG(u.UpVotes) AS avg_upvotes,\n    AVG(u.Age) AS avg_age\nFROM users u\nJOIN (\n    SELECT UserId, COUNT(*) AS post_count\n    FROM posts\n    GROUP BY UserId\n    HAVING post_count > 10\n) p ON u.Id = p.UserId;\t----- bird -----\tcodebase_community",
    "324": "SELECT \n    DIVIDE(\n        SUM(CASE WHEN YEAR(CreationDate) = 2010 THEN 1 ELSE 0 END),\n        SUM(CASE WHEN YEAR(CreationDate) = 2011 THEN 1 ELSE 0 END)\n    ) AS ratio\nFROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts AS p\nJOIN users AS u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT u.DisplayName,\n       SUM(p.ViewCount) AS TotalViews\nFROM posts p\nJOIN users u\n  ON p.OwnerUserId = u.Id\nWHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY u.DisplayName\nORDER BY TotalViews DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT `Tags`\nFROM `posts`\nWHERE `OwnerDisplayName` = 'Mark Meckes'\n  AND `CommentCount` = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT\n    DIVIDE(\n        SUM(CASE WHEN Tags LIKE '%<r>%' THEN 1 ELSE 0 END),\n        COUNT(*)\n    ) * 100 AS percentage\nFROM posts\nWHERE OwnerDisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "329": "SELECT \n  IFNULL(SUM(CASE WHEN u.DisplayName = 'Mornington' THEN p.ViewCount END), 0) - \n  IFNULL(SUM(CASE WHEN u.DisplayName = 'Amos' THEN p.ViewCount END), 0) AS ViewCountDifference\nFROM posts p\nLEFT JOIN users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "330": "SELECT\n    COUNT(pl.Id) / 12.0 AS avg_monthly_links\nFROM\n    postLinks pl\n    JOIN posts p ON pl.PostId = p.Id\nWHERE\n    YEAR(pl.CreationDate) = 2010\n    AND p.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) AS FirstVoteDate\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Autobiographer'\nORDER BY b.Date ASC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT u.Id, u.DisplayName, COUNT(p.Id) AS FavoritePostCount\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4\nGROUP BY u.Id, u.DisplayName;\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT Id, OwnerDisplayName\nFROM posts\nWHERE YEAR(CreationDate) = 2010\nORDER BY FavoriteCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT 100.0 * (\n    SELECT COUNT(*) \n    FROM posts p\n    JOIN users u ON p.OwnerUserId = u.Id\n    WHERE YEAR(p.CreaionDate) = 2011 AND u.Reputation > 1000\n) / (\n    SELECT COUNT(*) \n    FROM posts\n) AS percentage_of_posts;\t----- bird -----\tcodebase_community",
    "337": "SELECT\n    SUM(p.ViewCount) AS TotalViews,\n    u.DisplayName AS LastPosterName\nFROM\n    posts p\nINNER JOIN\n    users u ON p.OwnerUserId = u.Id\nWHERE\n    p.Body = 'Computer Game Datasets'\nORDER BY\n    p.CreaionDate DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*)  \nFROM comments c  \nJOIN posts p ON c.PostId = p.Id  \nWHERE p.Score = (SELECT MAX(Score) FROM posts);\t----- bird -----\tcodebase_community",
    "339": "SELECT\n    c.Text,\n    c.UserDisplayName\nFROM\n    comments c\n    JOIN posts p ON c.PostId = p.Id\nWHERE\n    p.Title = 'Analysing wind data with R'\nORDER BY\n    c.CreationDate DESC\nLIMIT\n    10;\t----- bird -----\tcodebase_community",
    "340": "SELECT\n    100 * SUM(CASE WHEN p.Score > 50 THEN 1 ELSE 0 END) / COUNT(*) AS percentage_above_50\nFROM\n    posts p\nWHERE\n    p.OwnerUserId IN (\n        SELECT u.Id\n        FROM users u\n        WHERE u.Reputation = (\n            SELECT MAX(Reputation)\n            FROM users\n        )\n    );\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId\nFROM tags\nWHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) AS zero_score_comments\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE p.CommentCount = 1\n  AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT DIVIDE(cntZero,total)*100 AS percentage\nFROM (\n    SELECT COUNT(*) AS total,\n           SUM(CASE WHEN u.UpVotes = 0 THEN 1 ELSE 0 END) AS cntZero\n    FROM comments c\n    JOIN users u ON c.UserId = u.Id\n    WHERE c.Score BETWEEN 5 AND 10\n) AS t;\t----- bird -----\tcodebase_community",
    "346": "SELECT *\nFROM cards\nWHERE cardKingdomFoilId IS NOT NULL\n  AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT `id`\nFROM `cards`\nWHERE `borderColor` = 'borderless'\n  AND NOT (`cardKingdomId` IS NOT NULL AND `cardKingdomFoilId` IS NOT NULL);\t----- bird -----\tcard_games",
    "348": "SELECT c.* \nFROM cards c \nJOIN legalities l ON c.id = l.id \nWHERE c.rarity = 'mythic' \n  AND l.status = 'Banned' \n  AND l.format = 'gladiator';\t----- bird -----\tcard_games",
    "349": "SELECT c.id, c.name, l.status\nFROM cards c\nJOIN legalities l ON c.id = l.id\nWHERE c.type LIKE '%Artifact%'\n  AND c.side IS NULL\n  AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'commander'\n  AND l.status = 'Legal'\n  AND (c.power = '*' OR c.power IS NULL);\t----- bird -----\tcard_games",
    "351": "SELECT\n    c.id,\n    r.text,\n    c.hasContentWarning\nFROM cards c\nJOIN rulings r ON c.id = r.id\nWHERE c.artist = 'Stephen Daniel'\n  AND r.text IS NOT NULL;\t----- bird -----\tcard_games",
    "352": "SELECT\n    c.name AS card_name,\n    c.artist,\n    c.isPromo\nFROM\n    cards c\nJOIN\n    (SELECT rulings.uuid, COUNT(*) AS rulings_count\n     FROM rulings\n     GROUP BY rulings.uuid\n     ORDER BY rulings_count DESC\n     LIMIT 1) AS r\n    ON c.uuid = r.uuid;\t----- bird -----\tcard_games",
    "353": "SELECT ROUND(SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS percentage_of_chinese_simplified_cards FROM foreign_data;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) AS infinite_power_cards\nFROM cards\nWHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor\nFROM cards\nWHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT l.format, l.status\nFROM legalities l\nJOIN cards c ON l.id = c.id\nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT ROUND(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) / COUNT(*) * 100, 2) AS percentage_of_borderless_cards FROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT\n    100.0 * SUM(CASE WHEN fd.language = 'French' THEN 1 ELSE 0 END) / COUNT(*) AS percentage\nFROM\n    foreign_data fd\n    JOIN cards c ON c.id = fd.id\nWHERE\n    c.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) AS total\nFROM cards\nWHERE originalType = 'Summon - Angel'\n  AND subtypes NOT LIKE '%Angel%';\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) AS banned_white_border_cards\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE legalities.status = 'Banned'\n  AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT c.id, f.language\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE c.originalType = 'Artifact'\n  AND c.colors = 'B'\n  AND f.language IS NOT NULL;\t----- bird -----\tcard_games",
    "363": "SELECT manaCost\nFROM cards\nWHERE layout='normal'\n  AND frameVersion='2003'\n  AND borderColor='black'\n  AND availability='mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT \n    ROUND(COUNT(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 END) / COUNT(*) * 100, 2) AS percentage,\n    c.id\nFROM cards c\nCROSS JOIN (\n    SELECT COUNT(*) AS total, COUNT(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 END) AS story_not_textless\n    FROM cards\n) AS sub;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT s.id) AS brazilian_portuguese_commander_sets\nFROM sets s\nJOIN set_translations st ON s.id = st.id\nWHERE s.block = 'Commander'\n  AND st.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT fd.type\nFROM foreign_data AS fd\nJOIN cards AS c ON c.uuid = fd.uuid\nWHERE fd.language = 'German'\n  AND c.subtypes IS NOT NULL\n  AND c.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) AS unknown_power_triggered_ability_cards\nFROM cards\nWHERE (power IS NULL OR power = '*')\n  AND `text` LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*)  \nFROM cards AS c  \nJOIN legalities AS l ON c.id = l.id  \nJOIN rulings AS r ON c.id = r.id  \nWHERE l.format = 'premodern'  \n  AND r.text = 'This is a triggered mana ability.'  \n  AND c.side IS NULL;\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.type LIKE '%Creature%'\n  AND c.layout = 'normal'\n  AND c.borderColor = 'black'\n  AND c.artist = 'Matthew D. Wilson'\n  AND fd.language = 'French';\t----- bird -----\tcard_games",
    "370": "SELECT st.language\nFROM set_translations AS st\nJOIN sets AS s ON st.setCode = s.code\nWHERE s.baseSetSize = 180\n  AND s.block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": "SELECT \n    DIVIDE(\n        SUM(hasContentWarning = 0),\n        COUNT(id)\n    ) * 100 AS percentage\nFROM \n    cards \nINNER JOIN \n    legalities \nON \n    cards.id = legalities.id\nWHERE \n    format = 'commander' AND \n    status = 'legal' AND \n    hasContentWarning = 0;\t----- bird -----\tcard_games",
    "372": "SELECT\n    ROUND(\n        (SUM(CASE WHEN f.language = 'French' THEN 1 ELSE 0 END) /\n         SUM(CASE WHEN c.power IS NULL OR c.power = '*' THEN 1 ELSE 0 END))\n        * 100, 2) AS percentage_of_french_cards_without_power\nFROM cards c\nLEFT JOIN foreign_data f ON c.uuid = f.uuid;\t----- bird -----\tcard_games",
    "373": "SELECT language \nFROM foreign_data \nWHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT\n    100 *\n    SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END)\n    / NULLIF(\n        SUM(CASE WHEN isTextless = 1 THEN 1 ELSE 0 END),\n        0\n    ) AS proportion\nFROM cards;\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT fd.language\nFROM foreign_data fd\nJOIN sets s ON fd.uuid = s.id\nWHERE s.mcmName = 'Archenemy'\n  AND s.setCode = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT fd.language\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE c.name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost\nFROM cards\nWHERE name IN ('Serra Angel', 'Shrine Keeper')\nORDER BY convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM set_translations AS st\nJOIN sets AS s ON st.setCode = s.code\nWHERE st.language = 'Italian'\n  AND s.code = (SELECT setCode FROM cards WHERE name = 'Ancestor''s Chosen');\t----- bird -----\tcard_games",
    "379": "SELECT\n    CASE WHEN EXISTS (\n        SELECT 1\n        FROM cards c\n        JOIN foreign_data fd ON c.id = fd.id\n        WHERE c.name = 'Ancestor''s Chosen'\n          AND fd.language = 'Korean'\n    ) THEN 'Yes' ELSE 'No' END AS Korean_Version;\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) AS number_of_cards\nFROM cards c\nJOIN set_translations st ON st.setCode = c.setCode\nWHERE st.translation = 'Hauptset Zehnte Edition'\n  AND c.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT st.translation\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE s.name = 'Eighth Edition'\n  AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT c.*\nFROM cards c\nJOIN sets s ON s.code = c.setCode\nWHERE c.name = 'Angel of Mercy'\n  AND s.mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.id) AS italian_translation_count\nFROM sets s\nJOIN set_translations st ON s.id = st.id\nWHERE s.block = 'Ice Age'\n  AND st.language = 'Italian'\n  AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT s.isForeignOnly\nFROM sets s\nJOIN cards c ON s.code = c.setCode\nWHERE c.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) AS count_of_sets\nFROM set_translations st\nJOIN sets s ON st.id = s.id\nWHERE st.language = 'Italian'\n  AND st.translation IS NOT NULL\n  AND s.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT artist\nFROM cards\nWHERE setCode = 'Coldsnap'\n  AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\n  AND c.convertedManaCost > 5\n  AND (c.power = '*' OR c.power IS NULL);\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavorText \nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.name = 'Ancestor''s Chosen'\n  AND fd.language = 'Italian';\t----- bird -----\tcard_games",
    "389": "SELECT r.text\nFROM rulings r\nJOIN foreign_data f ON r.id = f.id\nJOIN cards c ON r.id = c.id\nWHERE c.setCode = 'COLDSNAP' AND f.language = 'Italian';\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM cards c\nJOIN foreign_data fd ON c.id = fd.id\nWHERE c.setCode = 'COLDSNAP'\n  AND fd.language = 'Italian'\n  AND c.convertedManaCost = (\n    SELECT MAX(convertedManaCost)\n    FROM cards\n    WHERE setCode = 'COLDSNAP'\n  );\t----- bird -----\tcard_games",
    "391": "SELECT ROUND(SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) / COUNT(*) * 100, 2) AS percentage\nFROM cards\nWHERE setCode = 'C13';\t----- bird -----\tcard_games",
    "392": "SELECT\n    (SUM(CASE WHEN setCode = 'Coldsnap' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) /\n     SUM(CASE WHEN name = 'Coldsnap' THEN 1 ELSE 0 END)) * 100 AS percentage\nFROM cards;\t----- bird -----\tcard_games",
    "393": "SELECT l.format,\n       GROUP_CONCAT(c.name ORDER BY c.name SEPARATOR ', ') AS card_names\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\nGROUP BY l.format\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards AS c\nJOIN legalities AS l ON c.id = l.id\nWHERE c.edhrecRank = 1\n  AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN legalities l ON c.uuid = l.uuid\nWHERE s.name = 'Hour of Devastation'\n  AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT DISTINCT s.name\nFROM sets s\nJOIN set_translations st_k ON s.id = st_k.id AND st_k.language = 'Korean'\nLEFT JOIN set_translations st_j ON s.id = st_j.id AND st_j.language = 'Japanese'\nWHERE st_j.id IS NULL;\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT c.frameVersion, c.name\nFROM cards c\nWHERE c.artist = 'Allen Williams';\n\nSELECT l.uuid, l.format, l.status\nFROM legalities l\nWHERE l.status = 'Banned';\t----- bird -----\tcard_games",
    "398": "SELECT bond_type, COUNT(*) AS cnt\nFROM bond\nWHERE bond_type IS NOT NULL\nGROUP BY bond_type\nORDER BY cnt DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(o_count) \nFROM (\n    SELECT m.molecule_id,\n           COUNT(a.atom_id) AS o_count\n    FROM molecule m\n    LEFT JOIN bond b \n           ON m.molecule_id = b.molecule_id AND b.bond_type = '-'\n    LEFT JOIN connected c \n           ON b.bond_id = c.bond_id\n    LEFT JOIN atom a \n           ON c.atom_id = a.atom_id AND a.element = 'o'\n    GROUP BY m.molecule_id\n) AS t;\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonds_per_atom) AS avg_single_bonded\nFROM (\n    SELECT m.molecule_id,\n           DIVIDE(SUM(b.bond_type = '-'), COUNT(a.atom_id)) AS single_bonds_per_atom\n    FROM molecule m\n    LEFT JOIN bond b ON m.molecule_id = b.molecule_id\n    LEFT JOIN atom a ON m.molecule_id = a.molecule_id\n    WHERE m.label = '+'\n    GROUP BY m.molecule_id\n) AS sub;\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '#'\n  AND m.label = '+';\t----- bird -----\ttoxicology",
    "402": "SELECT\n    SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) /\n    COUNT(DISTINCT a.atom_id) AS percentage_of_carbon_in_double_bond_molecules\nFROM atom a\nJOIN connected con ON a.atom_id = con.atom_id\nJOIN bond b ON con.bond_id = b.bond_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "403": "SELECT DISTINCT e.element\nFROM atom e\nJOIN connected c\n  ON (e.atom_id = c.atom_id OR e.atom_id = c.atom_id2)\nWHERE c.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON a.atom_id = c.atom_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT m.label, COUNT(*) AS cnt\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'h'\nGROUP BY m.label\nORDER BY cnt DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT a.element\nFROM atom AS a\nJOIN molecule AS m ON a.molecule_id = m.molecule_id\nWHERE m.label = '-'\nGROUP BY a.element\nORDER BY COUNT(*) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20')\n   OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) AS total_atoms\nFROM atom AS a\nJOIN bond AS b ON a.molecule_id = b.molecule_id\nWHERE b.bond_type = '-'\n  AND (a.element = 'i' OR a.element = 's');\t----- bird -----\ttoxicology",
    "409": "SELECT DIVIDE(SUM(CASE WHEN COALESCE(f_count,0) = 0 THEN 1 ELSE 0 END) * 100, COUNT(*)) AS percentage_of_carcinogenic_non_fluorine\nFROM (\n    SELECT m.molecule_id, COUNT(a.atom_id) AS f_count\n    FROM molecule m\n    LEFT JOIN atom a ON m.molecule_id = a.molecule_id AND a.element = 'f'\n    WHERE m.label = '+'\n    GROUP BY m.molecule_id\n) AS sub;\t----- bird -----\ttoxicology",
    "410": "SELECT\n    IFNULL(\n        SUM(CASE WHEN bond.bond_type = '#' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond.bond_id),\n        0\n    ) AS percent_carcinogenic_triple\nFROM\n    molecule\n    JOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE\n    molecule.label = '+';\t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM atom\nWHERE molcule_id = 'TR000'\nGROUP BY element\nORDER BY element ASC\nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT \n  ROUND(\n    IFNULL(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / COUNT(bond_id) * 100, 0),\n    5\n  ) AS percentage_of_double_bonds\nFROM bond\nWHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT \n    ROUND(100 * DIVIDE(SUM(label = '+'), COUNT(molecule_id)), 3) AS percentage\nFROM \n    molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT DIVIDE(SUM(element = 'h'), COUNT(*)) * 100 AS percent\nFROM atom\nWHERE molcule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT atom.element, molecule.label\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT\n    b.bond_type,\n    COUNT(*) AS bond_count\nFROM\n    bond b\nWHERE\n    b.molecule_id = 'TR010'\nGROUP BY\n    b.bond_type\nORDER BY\n    bond_count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = '-'\n  AND m.label = '-'\nORDER BY m.molecule_id ASC\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT c.bond_id) AS bond_count\nFROM connected c\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a1.molecule_id = 'TR009' OR a2.molecule_id = 'TR009')\n  AND (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "419": "SELECT \n    b.bond_type,\n    c.atom_id,\n    c.atom_id2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) AS connections\nFROM (\n    SELECT atom_id AS a\n    FROM connected\n    WHERE atom_id = 'TR%_19'\n    UNION ALL\n    SELECT atom_id2 AS a\n    FROM connected\n    WHERE atom_id2 = 'TR%_19'\n) AS sub;\t----- bird -----\ttoxicology",
    "421": "SELECT element\nFROM atom\nWHERE molcule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+'\n  AND SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25';\t----- bird -----\ttoxicology",
    "423": "SELECT b.bond_id\nFROM bond b\nJOIN connected c ON c.bond_id = b.bond_id\nJOIN atom a1 ON a1.atom_id = c.atom_id\nJOIN atom a2 ON a2.atom_id = c.atom_id2\nWHERE a1.element = 'p' AND a2.element = 'n'\n   OR a1.element = 'n' AND a2.element = 'p';\t----- bird -----\ttoxicology",
    "424": "SELECT m.molecule_id,\n       m.label,\n       COUNT(b.bond_id) AS double_bond_count,\n       CASE WHEN m.label = '+' AND COUNT(b.bond_id) > 0 THEN 'Yes' ELSE 'No' END AS carcinogenic\nFROM molecule m\nLEFT JOIN bond b ON m.molecule_id = b.molecule_id AND b.bond_type = '='\nGROUP BY m.molecule_id, m.label\nHAVING double_bond_count = (SELECT MAX(cnt) FROM\n       (SELECT m2.molecule_id, COUNT(b2.bond_id) AS cnt\n        FROM molecule m2\n        LEFT JOIN bond b2 ON m2.molecule_id = b2.molecule_id AND b2.bond_type = '='\n        GROUP BY m2.molecule_id) AS sub)\nORDER BY double_bond_count DESC, m.molecule_id;\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS avg_bonds_per_iodine\nFROM (\n    SELECT a.atom_id,\n           COUNT(c.bond_id) AS bond_count\n    FROM atom a\n    LEFT JOIN connected c ON a.atom_id = c.atom_id\n    WHERE a.element = 'i'\n    GROUP BY a.atom_id\n) AS sub;\t----- bird -----\ttoxicology",
    "426": "SELECT a.element\nFROM atom a\nLEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.atom_id IS NULL\n  AND c.atom_id2 IS NULL;\t----- bird -----\ttoxicology",
    "427": "SELECT c.atom_id, c.atom_id2\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR041'\n  AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "428": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c\n  ON a.atom_id = c.atom_id\nWHERE c.bond_id = 'TR144_8_19'\n\nUNION\n\nSELECT DISTINCT a.element\nFROM atom a\nJOIN connected c\n  ON a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT a.element AS element1, a2.element AS element2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(SUM(label = '+') * 100 / COUNT(*), 5) AS proportion\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nWHERE b.bond_type = '#'\n  AND a.element IN ('p', 'br');\t----- bird -----\ttoxicology",
    "432": "SELECT\n    m.molecule_id,\n    DIVIDE(SUM(a.element = 'cl'), COUNT(a.atom_id)) AS percent\nFROM\n    molecule m\n    JOIN bond b ON m.molecule_id = b.molecule_id\n    JOIN connected c ON c.bond_id = b.bond_id\n    JOIN atom a ON a.atom_id = c.atom_id\nWHERE\n    b.bond_type = '-'\nGROUP BY\n    m.molecule_id;\t----- bird -----\ttoxicology",
    "433": "SELECT DISTINCT a.element\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nWHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT\n    DIVIDE(\n        SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END),\n        COUNT(DISTINCT m.molecule_id)\n    ) AS percentage\nFROM\n    molecule m\n    LEFT JOIN atom a ON m.molecule_id = a.molecule_id\nWHERE\n    m.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT \n    a.molecule_id,\n    a.element\nFROM \n    atom a\n    JOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE \n    m.label = '+' \n    AND SUBSTRING(a.atom_id,7,1) = '4';\t----- bird -----\ttoxicology",
    "436": "SELECT \n    m.label,\n    DIVIDE(\n        SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END), \n        COUNT(a.atom_id)\n    ) AS ratio\nFROM \n    molecule m\nLEFT JOIN \n    atom a ON a.molecule_id = m.molecule_id\nWHERE \n    m.molecule_id = 'TR006'\nGROUP BY \n    m.label;\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id, COUNT(a.atom_id) AS atom_count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING atom_count > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) AS num_virtual_schools\nFROM satscores ss\nJOIN schools sc ON ss.cds = sc.CDSCode\nWHERE ss.AvgScrMath > 400\n  AND sc.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT `CDSCode`\nFROM frpm\nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS highest_eligible_free_rate\nFROM satscores s\nJOIN schools sch ON s.cds = sch.CDSCode\nJOIN frpm f ON f.CDSCode = sch.CDSCode\nWHERE s.NumGE1500 * 1.0 / s.NumTstTakr > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.`CDSCode`, s.`CharterNum`, sc.`AvgScrWrite`\nFROM satscores sc\nJOIN schools s ON sc.`cds` = s.`CDSCode`\nWHERE sc.`AvgScrWrite` > 499\n  AND s.`CharterNum` IS NOT NULL\nORDER BY sc.`AvgScrWrite` DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT \n    School,\n    CONCAT_WS(' ', Street, StreetAbr, City, Zip) AS FullStreetAddress,\n    `Enrollment (K-12)`,\n    `Enrollment (Ages 5-17)`,\n    (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) AS Diff\nFROM schools\nWHERE (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.`School` AS school_name\nFROM schools s\nJOIN frpm f ON s.`CDSCode` = f.`CDSCode`\nJOIN satscores sc ON sc.`cds` = f.`CDSCode`\nWHERE (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) > 0.1\n  AND sc.`NumGE1500` IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType\nFROM schools s\nJOIN satscores sa ON s.CDSCode = sa.cds\nWHERE sa.dname = 'Riverside'\nGROUP BY s.School, s.FundingType\nHAVING AVG(sa.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.CDSCode,\n       s.Street,\n       s.City,\n       s.State,\n       s.Zip\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Monterey'\n  AND f.`Free Meal Count (Ages 5-17)` >= 800\n  AND s.StatusType = 'High';\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.`School`, AVG(sc.`AvgScrWrite`) AS avg_write_score, s.`Phone` AS communication_number\nFROM schools s\nJOIN satscores sc ON sc.`cds` = s.`CDSCode`\nWHERE (s.`OpenDate` IS NOT NULL AND s.`OpenDate` > '1991-12-31')\n   OR (s.`ClosedDate` IS NOT NULL AND s.`ClosedDate` < '2000-01-01')\nGROUP BY s.`School`, s.`Phone`;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School AS SchoolName, s.DOCType\nFROM schools s\nWHERE s.Charter = 0\n  AND (s.`Enrollment (K-12)` - s.`Enrollment (Ages 5-17)`) >\n      (SELECT AVG(s2.`Enrollment (K-12)` - s2.`Enrollment (Ages 5-17)`)\n       FROM schools s2\n       WHERE s2.Charter = 0);\t----- bird -----\tcalifornia_schools",
    "448": "SELECT\n    `CDSCode`,\n    `Enrollment (K-12)` AS `Enrollment`,\n    (`Free Meal Count (K-12)` / `Enrollment (K-12)`) * 100 AS `Eligible_Free_Rate_Percent`\nFROM\n    `frpm`\nWHERE\n    `Enrollment (K-12)` IS NOT NULL\nORDER BY\n    `Enrollment (K-12)` DESC\nLIMIT 10, 1;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT \n  `School Name` AS school_name,\n  (`FRPM Count (K-12)` / `Enrollment (K-12)`) AS eligible_free_reduced_rate\nFROM `frpm`\nWHERE `Charter` = 66\nORDER BY `FRPM Count (K-12)` DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State\nFROM satscores sc\nJOIN schools s ON sc.cds = s.CDSCode\nWHERE sc.NumTstTakr > 0\nORDER BY sc.NumGE1500 / sc.NumTstTakr ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT\n    s.AdmFName1,\n    s.AdmLName1,\n    s.AdmFName2,\n    s.AdmLName2,\n    s.AdmFName3,\n    s.AdmLName3\nFROM\n    schools AS s\n    JOIN satscores AS sc ON s.CDSCode = sc.cds\nWHERE\n    sc.NumGE1500 = (\n        SELECT\n            MAX(NumGE1500)\n        FROM\n            satscores\n    );\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(fs.NumTstTakr) AS avg_test_takers\nFROM frpm fs\nJOIN schools s ON fs.CDSCode = s.CDSCode\nWHERE YEAR(s.OpenDate) = 1980\n  AND s.District = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.`Phone`\nFROM schools s\nJOIN (\n    SELECT `cds`\n    FROM satscores\n    WHERE `dname` = 'Fresno Unified'\n    ORDER BY `AvgScrRead` ASC\n    LIMIT 1\n) AS sub ON s.`CDSCode` = sub.`cds`;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.`sname` AS school_name,\n       sc.`County` AS county,\n       ss.`AvgScrRead`\nFROM satscores ss\nJOIN schools sc ON ss.`cds` = sc.`CDSCode`\nJOIN (\n    SELECT `County`,\n           `sname`,\n           `AvgScrRead`,\n           ROW_NUMBER() OVER (PARTITION BY `County` ORDER BY `AvgScrRead` DESC) AS rn\n    FROM satscores\n    JOIN schools ON satscores.`cds` = schools.`CDSCode`\n    WHERE schools.`Virtual` = 'F'\n) s ON sc.`County` = s.`County` AND sc.`sname` = s.`sname`\nWHERE s.rn <= 5;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.CDSCode, ss.AvgScrWrite\nFROM schools s\nJOIN satscores ss ON ss.cds = s.CDSCode\nWHERE CONCAT(s.AdmFName1,' ',s.AdmLName1) LIKE '%Ricci Ulrich%'\n   OR CONCAT(s.AdmFName2,' ',s.AdmLName2) LIKE '%Ricci Ulrich%'\n   OR CONCAT(s.AdmFName3,' ',s.AdmLName3) LIKE '%Ricci Ulrich%';\t----- bird -----\tcalifornia_schools",
    "456": "SELECT\n    s.`State`,\n    SUM(f.`Enrollment (K-12)`) AS TotalEnrol\nFROM\n    schools s\n    JOIN frpm f ON s.`CDSCode` = f.`CDSCode`\nWHERE\n    s.`DOC` = 31\nGROUP BY\n    s.`State`\nORDER BY\n    TotalEnrol DESC;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12.0 AS monthly_avg_opened_alameda_1980\nFROM schools\nWHERE DOC = '52'\n  AND County LIKE '%Alameda%'\n  AND YEAR(OpenDate) = 1980;\t----- bird -----\tcalifornia_schools",
    "458": "SELECT\n    CAST(\n        SUM(CASE WHEN DOC = '54' AND `County` = 'Orange' THEN 1 ELSE 0 END)\n        AS DOUBLE\n    ) / NULLIF(\n        SUM(CASE WHEN DOC = '52' AND `County` = 'Orange' THEN 1 ELSE 0 END),\n        0\n    ) AS Unified_to_Elementary_Ratio\nFROM\n    schools;\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.`School`, sc.`Street` AS PostalStreetAddress  \nFROM satscores sc  \nJOIN schools s ON sc.`cds` = s.`CDSCode`  \nORDER BY sc.`AvgScrMath` DESC  \nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) AS non_chartered_low_free_pct  \nFROM frpm f  \nJOIN schools s ON f.CDSCode = s.CDSCode  \nWHERE s.Charter = 0  \n  AND s.County = 'Los Angeles'  \n  AND (f.`Free Meal Count (K-12)` * 100.0 / f.`Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT f.`Enrollment (Ages 5-17)` AS EnrolledStudents\nFROM frpm f\nJOIN schools s ON f.`CDSCode` = s.`CDSCode`\nWHERE s.`EdOpsCode` = 'SSS'\n  AND s.`School` LIKE '%State Special School%'\n  AND s.`County` = 'Fremont'\n  AND f.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT \n    f.FRPM Count (Ages 5-17) / f.Enrollment (Ages 5-17) * 100 AS Percent_FRPM_Ages_5_17,\n    s.CDSCode,\n    s.School,\n    f.`Low Grade`,\n    f.`High Grade`\nFROM \n    frpm f\nJOIN \n    schools s \nON \n    f.CDSCode = s.CDSCode\nWHERE \n    f.`County Name` = 'Los Angeles'\n    AND f.`Low Grade` = 'Kindergarten'\n    AND f.`High Grade` = '9th';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS NumSchools\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE (County IN ('San Diego','Santa Barbara'))\n  AND Virtual = 'F'\nGROUP BY County\nORDER BY NumSchools DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT Low Grade, High Grade\nFROM schools\nWHERE Longitude = (\n    SELECT Longitude\n    FROM schools\n    ORDER BY ABS(Longitude) DESC\n    LIMIT 1\n);\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(*) AS total_multiple\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Magnet = 1\n  AND s.`GSserved` = 'K-8'\n  AND f.`NSLP Provision Status` = 'Multiple Provision Types';\n\nSELECT s.City, COUNT(*) AS schools_in_city\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Magnet = 1\n  AND s.`GSserved` = 'K-8'\nGROUP BY s.City\nORDER BY s.City;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT \n    f.`District Code` AS district_code,\n    ROUND((f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) * 100, 2) AS `Percent Eligible Free (K-12)`\nFROM \n    schools s\nJOIN \n    frpm f ON s.`CDSCode` = f.`CDSCode`\nWHERE \n    s.`AdmFName1` = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1 AS Email\nFROM schools\nWHERE County = 'San Bernardino'\n  AND City = 'San Bernardino City Unified'\n  AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n  AND SOC = '62'\n  AND DOC = '54'\n  AND AdmEmail1 IS NOT NULL\nUNION\nSELECT AdmEmail2\nFROM schools\nWHERE County = 'San Bernardino'\n  AND City = 'San Bernardino City Unified'\n  AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n  AND SOC = '62'\n  AND DOC = '54'\n  AND AdmEmail2 IS NOT NULL\nUNION\nSELECT AdmEmail3\nFROM schools\nWHERE County = 'San Bernardino'\n  AND City = 'San Bernardino City Unified'\n  AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n  AND SOC = '62'\n  AND DOC = '54'\n  AND AdmEmail3 IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN district di ON a.district_id = di.district_id\nWHERE d.type = 'POPLATEK PO OBRATU'\n  AND di.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) AS district_count\nFROM (\n    SELECT d.district_id\n    FROM district d\n    JOIN client c ON d.district_id = c.district_id\n    WHERE c.gender = 'F'\n    GROUP BY d.district_id\n    HAVING AVG(d.A11) > 6000 AND AVG(d.A11) < 10000\n) AS sub;\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client c \nJOIN district d ON c.district_id = d.district_id \nWHERE c.gender = 'M' \n  AND d.A3 = 'North Bohemia' \n  AND d.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT a.account_id,\n       d.A11,\n       (SELECT MAX(d2.A11) - MIN(d2.A11) FROM district d2) AS gap\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nJOIN account a ON c.client_id = a.client_id\nWHERE c.gender = 'F'\nORDER BY c.birth_date ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nJOIN account a ON a.district_id = d.district_id\nWHERE c.birth_date = (SELECT MAX(birth_date) FROM client)\n  AND d.A11 = (\n    SELECT MAX(d2.A11)\n    FROM district d2\n    JOIN client c2 ON d2.district_id = c2.district_id\n    WHERE c2.birth_date = (SELECT MAX(birth_date) FROM client)\n  );\t----- bird -----\tfinancial",
    "473": "SELECT l.account_id, a.frequency\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.status = 'approved'\n  AND YEAR(l.date) = 1997\n  AND a.frequency = 'POPLATEK TYDNE'\n  AND l.amount = (\n    SELECT MIN(amount)\n    FROM loan\n    WHERE status = 'approved' AND YEAR(date) = 1997\n  );\t----- bird -----\tfinancial",
    "474": "SELECT l.account_id\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.duration > 12\n  AND YEAR(a.date) = 1993\nORDER BY l.amount DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*) AS num_accounts\nFROM account AS a\nJOIN client AS c ON a.client_id = c.client_id\nJOIN district AS d ON a.district_id = d.district_id\nWHERE c.gender = 'F'\n  AND c.birth_date < '1950-01-01'\n  AND d.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": "SELECT d.A2 AS district_name\nFROM client c\nJOIN account a ON c.client_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F'\n  AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT DIVIDE(SUM(CASE WHEN c.gender='M' THEN 1 END), COUNT(*)) * 100 AS percent\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE d.A3 = 'South Bohemia'\n  AND d.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'South Bohemia');\t----- bird -----\tfinancial",
    "478": "SELECT \n  (100 * \n   ((t_end.balance - t_start.balance) / t_start.balance)\n  ) AS increase_rate\nFROM \n  (SELECT account_id\n   FROM loan\n   WHERE status = 'approved'\n     AND date = '1993-07-05'\n   ORDER BY date\n   LIMIT 1) l\nJOIN trans t_start\n  ON t_start.account_id = l.account_id\n  AND t_start.date = '1993-03-22'\nJOIN trans t_end\n  ON t_end.account_id = l.account_id\n  AND t_end.date = '1998-12-27';\t----- bird -----\tfinancial",
    "479": "SELECT \n  (SUM(CASE WHEN status='A' THEN amount ELSE 0 END) / SUM(amount)) * 100 AS percentage_fully_paid\nFROM loan;\t----- bird -----\tfinancial",
    "480": "SELECT \n    SUM(amount) * 100 / (SELECT SUM(amount) FROM loan) AS percentage_of_running_loans\nFROM loan\nWHERE amount < 100000\n  AND status = 'C';\t----- bird -----\tfinancial",
    "481": "SELECT\n    district.district_id,\n    ((district.A13 - district.A12) / district.A12) * 100 AS unemployment_increment\nFROM\n    loan\n    INNER JOIN account ON loan.account_id = account.account_id\n    INNER JOIN client ON account.district_id = client.district_id\n    INNER JOIN district ON client.district_id = district.district_id\nWHERE\n    loan.status = 'D';\t----- bird -----\tfinancial",
    "482": "SELECT d.`A2` AS district_name,\n       COUNT(*) AS female_account_count\nFROM district d\nJOIN account a ON d.`district_id` = a.`district_id`\nJOIN client c ON a.`account_id` = c.`client_id`\nWHERE c.`gender` = 'F'\nGROUP BY d.`district_id`, d.`A2`\nORDER BY female_account_count DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) AS loan_count\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.date BETWEEN '1995-01-01' AND '1997-12-31'\n  AND a.frequency = 'POPLATEK MESICNE'\n  AND l.amount >= 250000;\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account_id) AS running_contract_accounts\nFROM loan\nWHERE status = 'C';\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) AS male_clients\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M'\n  AND d.district_id = (\n      SELECT district_id\n      FROM (\n          SELECT district_id, A15\n          FROM district\n          ORDER BY A15 DESC\n          LIMIT 1 OFFSET 1\n      ) AS second_highest\n  );\t----- bird -----\tfinancial",
    "486": "SELECT d.A2 AS district_name,\n       t.amount\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ'\n  AND t.date LIKE '1996-01%'\nORDER BY t.amount DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*) AS running_contract_accounts\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.status = 'C'\n  AND a.district_id = 1;\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) AS male_clients\nFROM client c\nJOIN (\n    SELECT district_id, DENSE_RANK() OVER (ORDER BY A15 DESC) AS r\n    FROM district\n    WHERE A15 IS NOT NULL\n) d ON c.district_id = d.district_id\nWHERE d.r = 2\n  AND c.gender = 'M';\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT t.account_id\nFROM trans t\nWHERE t.operation = 'VYBER KARTOU'\n  AND YEAR(t.date) = 1998\n  AND t.amount < (\n    SELECT AVG(t2.amount)\n    FROM trans t2\n    WHERE t2.operation = 'VYBER KARTOU'\n      AND YEAR(t2.date) = 1998\n  );\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT a.frequency AS account_type\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE a.frequency <> 'OWNER'\n  AND d.A11 BETWEEN 8000 AND 9000;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(A15) AS avg_crimes\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE YEAR(a.date) >= 1997\nGROUP BY d.district_id\nHAVING COUNT(*) > 4000;\t----- bird -----\tfinancial",
    "492": "SELECT t.trans_id,\n       t.account_id,\n       t.date,\n       t.type,\n       t.operation,\n       t.amount,\n       t.balance,\n       t.k_symbol,\n       t.bank,\n       t.account\nFROM trans t\nJOIN account a\n  ON t.account_id = a.account_id\nJOIN client c\n  ON a.district_id = c.district_id\nWHERE c.client_id = 3356\n  AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": "SELECT 100.0 * SUM(CASE WHEN c.gender = 'F' THEN 1 END) / COUNT(*) AS percentage_women\nFROM client AS c\nJOIN district AS d ON c.district_id = d.district_id\nWHERE d.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT\n    ((SUM(CASE WHEN YEAR(d.date) = 1997 THEN d.amount END) -\n      SUM(CASE WHEN YEAR(d.date) = 1996 THEN d.amount END)) /\n     NULLIF(SUM(CASE WHEN YEAR(d.date) = 1996 THEN d.amount END),0)) * 100) AS growth_rate\nFROM loan d\nJOIN account a ON d.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nWHERE c.gender = 'M'\n  AND YEAR(d.date) IN (1996,1997);\t----- bird -----\tfinancial",
    "495": "SELECT \n    (SELECT COUNT(*) FROM account WHERE account_id = 3 AND frequency = 'statement') AS statements_requested,\n    (SELECT SUM(amount) FROM trans WHERE k_symbol = '3539' AND type = 'debit') AS total_debit_amount;\t----- bird -----\tfinancial",
    "496": "SELECT ROUND(\n        100.0 *\n        (SELECT COUNT(*) FROM client c\n         JOIN account a ON a.district_id = c.district_id\n         WHERE c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE')\n        /\n        (SELECT COUNT(*) FROM client c\n         JOIN account a ON a.district_id = c.district_id\n         WHERE a.frequency = 'POPLATEK TYDNE'),\n        2) AS percentage_of_male_clients_requesting_weekly_statements;\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F'\nAND c.birth_date = (SELECT MIN(c2.birth_date) FROM client c2 WHERE c2.gender = 'F')\nAND d.A11 = (SELECT MIN(d2.A11) FROM district d2 JOIN client c3 ON d2.district_id = c3.district_id WHERE c3.gender = 'F');\t----- bird -----\tfinancial",
    "498": "SELECT AVG(l.amount) AS avg_loan_amount\nFROM loan l\nJOIN trans t ON l.account_id = t.account_id\nWHERE l.status = 'C'\n  AND t.k_symbol = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": "SELECT\n    c.client_id,\n    FLOOR(DATEDIFF(CURDATE(), c.birth_date) / 365) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE ca.type = 'gold'\n  AND d.type = 'OWNER';\t----- bird -----\tfinancial"
}