{
    "0": "SELECT\n    SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END), 0) AS ratio\nFROM customers;\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE SUBSTRING(Date, 1, 4) = '2012'\nGROUP BY CustomerID\nORDER BY TotalConsumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption)/12 AS AvgMonthlyConsumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME'\n  AND ym.Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT\n    SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) -\n    SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS consumption_difference\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE LEFT(ym.Date, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT LEFT(y.Date, 4) AS Year, SUM(y.Consumption) AS TotalConsumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Currency = 'CZK'\nGROUP BY Year\nORDER BY TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT SUBSTRING(y.Date,5,2) AS Month,\n       SUM(y.Consumption) AS TotalConsumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME'\n  AND SUBSTRING(y.Date,1,6) BETWEEN '201301' AND '201312'\nGROUP BY Month\nORDER BY TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT\n  (SELECT AvgCons FROM segment_stats WHERE Segment='SME') - (SELECT AvgCons FROM segment_stats WHERE Segment='LAM') AS SME_LAM,\n  (SELECT AvgCons FROM segment_stats WHERE Segment='LAM') - (SELECT AvgCons FROM segment_stats WHERE Segment='KAM') AS LAM_KAM,\n  (SELECT AvgCons FROM segment_stats WHERE Segment='KAM') - (SELECT AvgCons FROM segment_stats WHERE Segment='SME') AS KAM_SME\nFROM\n(\n  SELECT\n    Segment,\n    SUM(Consumption) AS TotalCons,\n    COUNT(*) AS CountCust,\n    SUM(Consumption)/COUNT(*) AS AvgCons\n  FROM\n  (\n    SELECT\n      y.CustomerID,\n      y.Consumption,\n      c.Segment\n    FROM\n      yearmonth y\n      JOIN customers c ON y.CustomerID = c.CustomerID\n      JOIN\n      (\n        SELECT c.Segment, MIN(y.Consumption) AS MinCons\n        FROM yearmonth y\n        JOIN customers c ON y.CustomerID = c.CustomerID\n        WHERE y.Date LIKE '2013%'\n        GROUP BY c.Segment\n      ) mc ON c.Segment = mc.Segment AND y.Consumption = mc.MinCons\n    WHERE y.Date LIKE '2013%'\n  ) lc\n  GROUP BY Segment\n) segment_stats;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT 'Biggest' AS Rank, Segment, pct_increase\nFROM (\n  SELECT Segment,\n         ((cons2013 - cons2012) / NULLIF(cons2013,0)) * 100 AS pct_increase\n  FROM (\n    SELECT c.Segment,\n           SUM(CASE WHEN SUBSTRING(ym.Date,1,4)='2012' THEN ym.Consumption ELSE 0 END) AS cons2012,\n           SUM(CASE WHEN SUBSTRING(ym.Date,1,4)='2013' THEN ym.Consumption ELSE 0 END) AS cons2013\n    FROM yearmonth ym\n    JOIN customers c ON ym.CustomerID = c.CustomerID\n    GROUP BY c.Segment\n  ) t\n  ORDER BY pct_increase DESC\n  LIMIT 1\n) big\nUNION ALL\nSELECT 'Lowest' AS Rank, Segment, pct_increase\nFROM (\n  SELECT Segment,\n         ((cons2013 - cons2012) / NULLIF(cons2013,0)) * 100 AS pct_increase\n  FROM (\n    SELECT c.Segment,\n           SUM(CASE WHEN SUBSTRING(ym.Date,1,4)='2012' THEN ym.Consumption ELSE 0 END) AS cons2012,\n           SUM(CASE WHEN SUBSTRING(ym.Date,1,4)='2013' THEN ym.Consumption ELSE 0 END) AS cons2013\n    FROM yearmonth ym\n    JOIN customers c ON ym.CustomerID = c.CustomerID\n    GROUP BY c.Segment\n  ) t\n  ORDER BY pct_increase ASC\n  LIMIT 1\n) low;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\n  AND SUBSTRING(Date, 1, 6) BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT\n    (SELECT COUNT(*) FROM gasstations WHERE Country='CZE' AND Segment='discount')\n    -\n    (SELECT COUNT(*) FROM gasstations WHERE Country='SVK' AND Segment='discount') AS discount_difference;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT\n  CASE WHEN czk > eur THEN 'Yes' ELSE 'No' END AS MoreInCZK,\n  CASE WHEN czk > eur THEN czk - eur ELSE 0 END AS Difference\nFROM (\n  SELECT\n    SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS czk,\n    SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS eur\n  FROM customers\n) AS t;\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT ROUND(\n    (SELECT COUNT(*) FROM (\n        SELECT c.CustomerID\n        FROM customers c\n        JOIN yearmonth y ON c.CustomerID = y.CustomerID\n        WHERE c.Segment = 'LAM'\n        GROUP BY c.CustomerID\n        HAVING SUM(y.Consumption) > 46.73\n    ) AS high) /\n    (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM')\n    * 100, 2) AS percentage;\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT\n    100.0 * SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) / COUNT(*) AS percentage\nFROM\n    yearmonth\nWHERE\n    SUBSTRING(Date,1,4) = '2012'\n    AND SUBSTRING(Date,5,2) = '02';\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT Date, Consumption\nFROM yearmonth\nWHERE SUBSTRING(Date, 1, 4) = '2012'\nORDER BY Consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nWHERE YEAR(t.Date) = 2013\n  AND MONTH(t.Date) = 9;\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE DATE_FORMAT(t.Date, '%Y%m') = '201306';\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT ym.CustomerID)\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Currency = 'EUR' AND ym.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations gs ON t.GasStationID = gs.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE gs.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT t.Time\nFROM transactions_1k t\nJOIN gasstations g\n  ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11\nORDER BY t.Time;\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) AS transaction_count\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE'\n  AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency\nFROM transactions_1k AS t\nJOIN customers AS c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24'\n  AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) AS transaction_count\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE'\n  AND t.Date = '2012-08-26'\n  AND t.Time BETWEEN '08:00:00' AND '09:00:00';\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT c.Country\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-24'\n  AND t.Price = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT\n  COUNT(DISTINCT t.CustomerID) * 100.0 / (SELECT COUNT(*) FROM customers) AS percentage\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR'\n  AND t.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (sum2012 - sum2013) / sum2012 AS decrease_rate\nFROM (\n  SELECT\n    SUM(CASE WHEN YEAR(STR_TO_DATE(Date, '%Y-%m-%d')) = 2012 THEN Consumption ELSE 0 END) AS sum2012,\n    SUM(CASE WHEN YEAR(STR_TO_DATE(Date, '%Y-%m-%d')) = 2013 THEN Consumption ELSE 0 END) AS sum2013\n  FROM yearmonth\n  WHERE CustomerID = (\n    SELECT CustomerID\n    FROM transactions_1k\n    WHERE Date = '2012-08-25' AND Price = 634.8\n    LIMIT 1\n  )\n) AS t;\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT\n    100.0 * SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) / COUNT(*) AS premium_percentage\nFROM\n    (\n        SELECT DISTINCT c.CustomerID, c.Segment\n        FROM customers c\n        JOIN transactions_1k t ON c.CustomerID = t.CustomerID\n        JOIN gasstations g ON g.GasStationID = t.GasStationID\n        WHERE g.Country = 'SVK'\n    ) AS svk_customers;\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(Amount) AS total_spent\nFROM transactions_1k\nWHERE CustomerID = 38508;\n\nSELECT SUM(Amount) AS january_2012_spent\nFROM transactions_1k\nWHERE CustomerID = 38508\n  AND DATE_FORMAT(Date, '%Y%m') = '201201';\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT \n    c.CustomerID,\n    SUM(t.Amount * t.Price) AS TotalSpent,\n    SUM(t.Price) / SUM(t.Amount) AS AvgPricePerUnit,\n    c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nGROUP BY c.CustomerID\nORDER BY TotalSpent DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT DISTINCT t.CustomerID, y.Consumption\nFROM transactions_1k t\nJOIN yearmonth y ON t.CustomerID = y.CustomerID\nWHERE t.ProductID = 5\n  AND t.Date >= '2012-08-01'\n  AND t.Date <  '2012-09-01'\n  AND (t.Price / t.Amount) > 29\n  AND y.Date = '201208';\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.first_name = 'Angela' AND mem.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) AS medium_tshirt_count\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer'\n  AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) AS meeting_events\nFROM (\n    SELECT link_to_event\n    FROM attendance\n    GROUP BY link_to_event\n    HAVING COUNT(link_to_member) > 10\n) AS sub\nJOIN event e ON e.event_id = sub.link_to_event\nWHERE e.type = 'Meeting';\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON a.link_to_event = e.event_id\nGROUP BY e.event_id, e.event_name\nHAVING COUNT(*) > 20\n   AND e.type <> 'fundraiser';\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(i.amount) AS total_amount_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": "SELECT CONCAT(first_name, ' ', last_name) AS full_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'Illinois'\n  AND m.position LIKE '%Student_Club%';\t----- bird -----\tstudent_club",
    "36": "SELECT\n    CASE\n        WHEN COUNT(*) = SUM(CASE WHEN approved = 'True' THEN 1 ELSE 0 END)\n        THEN 'All approved'\n        ELSE 'Not all approved'\n    END AS approval_status\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting'\n  AND event.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) AS avg_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah'\n  AND m.last_name = 'Allen'\n  AND CAST(SUBSTRING(e.expense_date, 5, 2) AS UNSIGNED) IN (9,10);\t----- bird -----\tstudent_club",
    "38": "SELECT\n    (SELECT SUM(b.spent)\n     FROM budget b\n     JOIN event e ON b.link_to_event = e.event_id\n     WHERE SUBSTRING(e.event_date,1,4) = '2019') -\n    (SELECT SUM(b.spent)\n     FROM budget b\n     JOIN event e ON b.link_to_event = e.event_id\n     WHERE SUBSTRING(e.event_date,1,4) = '2020')\n    AS difference;\t----- bird -----\tstudent_club",
    "39": "SELECT notes\nFROM income\nWHERE source = 'Fundraising'\n  AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT b.event_status\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nWHERE e.expense_description = 'Post Cards, Posters'\n  AND e.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) AS medium_count\nFROM member m\nJOIN major mj ON m.link_to_major = mj.major_id\nWHERE mj.major_name = 'Business'\n  AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT ma.department\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE m.first_name = 'Connor'\n  AND m.last_name = 'Hilton'\n  AND i.source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT\n    (SELECT SUM(b.amount)\n     FROM budget b\n     JOIN event e ON b.link_to_event = e.event_id\n     WHERE b.category = 'Advertisement'\n       AND e.event_name = 'Yearly Kickoff') /\n    (SELECT SUM(b.amount)\n     FROM budget b\n     JOIN event e ON b.link_to_event = e.event_id\n     WHERE b.category = 'Advertisement'\n       AND e.event_name = 'October Meeting') AS ratio;\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_pizza_cost\nFROM expense\nWHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) AS city_count\nFROM zip_code\nWHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT maj.major_name\nFROM member mem\nJOIN major maj ON mem.link_to_major = maj.major_id\nWHERE mem.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) AS attendee_count\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT\n    m.first_name,\n    m.last_name\nFROM\n    member AS m\nJOIN\n    major AS mj\nON\n    m.link_to_major = mj.major_id\nWHERE\n    mj.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT\n    e.event_id,\n    e.event_name,\n    DIVIDE(b.spent, b.amount) AS ratio\nFROM\n    event e\nJOIN\n    budget b\nON\n    e.event_id = b.link_to_event\nWHERE\n    e.status = 'Closed'\nORDER BY\n    ratio DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_spent FROM budget;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT CONCAT(first_name, ' ', last_name) AS full_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT DISTINCT CONCAT(m.first_name, ' ', m.last_name) AS full_name\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense ex ON ex.link_to_budget = b.budget_id\nORDER BY ex.cost ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": "SELECT\n  ROUND(100 * SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN exp.cost ELSE 0 END) / SUM(exp.cost), 2) AS percentage\nFROM expense exp\nJOIN budget b ON exp.link_to_budget = b.budget_id\nJOIN event e ON b.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) AS num_members\nFROM member AS m\nJOIN major AS j ON m.link_to_major = j.major_id\nWHERE j.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE b.category = 'Advertisement'\nORDER BY b.spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS attended\nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nJOIN event e ON a.link_to_event = e.event_id\nWHERE m.first_name = 'Maya'\n  AND m.last_name = 'Mclean'\n  AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "63": "SELECT e.cost\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE e.expense_description = 'Posters'\n  AND ev.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\n  AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT \n    budget.category AS expense_type,\n    SUM(expense.cost) AS total_approved_value\nFROM \n    expense\nJOIN \n    budget ON expense.link_to_budget = budget.budget_id\nJOIN \n    event ON budget.link_to_event = event.event_id\nWHERE \n    event.event_name = 'October Meeting' \n    AND expense.approved = 'Yes'\nGROUP BY \n    budget.category;\t----- bird -----\tstudent_club",
    "66": "SELECT category,\n       SUM(amount) AS category_amount,\n       SUM(amount) OVER () AS total_amount\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY category\nORDER BY category_amount ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense_on_8_20_2019\nFROM expense\nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name,\n       SUM(e.cost) AS total_cost\nFROM member AS m\nJOIN expense AS e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member_id, m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT DISTINCT e.expense_description\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT type\nFROM event\nWHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, maj.department, maj.college\nFROM member m\nJOIN major maj ON m.link_to_major = maj.major_id\nWHERE maj.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215'\n  AND event.type = 'Guest Speaker'\n  AND budget.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT\n  SUM(CASE WHEN amt50 = 1 THEN 1 ELSE 0 END) * 100 / COUNT(*) AS percentage_of_50_received_by_Student_Club\nFROM (\n  SELECT m.member_id,\n         MAX(CASE WHEN i.amount = 50 AND i.source = 'Student_Club' THEN 1 ELSE 0 END) AS amt50\n  FROM member m\n  LEFT JOIN income i ON i.link_to_member = m.member_id\n  WHERE m.t_shirt_size = 'Medium' AND m.position = 'Member'\n  GROUP BY m.member_id\n) AS sub;\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game'\n  AND status = 'Closed'\n  AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT DISTINCT CONCAT(m.first_name,' ',m.last_name) AS full_name, m.phone\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name,\n       expense.cost\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE expense.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, i.amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "78": "SELECT\n    SUM(CASE WHEN SEX='M' AND Admission='+' THEN 1 ELSE 0 END) AS male_inpatients,\n    SUM(CASE WHEN SEX='M' AND Admission='-' THEN 1 ELSE 0 END) AS male_outpatients,\n    CASE WHEN SUM(CASE WHEN SEX='M' AND Admission='+' THEN 1 ELSE 0 END) >=\n              SUM(CASE WHEN SEX='M' AND Admission='-' THEN 1 ELSE 0 END)\n         THEN 'In-patient' ELSE 'Outpatient' END AS majority,\n    DIVIDE(SUM(CASE WHEN SEX='M' AND Admission='+' THEN 1 ELSE 0 END),\n           NULLIF(SUM(CASE WHEN SEX='M' AND Admission='-' THEN 1 ELSE 0 END),0)) AS deviation_percentage\nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT\n    DIVIDE(\n        (SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) > 1930),\n        (SELECT COUNT(*) FROM Patient WHERE SEX = 'F')\n    ) * 100 AS percentage;\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT DIVIDE(\n  (SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+'),\n  (SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-')\n) AS inpatient_to_outpatient_ratio;\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT\n    p.Diagnosis AS Disease,\n    l.Date AS LabTestDate\nFROM\n    Patient p\nJOIN\n    Laboratory l\nON\n    p.ID = l.ID\nWHERE\n    p.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT\n    p.ID,\n    p.SEX,\n    p.Birthday\nFROM\n    Patient p\nJOIN\n    Laboratory l\n    ON p.ID = l.ID\nWHERE\n    l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT p.ID, (YEAR(CURRENT_DATE) - YEAR(p.Birthday)) AS age\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.RVVT = '+';\n\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT p.`ID`, p.`SEX`, e.`Diagnosis`\nFROM Patient p\nJOIN Examination e ON p.`ID` = e.`ID`\nWHERE e.`Thrombosis` = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) AS female_count\nFROM Patient\nWHERE SEX = 'F'\n  AND YEAR(Description) = 1997\n  AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(DISTINCT p.ID)\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.Thrombosis = 1\n  AND YEAR(e.`Examination Date`) = 1997\n  AND p.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT e.Symptoms, e.Diagnosis\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE p.Birthday = (SELECT MAX(Birthday) FROM Patient)\n  AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT L.Date AS lab_date, \n       (YEAR(P.`First Date`) - YEAR(P.Birthday)) AS age_at_first_arrival\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nJOIN Laboratory L ON P.ID = L.ID\nWHERE E.Diagnosis = 'SJS'\nORDER BY (YEAR(P.`First Date`) - YEAR(P.Birthday)) DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT\n  DIVIDE(\n    SUM(CASE WHEN p.SEX = 'M' AND l.UA <= 8.0 THEN 1 ELSE 0 END),\n    SUM(CASE WHEN p.SEX = 'F' AND l.UA <= 6.5 THEN 1 ELSE 0 END)\n  ) AS male_to_female_ratio\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT p.ID) AS underage_patients\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE p.Birthday IS NOT NULL\n  AND YEAR(p.Birthday) > 1975\n  AND YEAR(e.`Examination Date`) BETWEEN 1990 AND 1993;\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n  YEAR(e.`Examination Date`) - YEAR(p.Birthday) AS Age,\n  e.Diagnosis\nFROM \n  Examination e\nJOIN \n  Laboratory l\n  ON e.ID = l.ID AND e.`Examination Date` = l.`Date`\nJOIN \n  Patient p\n  ON e.ID = p.ID\nWHERE \n  l.`HGB` = (SELECT MAX(`HGB`) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT e.`aCL IgM`\nFROM Patient p\nJOIN Examination e ON p.`ID` = e.`ID`\nWHERE p.`Description` = '1994-02-19'\n  AND p.`Diagnosis` = 'SLE'\n  AND e.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT\n    (SUM(CASE WHEN l.Date LIKE '1981-11-%' THEN l.`T-CHO` END) -\n     SUM(CASE WHEN l.Date LIKE '1981-12-%' THEN l.`T-CHO` END))\n    / SUM(CASE WHEN l.Date LIKE '1981-12-%' THEN l.`T-CHO` END) AS decrease_rate\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT p.ID\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE e.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31'\n  AND l.GPT > 30\n  AND l.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Examination e ON e.ID = p.ID\nWHERE e.Thrombosis = 2\n  AND e.`ANA Pattern` = 'S'\n  AND e.`aCL IgM` > (SELECT 1.2 * AVG(`aCL IgM`) FROM Examination WHERE `aCL IgM` IS NOT NULL);\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT\n    p.`ID`,\n    p.`SEX`,\n    p.`Birthday`,\n    p.`Description`,\n    p.`First Date`,\n    p.`Admission`,\n    p.`Diagnosis`\nFROM\n    Patient p\nJOIN\n    Laboratory l\n    ON p.`ID` = l.`ID`\nWHERE\n    p.`Admission` = '-'\n    AND l.`Date` LIKE '1991-10%'\n    AND l.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(`ALB`) AS AvgAlbumin\nFROM Patient AS P\nJOIN Laboratory AS L ON P.`ID` = L.`ID`\nWHERE P.`SEX` = 'F'\n  AND L.`PLT` > 400\n  AND P.`Diagnosis` = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT DIVIDE(SUM(SEX='F'), COUNT(*)) * 100 AS female_percentage\nFROM Patient\nWHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT\n  CASE\n    WHEN (Laboratory.UA > 8.0 AND Patient.SEX = 'M')\n         OR (Laboratory.UA > 6.5 AND Patient.SEX = 'F')\n    THEN 'Yes'\n    ELSE 'No'\n  END AS uric_acid_normal\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT p.ID, p.SEX, p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT \n    P.ID,\n    P.SEX,\n    L.`T-BIL`\nFROM \n    Patient P\nJOIN \n    Laboratory L\n    ON P.ID = L.ID\nWHERE \n    L.`T-BIL` >= 2.0\nORDER BY \n    P.SEX, P.ID;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT DIVIDE(SUM(SUBTRACT(YEAR(NOW()), YEAR(p.Birthday))), COUNT(p.ID)) AS average_age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT p.ID) AS num_patients\nFROM Patient p\nJOIN Laboratory l ON l.ID = p.ID\nWHERE l.TG >= 200\n  AND p.Birthday IS NOT NULL\n  AND YEAR(CURDATE()) - YEAR(p.Birthday) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT p.`ID`) AS num_patients\nFROM Patient p\nJOIN Laboratory l ON p.`ID` = l.`ID`\nWHERE p.`SEX` = 'M'\n  AND YEAR(p.`Birthday`) BETWEEN 1936 AND 1956\n  AND l.`CPK` >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT p.ID, p.SEX, YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) AS age\nFROM Patient p\nJOIN Laboratory l ON l.ID = p.ID\nWHERE l.GLU >= 180\n  AND l.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT\n    p.ID,\n    p.Diagnosis,\n    (YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday)) AS Age\nFROM\n    Patient p\nINNER JOIN\n    Laboratory l\n    ON p.ID = l.ID\nWHERE\n    l.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT p.ID, p.SEX\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Diagnosis = 'SLE'\n  AND l.HGB > 10\n  AND l.HGB < 17\nORDER BY p.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT p.ID, YEAR(CURDATE()) - YEAR(p.Birthday) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.HCT >= 52\nGROUP BY p.ID, age\nHAVING COUNT(*) >= 2;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT\n    COUNT(DISTINCT CASE WHEN PLT < 100 THEN ID END) AS lower_than_normal,\n    COUNT(DISTINCT CASE WHEN PLT > 400 THEN ID END) AS higher_than_normal,\n    (COUNT(DISTINCT CASE WHEN PLT < 100 THEN ID END) - COUNT(DISTINCT CASE WHEN PLT > 400 THEN ID END)) AS difference\nFROM Laboratory\nWHERE PLT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT \n    p.ID,\n    p.SEX,\n    p.Birthday,\n    l.Date,\n    l.PLT\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    YEAR(l.Date) = 1984\n    AND (YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday)) < 50\n    AND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT\n  IFNULL(\n    DIVIDE(\n      SUM(CASE WHEN lab.PT >= 14 AND patient.SEX = 'F' THEN 1 ELSE 0 END),\n      SUM(CASE WHEN lab.PT >= 14 THEN 1 ELSE 0 END)\n    ) * 100,\n    0\n  ) AS female_abnormal_pt_percentage\nFROM Patient AS patient\nJOIN Laboratory AS lab ON patient.ID = lab.ID\nWHERE YEAR(CURRENT_TIMESTAMP) - YEAR(patient.Birthday) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(*) AS abnormal_fibrinogen_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.WBC > 3.5 AND l.WBC < 9.0\n  AND (l.FG <= 150 OR l.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT p.ID) AS high_igg_patients\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(DISTINCT p.ID) AS symptom_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.IGG > 900\n  AND l.IGG < 2000\n  AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.`First Date` >= '1990-01-01'\n  AND l.IGA > 80\n  AND l.IGA < 500;\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT\n    e.Diagnosis,\n    COUNT(*) AS disease_count\nFROM\n    Examination e\nINNER JOIN\n    Patient p ON e.ID = p.ID\nWHERE\n    e.IGM IS NOT NULL\n    AND (e.IGM <= 40 OR e.IGM >= 400)\n    AND e.Diagnosis IS NOT NULL\nGROUP BY\n    e.Diagnosis\nORDER BY\n    disease_count DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) AS num_patients\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRP = '+'\n  AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) AS count_abnormal_under70\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRE >= 1.5\n  AND (YEAR(CURDATE()) - YEAR(p.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT p.ID) AS num_patients\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.RNP IN ('-','+-') AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT l.ID) AS patient_count\nFROM Laboratory AS l\nJOIN Examination AS e ON e.ID = l.ID\nWHERE l.SM IN ('-', '+-') AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT p.ID) AS female_normal_anti_scl70_no_symptom\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nLEFT JOIN Examination e ON p.ID = e.ID\nWHERE l.SC170 IN ('negative','0')\n  AND p.SEX = 'F'\n  AND e.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE p.SEX = 'M' \n  AND l.CENTROMEA IN ('-', '+-') \n  AND l.SSB IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MAX(p.Birthday) AS YoungestBirthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.CPK < 250\n  AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016'\nGROUP BY l.id\nORDER BY SUM(COALESCE(m.home_team_goal,0) + COALESCE(m.away_team_goal,0)) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT t.team_long_name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nJOIN Team t ON m.away_team_api_id = t.team_api_id\nWHERE l.name = 'Scotland Premier League'\n  AND m.season = '2009/2010'\n  AND m.away_team_goal > m.home_team_goal\nGROUP BY m.away_team_api_id, t.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT buildUpPlaySpeed\nFROM Team_Attributes\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT l.name\nFROM `Match` m\nJOIN `League` l ON m.league_id = l.id\nWHERE m.season = '2015/2016'\n  AND m.home_team_goal = m.away_team_goal\nGROUP BY l.id, l.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT \n    p.player_api_id,\n    p.player_name,\n    TIMESTAMPDIFF(YEAR, p.birthday, NOW()) AS age\nFROM \n    Player AS p\nJOIN \n    Player_Attributes AS pa \n    ON p.player_api_id = pa.player_api_id\nWHERE \n    pa.sprint_speed >= 97\n    AND YEAR(pa.date) BETWEEN 2013 AND 2015;\t----- bird -----\teuropean_football_2",
    "133": "SELECT L.name AS league_name, COUNT(M.id) AS total_matches\nFROM Match M\nJOIN League L ON M.league_id = L.id\nGROUP BY L.id, L.name\nORDER BY total_matches DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50\n  AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT DISTINCT team_long_name\nFROM Team_Attributes AS ta\nWHERE DATE_FORMAT(ta.date, '%Y') = '2012'\n  AND ta.buildUpPlayPassing IS NOT NULL\n  AND ta.buildUpPlayPassing > (\n        SELECT AVG(ta2.buildUpPlayPassing)\n        FROM Team_Attributes AS ta2\n        WHERE ta2.buildUpPlayPassing IS NOT NULL\n          AND DATE_FORMAT(ta2.date, '%Y') = '2012'\n  );\t----- bird -----\teuropean_football_2",
    "136": "SELECT\n    DIVIDE(\n        SUM(CASE WHEN pa.preferred_foot = 'left' THEN 1 ELSE 0 END) * 100,\n        COUNT(DISTINCT pa.player_fifa_api_id)\n    ) AS left_foot_percentage\nFROM\n    Player_Attributes pa\nJOIN\n    Player p ON pa.player_fifa_api_id = p.player_fifa_api_id\nWHERE\n    YEAR(p.birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "137": "SELECT DIVIDE(SUM(pa.long_shots), COUNT(pa.player_fifa_api_id)) AS avg_long_shots\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.id\nWHERE p.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height > 180\nGROUP BY p.id, p.player_name\nORDER BY AVG(pa.heading_accuracy) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2009/2010'\nGROUP BY L.id, L.name\nHAVING AVG(M.home_team_goal) > AVG(M.away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": "SELECT\n    player_name,\n    birthday\nFROM\n    Player\nWHERE\n    SUBSTR(birthday, 1, 4) = '1970'\n    AND SUBSTR(birthday, 6, 2) = '10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Gabriel Tamas'\n  AND DATE_FORMAT(pa.date, '%Y') = '2011';\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(m.home_team_goal) AS avg_home_goals\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Poland'\n  AND m.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT p.player_name, sub.avg_finishing\nFROM Player p\nJOIN (\n    SELECT player_api_id, AVG(finishing) AS avg_finishing\n    FROM Player_Attributes\n    GROUP BY player_api_id\n) sub ON p.player_api_id = sub.player_api_id\nWHERE p.height IN (\n    SELECT MAX(height) FROM Player\n    UNION\n    SELECT MIN(height) FROM Player\n)\nORDER BY sub.avg_finishing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) AS avg_overall\nFROM Player_Attributes t2\nJOIN Player t1 ON t2.player_api_id = t1.player_api_id\nWHERE SUBSTRING(t2.date, 1, 4) BETWEEN '2010' AND '2015'\n  AND t1.height > 170;\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n(SELECT AVG(pa.ball_control)\n FROM Player_Attributes pa\n JOIN Player p ON pa.player_api_id = p.player_api_id\n WHERE p.player_name = 'Abdou Diallo') -\n(SELECT AVG(pa.ball_control)\n FROM Player_Attributes pa\n JOIN Player p ON pa.player_api_id = p.player_api_id\n WHERE p.player_name = 'Aaron Appindangoye')\n AS ball_control_difference;\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name\nFROM Player\nWHERE player_name IN ('Aaron Lennon','Abdelaziz Barrada')\nORDER BY birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name, height\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \n  AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT pa.player_api_id) AS num_players\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.defensive_work_rate = 'high'\n  AND SUBSTRING(p.birthday, 1, 4) < '1986';\t----- bird -----\teuropean_football_2",
    "150": "SELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.voleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*)  \nFROM Match m  \nJOIN League l ON m.league_id = l.id  \nWHERE l.name = 'Belgium Jupiler League'  \n  AND SUBSTR(m.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT L.name\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2008/2009'\nGROUP BY L.id, L.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT \n    ((a.overall_rating - p.overall_rating) / p.overall_rating) * 100 AS percentage_difference\nFROM (\n    SELECT pa.overall_rating\n    FROM Player_Attributes pa\n    JOIN Player pl ON pl.player_api_id = pa.player_api_id\n    WHERE pl.player_name = 'Ariel Borysiuk'\n) a\nCROSS JOIN (\n    SELECT pa.overall_rating\n    FROM Player_Attributes pa\n    JOIN Player pl ON pl.player_api_id = pa.player_api_id\n    WHERE pl.player_name = 'Paulin Puel'\n) p;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) AS avg_overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT ta.chanceCreationPassing AS max_score,\n       ta.chanceCreationPassingClass\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'Ajax'\nORDER BY ta.chanceCreationPassing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "156": "SELECT P.player_name\nFROM Player P\nJOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id\nWHERE PA.overall_rating = 77\n  AND PA.date LIKE '2016-06-23%'\nORDER BY P.birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT pa.overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Aaron Mooy'\n  AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": "SELECT pa.attacking_work_rate\nFROM Player p\nJOIN Player_Attributes pa ON pa.player_fifa_api_id = p.player_fifa_api_id\nWHERE p.player_name = 'Francesco Migliore'\n  AND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT MIN(pa.date) AS first_date\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Kevin Constant'\n  AND pa.crossing = (\n      SELECT MAX(pa2.crossing)\n      FROM Player_Attributes pa2\n      JOIN Player p2 ON pa2.player_api_id = p2.player_api_id\n      WHERE p2.player_name = 'Kevin Constant'\n  );\t----- bird -----\teuropean_football_2",
    "160": "SELECT ta.buildUpPlayPassingClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'FC Lorient'\n  AND ta.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT taa.defenceAggressionClass\nFROM Team t\nJOIN Team_Attributes taa ON t.team_api_id = taa.team_api_id\nWHERE t.team_long_name = 'Hannover 96'\n  AND taa.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) AS avg_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.id\nWHERE p.player_name = 'Marko Arnautovic'\n  AND SUBSTRING(pa.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT ((ld.overall_rating - jb.overall_rating) / ld.overall_rating) * 100 AS percentage\nFROM\n    (SELECT pa.overall_rating\n     FROM Player p\n     JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\n     WHERE p.player_name = 'Landon Donovan'\n       AND pa.date = '2013/7/12') AS ld,\n    (SELECT pa.overall_rating\n     FROM Player p\n     JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\n     WHERE p.player_name = 'Jordan Bowery'\n       AND pa.date = '2013/7/12') AS jb;\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name \nFROM Player \nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "165": "SELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id\nORDER BY pa.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT DISTINCT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT t.team_short_name\nFROM Team AS t\nJOIN Team_Attributes AS ta\n  ON t.team_fifa_api_id = ta.team_fifa_api_id\nWHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) AS player_count\nFROM Player\nWHERE player_name LIKE 'Aaron%'\n  AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": "SELECT \n    (SELECT jumping FROM Player_Attributes WHERE id = 6) - \n    (SELECT jumping FROM Player_Attributes WHERE id = 23) AS difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT pa.player_api_id\nFROM Player_Attributes pa\nWHERE pa.preferred_foot = 'right'\n  AND pa.potential = (SELECT MIN(potential) FROM Player_Attributes)\nORDER BY pa.id\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(DISTINCT player_api_id) AS left_foot_top_crossers\nFROM Player_Attributes\nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes)\n  AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": "SELECT\n    M.home_team_goal AS home_score,\n    M.away_team_goal AS away_score\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE L.name = 'Belgium Jupiler League'\n  AND M.date LIKE '2008-09-24%';\t----- bird -----\teuropean_football_2",
    "173": "SELECT ta.buildUpPlaySpeedClass\nFROM Team t\nJOIN Team_Attributes ta ON ta.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing, pa.curve\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "175": "SELECT L.name, COUNT(M.id) AS games\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2015/2016'\nGROUP BY L.id, L.name\nORDER BY games DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT t.team_long_name\nFROM Team t\nWHERE t.team_api_id = (\n    SELECT m.away_team_api_id\n    FROM Match m\n    ORDER BY m.away_team_goal DESC\n    LIMIT 1\n);\t----- bird -----\teuropean_football_2",
    "177": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.overall_rating = (\n    SELECT MAX(overall_rating) FROM Player_Attributes\n)\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": "SELECT \n    (SUM(CASE WHEN p.height < 180 AND pa.overall_rating > 70 THEN 1 ELSE 0 END) * 100.0 \n     / COUNT(DISTINCT p.id)) AS percentage\nFROM Player p\nJOIN Player_Attributes pa \n    ON p.player_api_id = pa.player_api_id;\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 20\n  AND q.q1 IS NOT NULL\nORDER BY q.q1 DESC\nLIMIT 5;\t----- bird -----\tformula_1",
    "180": "SELECT d.surname\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 19\nORDER BY q.q2 ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "181": "SELECT r.name AS race_name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT DISTINCT c.lat, c.lng\nFROM circuits AS c\nJOIN races AS r ON c.circuitId = r.circuitId\nWHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": "SELECT c.lat, c.lng\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE d.forename = 'Bruno'\n  AND d.surname = 'Senna'\n  AND q.raceId = 354;\t----- bird -----\tformula_1",
    "185": "SELECT d.number\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 903\n  AND q.q3 LIKE '1:54%';\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) AS drivers_not_finished\nFROM results r\nJOIN races rs ON r.raceId = rs.raceId\nWHERE rs.name = 'Bahrain Grand Prix'\n  AND rs.year = 2007\n  AND r.time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.raceId = 592\n  AND r.time IS NOT NULL\nORDER BY d.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT d.forename, d.surname, d.url\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE lt.raceId = 161\n  AND lt.time LIKE '0:01:27%';\t----- bird -----\tformula_1",
    "189": "SELECT circuits.lat, circuits.lng\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.name = 'Malaysian Grand Prix'\nLIMIT 1;\t----- bird -----\tformula_1",
    "190": "SELECT c.url\nFROM constructors c\nWHERE c.constructorId = (\n    SELECT cr.constructorId\n    FROM constructorResults cr\n    WHERE cr.raceId = 9\n    ORDER BY cr.points DESC\n    LIMIT 1\n);\t----- bird -----\tformula_1",
    "191": "SELECT d.code\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 45\n  AND q.q3 LIKE '0:01:33%';\t----- bird -----\tformula_1",
    "192": "SELECT s.url\nFROM seasons s\nJOIN races r ON s.year = r.year\nWHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 872\n  AND r.time IS NOT NULL\n  AND d.dob = (\n        SELECT MAX(d2.dob)\n        FROM drivers d2\n        JOIN results r2 ON d2.driverId = r2.driverId\n        WHERE r2.raceId = 872\n          AND r2.time IS NOT NULL\n      );\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.fastestLapSpeed IS NOT NULL\nORDER BY CAST(r.fastestLapSpeed AS DECIMAL) DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "195": "SELECT DIVIDE((r853.fastestLapSpeed - r854.fastestLapSpeed), r853.fastestLapSpeed) * 100 AS percent_faster\nFROM drivers d\nJOIN results r853 ON r853.driverId = d.driverId AND r853.raceId = 853\nJOIN results r854 ON r854.driverId = d.driverId AND r854.raceId = 854\nWHERE d.forename = 'Paul' AND d.surname = 'di Resta';\t----- bird -----\tformula_1",
    "196": "SELECT \n    DIVIDE(SUM(CASE WHEN time IS NOT NULL THEN 1 END), COUNT(*)) AS completion_rate\nFROM \n    results\nWHERE \n    raceId IN (\n        SELECT raceId \n        FROM races \n        WHERE date = '1983-07-16'\n    );\t----- bird -----\tformula_1",
    "197": "SELECT name\nFROM races\nWHERE YEAR(date) = (SELECT YEAR(MIN(date)) FROM races)\n  AND MONTH(date) = (SELECT MONTH(MIN(date)) FROM races);\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, SUM(ds.points) AS total_points\nFROM driverStandings ds\nJOIN drivers d ON ds.driverId = d.driverId\nGROUP BY ds.driverId, d.forename, d.surname\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT d.forename,\n       d.surname,\n       r.name,\n       l.milliseconds\nFROM lapTimes AS l\nJOIN drivers AS d ON l.driverId = d.driverId\nJOIN races AS r ON l.raceId = r.raceId\nWHERE l.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lt.milliseconds) AS avg_lap_time\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE d.forename = 'Lewis'\n  AND d.surname = 'Hamilton'\n  AND r.year = 2009\n  AND r.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "201": "SELECT\n  DIVIDE(\n    COUNT(CASE WHEN res.position > 1 THEN 1 END),\n    COUNT(*)\n  ) AS percentage_non_first\nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.surname = 'Hamilton'\n  AND r.year >= 2010;\t----- bird -----\tformula_1",
    "202": "SELECT driver_name, nationality, max_points\nFROM (\n    SELECT d.driverId,\n           CONCAT(d.forename, ' ', d.surname) AS driver_name,\n           d.nationality,\n           SUM(ds.wins) AS total_wins,\n           MAX(ds.points) AS max_points\n    FROM drivers d\n    JOIN driverStandings ds ON d.driverId = ds.driverId\n    GROUP BY d.driverId, d.forename, d.surname, d.nationality\n) t\nORDER BY total_wins DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "203": "SELECT YEAR(CURRENT_TIMESTAMP) - YEAR(dob) AS age,\n       CONCAT(forename, ' ', surname) AS name\nFROM drivers\nWHERE nationality = 'Japanese'\nORDER BY age ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT r.name AS race_name,\n       c.name AS circuit_name,\n       c.location\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE YEAR(r.date) = 2005\n  AND MONTH(r.date) = 9;\t----- bird -----\tformula_1",
    "205": "SELECT r.raceId,\n       r.year,\n       r.round,\n       r.name\nFROM   races AS r\nJOIN   results AS res\n       ON r.raceId = res.raceId\nJOIN   drivers AS d\n       ON res.driverId = d.driverId\nWHERE  d.forename = 'Alex'\n  AND  d.surname  = 'Yoong'\n  AND  res.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT r.year, r.name\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nORDER BY lt.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT\n    r.name AS first_race,\n    res.points AS points\nFROM\n    races r\n    JOIN results res ON r.raceId = res.raceId\n    JOIN drivers d ON res.driverId = d.driverId\nWHERE\n    d.forename = 'Lewis'\n    AND d.surname = 'Hamilton'\nORDER BY\n    r.year,\n    r.round\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT\n    ROUND(100 * SUM(CASE WHEN c.country = 'Germany' THEN 1 ELSE 0 END) / COUNT(*), 2) AS percentage\nFROM\n    races r\nJOIN\n    circuits c\n    ON r.circuitId = c.circuitId\nWHERE\n    r.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef\nFROM circuits\nWHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT d.nationality\nFROM drivers d\nWHERE d.dob IS NOT NULL\nORDER BY d.dob\nLIMIT 1;\t----- bird -----\tformula_1",
    "212": "SELECT d.driverRef\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races rs ON r.raceId = rs.raceId\nWHERE rs.year = 2007\n  AND rs.name = 'Canadian Grand Prix'\n  AND r.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT r.year,\n       r.round,\n       r.name,\n       res.rank\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis'\n  AND d.surname = 'Hamilton'\n  AND res.rank IS NOT NULL\nORDER BY res.rank\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(CAST(fastestLapSpeed AS DECIMAL(10,2))) AS max_speed\nFROM results r\nJOIN races rs ON r.raceId = rs.raceId\nWHERE rs.year = 2009\n  AND rs.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "215": "SELECT r.positionOrder AS final_rank\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.forename = 'Lewis'\n  AND d.surname = 'Hamilton'\n  AND ra.year = 2008\n  AND ra.name = 'Chinese Grand Prix';\t----- bird -----\tformula_1",
    "216": "SELECT r.time\nFROM results r\nJOIN races rs ON r.raceId = rs.raceId\nWHERE rs.year = 2008\n  AND rs.name = 'Chinese Grand Prix'\n  AND r.position = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT r.driverId) AS finished_drivers\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008\n  AND ra.name = 'Chinese Grand Prix'\n  AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT\n    ( (last_seconds - champ_seconds) / last_seconds ) * 100 AS percentage_faster\nFROM\n(\n    SELECT\n        champ_seconds,\n        last_seconds\n    FROM\n    (\n        SELECT\n            CAST(\n                TIME_TO_SEC(SUBSTRING(champ_time,1,8))\n                + SUBSTRING(champ_time,10) / 1000 AS DECIMAL(10,3)\n            ) AS champ_seconds,\n            CAST(\n                TIME_TO_SEC(SUBSTRING(last_time,1,8))\n                + SUBSTRING(last_time,10) / 1000 AS DECIMAL(10,3)\n            ) AS last_seconds\n        FROM\n        (\n            SELECT\n                (SELECT r.time FROM results r\n                 JOIN races ra ON r.raceId = ra.raceId\n                 JOIN circuits c ON ra.circuitId = c.circuitId\n                 WHERE ra.year = 2008\n                   AND c.name LIKE '%Adelaide%'\n                   AND r.position = 1\n                   AND r.time IS NOT NULL) AS champ_time,\n                (SELECT r.time FROM results r\n                 JOIN races ra ON r.raceId = ra.raceId\n                 JOIN circuits c ON ra.circuitId = c.circuitId\n                 WHERE ra.year = 2008\n                   AND c.name LIKE '%Adelaide%'\n                   AND r.time IS NOT NULL\n                 ORDER BY r.position DESC\n                 LIMIT 1) AS last_time\n        ) t1\n    ) t2\n) t3;\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) AS circuit_count\nFROM circuits\nWHERE location = 'Adelaide'\n  AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cr.points) AS max_points\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT c.name\nFROM constructors c\nJOIN constructorStandings cs ON c.constructorId = cs.constructorId\nWHERE cs.raceId = 291\n  AND cs.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) AS numJapaneseZeroPointConstructors\nFROM (\n    SELECT cr.constructorId\n    FROM constructorResults cr\n    JOIN constructors c ON cr.constructorId = c.constructorId\n    WHERE c.nationality = 'Japanese' AND cr.points = 0\n    GROUP BY cr.constructorId\n    HAVING COUNT(DISTINCT cr.raceId) = 2\n) AS sub;\t----- bird -----\tformula_1",
    "223": "SELECT\n    100 * COUNT(DISTINCT CASE WHEN r.time IS NOT NULL THEN d.driverId END) / COUNT(DISTINCT d.driverId) AS completion_percentage\nFROM\n    results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE\n    d.nationality = 'Japanese'\n    AND ra.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "224": "SELECT c.year,\n       AVG(TIME_TO_SEC(res.time)) AS avg_seconds\nFROM (\n    SELECT r.year,\n           rs.driverId,\n           ROW_NUMBER() OVER (PARTITION BY r.year ORDER BY SUM(rs.points) DESC) AS rn\n    FROM races r\n    JOIN driverStandings rs ON r.raceId = rs.raceId\n    GROUP BY r.year, rs.driverId\n) c\nJOIN results res ON res.driverId = c.driverId\nJOIN races r2 ON res.raceId = r2.raceId\nWHERE c.rn = 1\n  AND c.year < 1975\n  AND res.time IS NOT NULL\n  AND r2.year = c.year\nGROUP BY c.year\nORDER BY c.year;\t----- bird -----\tformula_1",
    "225": "SELECT lt.lap\nFROM lapTimes AS lt\nJOIN races AS r ON lt.raceId = r.raceId\nJOIN (\n    SELECT ds.driverId\n    FROM driverStandings AS ds\n    JOIN races AS r2 ON ds.raceId = r2.raceId\n    WHERE r2.year = 2009\n    GROUP BY ds.driverId\n    ORDER BY SUM(ds.points) DESC\n    LIMIT 1\n) AS champ ON lt.driverId = champ.driverId\nWHERE r.year = 2009\nORDER BY lt.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(CAST(r.fastestLapSpeed AS DECIMAL(10,2))) AS avg_fastest_lap_speed\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2009\n  AND ra.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "227": "SELECT\n  (COUNT(DISTINCT d.driverId) * 100) /\n  (SELECT COUNT(DISTINCT d2.driverId)\n   FROM lapTimes lt2\n   JOIN races r2 ON lt2.raceId = r2.raceId\n   JOIN drivers d2 ON lt2.driverId = d2.driverId\n   WHERE r2.year BETWEEN 2000 AND 2005) AS percentage\nFROM lapTimes lt\nJOIN races r ON lt.raceId = r.raceId\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE r.year BETWEEN 2000 AND 2005\n  AND YEAR(d.dob) < 1985\n  AND lt.lap > 50;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverId) AS french_drivers_count\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE d.nationality = 'French'\n  AND (\n    (lt.milliseconds IS NOT NULL AND lt.milliseconds < 120000)\n    OR (lt.time < '02:00.00')\n  );\t----- bird -----\tformula_1",
    "229": "SELECT code\nFROM drivers\nWHERE nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT driverId\nFROM drivers\nWHERE dob IS NOT NULL\nORDER BY dob DESC\nLIMIT 3;\n\nSELECT COUNT(*) AS netherlands_driver_count\nFROM drivers\nWHERE nationality = 'Netherlands'\n  AND driverId IN (\n    SELECT driverId\n    FROM drivers\n    WHERE dob IS NOT NULL\n    ORDER BY dob DESC\n    LIMIT 3\n  );\t----- bird -----\tformula_1",
    "231": "SELECT driverRef\nFROM drivers\nWHERE nationality = 'German' AND dob IS NOT NULL\nORDER BY dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE YEAR(d.dob) = 1971\n  AND r.fastestLapTime = (\n      SELECT MIN(r2.fastestLapTime)\n      FROM results r2\n      WHERE r2.raceId = r.raceId\n  );\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) AS disqualified_finishers\nFROM results\nWHERE raceId > 50\n  AND raceId < 100\n  AND statusId = 2\n  AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "234": "SELECT c.circuitRef, c.location, c.lat, c.lng, COUNT(r.raceId) AS race_count\nFROM circuits c\nJOIN races r ON r.circuitId = c.circuitId\nWHERE c.country = 'Austria'\nGROUP BY c.circuitId, c.circuitRef, c.location, c.lat, c.lng;\t----- bird -----\tformula_1",
    "235": "SELECT r.year, r.name, r.date, r.time\nFROM races AS r\nJOIN (\n    SELECT q.driverId, r.raceId\n    FROM qualifying AS q\n    JOIN races AS r ON q.raceId = r.raceId\n    WHERE q.driverId = (\n        SELECT driverId\n        FROM drivers\n        ORDER BY dob DESC\n        LIMIT 1\n    )\n    ORDER BY r.date\n    LIMIT 1\n) AS firstQual ON r.raceId = firstQual.raceId;\t----- bird -----\tformula_1",
    "236": "SELECT d.driverId,\n       CONCAT(d.forename, ' ', d.surname) AS full_name,\n       AVG(ps.milliseconds) AS avg_pit_stop_ms\nFROM drivers d\nJOIN pitStops ps ON d.driverId = ps.driverId\nWHERE d.nationality = 'German'\n  AND YEAR(d.dob) BETWEEN 1980 AND 1985\nGROUP BY d.driverId, d.forename, d.surname\nORDER BY avg_pit_stop_ms ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT CONCAT(d.forename, ' ', d.surname) AS champion, res.time\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE r.year = 2008\n  AND r.name LIKE '%Canadian%'\n  AND res.positionOrder = 1;\t----- bird -----\tformula_1",
    "238": "SELECT c.constructorRef, c.url\nFROM races r\nJOIN results res ON res.raceId = r.raceId\nJOIN constructors c ON c.constructorId = res.constructorId\nWHERE r.year = 2009\n  AND r.name LIKE '%Singapore%'\n  AND res.positionOrder = 1;\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON hp.hero_id = s.id\nJOIN superpower sp ON sp.id = hp.power_id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT \n    SUM(cr.points) AS score,\n    c.name,\n    c.nationality\nFROM races r\nJOIN circuits ci ON r.circuitId = ci.circuitId\nJOIN constructorResults cr ON r.raceId = cr.raceId\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE ci.circuitRef = 'monaco'\n  AND r.year BETWEEN 1980 AND 2010\nGROUP BY c.constructorId, c.name, c.nationality\nORDER BY score DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT d.forename, d.surname\nFROM qualifying q\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN drivers d ON q.driverId = d.driverId\nWHERE r.year = 2008\n  AND r.round = 3\n  AND c.circuitRef = 'marina-bay-street-circuit'\nORDER BY q.q3 ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "242": "SELECT CONCAT(d.forename,' ',d.surname) AS full_name,\n       d.nationality,\n       r.name AS race_name\nFROM drivers d\nJOIN results res ON res.driverId = d.driverId\nJOIN races r ON r.raceId = res.raceId\nWHERE d.driverId = (\n    SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1\n)\nORDER BY r.date ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "243": "SELECT MAX(accidents) AS max_accidents\nFROM (\n  SELECT COUNT(*) AS accidents\n  FROM results r\n  JOIN races ra ON r.raceId = ra.raceId\n  WHERE ra.name = 'Canadian Grand Prix' AND r.statusId = 3\n  GROUP BY r.driverId\n) t;\t----- bird -----\tformula_1",
    "244": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE lt.milliseconds = (\n        SELECT MIN(milliseconds) FROM lapTimes\n    )\n  AND d.driverId IN (\n        SELECT driverId\n        FROM (\n            SELECT driverId, SUM(points) AS total_points\n            FROM driverStandings\n            GROUP BY driverId\n            ORDER BY total_points DESC\n            LIMIT 20\n        ) AS top20\n    );\t----- bird -----\tformula_1",
    "245": "SELECT DISTINCT\n    t.circuitId,\n    t.circuitName,\n    t.country,\n    t.fastestMilliseconds,\n    t.fastestTime\nFROM (\n    SELECT\n        c.circuitId,\n        c.name AS circuitName,\n        c.country,\n        l.milliseconds,\n        l.time,\n        MIN(l.milliseconds) OVER (PARTITION BY c.circuitId) AS fastestMilliseconds\n    FROM circuits c\n    JOIN races r ON r.circuitId = c.circuitId\n    JOIN lapTimes l ON l.raceId = r.raceId\n    WHERE c.country = 'Italy'\n) t\nWHERE t.milliseconds = t.fastestMilliseconds\nORDER BY t.circuitId;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(DISTINCT h.id) AS number_of_superheroes\nFROM superhero AS h\nJOIN hero_power AS hp ON h.id = hp.hero_id\nJOIN superpower AS sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength'\n  AND h.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT s.id) AS blue_eyes_agility_count\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN hero_power hp ON hp.hero_id = s.id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE c.colour = 'Blue'\n  AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c_eye ON s.eye_colour_id = c_eye.id\nJOIN colour c_hair ON s.hair_colour_id = c_hair.id\nWHERE c_eye.colour = 'Blue'\n  AND c_hair.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT s.superhero_name, s.height_cm,\n       RANK() OVER (ORDER BY s.height_cm DESC) AS height_rank\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nORDER BY s.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT\n    colour.colour AS eye_color,\n    sub.superhero_count,\n    RANK() OVER (ORDER BY sub.superhero_count DESC) AS rank\nFROM (\n    SELECT\n        colour.id,\n        colour.colour,\n        COUNT(superhero.id) AS superhero_count\n    FROM superhero\n    JOIN colour ON superhero.eye_colour_id = colour.id\n    JOIN publisher ON superhero.publisher_id = publisher.id\n    WHERE publisher.publisher_name = 'Marvel Comics'\n    GROUP BY colour.id, colour.colour\n) AS sub\nORDER BY sub.superhero_count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT s.superhero_name, s.full_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE p.publisher_name = 'Marvel Comics'\n  AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT DISTINCT p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Speed'\n  AND ha.attribute_value = (\n      SELECT MIN(ha2.attribute_value)\n      FROM hero_attribute ha2\n      JOIN attribute a2 ON ha2.attribute_id = a2.id\n      WHERE a2.attribute_name = 'Speed'\n  );\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero s \nJOIN colour c ON s.eye_colour_id = c.id \nJOIN publisher p ON s.publisher_id = p.id \nWHERE c.colour = 'Gold' \n  AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "254": "SELECT s.superhero_name, ha.attribute_value\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN superhero s ON ha.hero_id = s.id\nWHERE a.attribute_name = 'Intelligence'\n  AND ha.attribute_value = (\n      SELECT MIN(ha2.attribute_value)\n      FROM hero_attribute ha2\n      JOIN attribute a2 ON ha2.attribute_id = a2.id\n      WHERE a2.attribute_name = 'Intelligence'\n  );\t----- bird -----\tsuperhero",
    "255": "SELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON a.id = ha.attribute_id\nWHERE a.attribute_name = 'Durability'\n  AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) AS female_strength_100\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON ha.hero_id = s.id\nJOIN attribute a ON a.id = ha.attribute_id\nWHERE g.gender = 'Female'\n  AND a.attribute_name = 'Strength'\n  AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT\n    (SUM(CASE WHEN a.alignment = 'Bad' THEN 1 ELSE 0 END) / COUNT(s.id)) * 100 AS percent_bad,\n    SUM(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_bad_count\nFROM superhero s\nLEFT JOIN alignment a ON s.alignment_id = a.id\nLEFT JOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "260": "SELECT\n    SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) -\n    SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS difference\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "261": "SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) AS total_without_full_name\nFROM superhero\nWHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(s.weight_kg) AS avg_weight\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Female';\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superhero sh\nJOIN gender g ON sh.gender_id = g.id\nJOIN hero_power hp ON hp.hero_id = sh.id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE g.gender = 'Male'\nLIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.height_cm BETWEEN 170 AND 190\n  AND c.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour AS hair_colour\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nJOIN colour c ON s.hair_colour_id = c.id\nWHERE s.height_cm = 185 AND r.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT ROUND(100 * SUM(p.id = 13) / COUNT(p.id), 2) AS percentage\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT s.superhero_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE s.weight_kg > 0.79 * (SELECT AVG(weight_kg) FROM superhero);\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hp.hero_id) AS num_heroes_with_stealth\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Dark Horse Comics'\n  AND a.attribute_name = 'durability'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT \n    eye.colour AS eye_colour,\n    hair.colour AS hair_colour,\n    skin.colour AS skin_colour\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour eye ON s.eye_colour_id = eye.id\nJOIN colour hair ON s.hair_colour_id = hair.id\nJOIN colour skin ON s.skin_colour_id = skin.id\nWHERE g.gender = 'Female'\n  AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.eye_colour_id = s.hair_colour_id\n  AND s.hair_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (SUM(CASE WHEN c.colour = 'Blue' AND g.gender = 'Female' THEN 1 ELSE 0 END) / \n     SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END)) * 100 AS percentage_of_blue_female_superheroes\nFROM superhero s\nJOIN colour c ON s.skin_colour_id = c.id\nJOIN gender g ON s.gender_id = g.id;\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) AS power_count\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nWHERE s.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT s.height_cm\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'Black'\n  AND c2.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT s.superhero_name\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM hero_attribute ha \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Strength' \n  AND ha.attribute_value = (\n    SELECT MAX(ha2.attribute_value) \n    FROM hero_attribute ha2 \n    JOIN attribute a2 ON ha2.attribute_id = a2.id \n    WHERE a2.attribute_name = 'Strength'\n  );\t----- bird -----\tsuperhero",
    "281": "SELECT\n    DIVIDE(SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END), COUNT(*)) * 100 AS female_percent\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT SUBTRACT(\n       SUM(CASE WHEN full_name = 'Emil Blonsky' THEN weight_kg END),\n       SUM(CASE WHEN full_name = 'Charles Chandler' THEN weight_kg END)\n     ) AS difference\nFROM superhero;\t----- bird -----\tsuperhero",
    "283": "SELECT DIVIDE(SUM(height_cm), COUNT(*)) AS average_height_cm FROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN superhero s ON ha.hero_id = s.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'Blue'\n  AND c2.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT s.superhero_name, p.publisher_name\nFROM superhero AS s\nJOIN publisher AS p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT\n    DIVIDE(SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END), COUNT(*)) * 100.0 AS blue_eye_percentage\nFROM superhero;\t----- bird -----\tsuperhero",
    "290": "SELECT DIVIDE(SUM(gender_id = 1), SUM(gender_id = 2)) AS ratio FROM superhero;\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour AS eye_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT SUBTRACT(SUM(c.id = 7), SUM(c.id = 1)) AS difference\nFROM superhero s\nLEFT JOIN colour c ON s.eye_colour_id = c.id\nWHERE s.weight_kg = 0 OR s.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) AS num_green_villains\nFROM superhero s\nJOIN colour c ON s.skin_colour_id = c.id\nJOIN alignment a ON s.alignment_id = a.id\nWHERE c.colour = 'Green' AND a.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Wind Control'\nORDER BY s.superhero_name;\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN gender g ON s.gender_id = g.id\nWHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT\n    SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) -\n    SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS difference\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, Reputation\nFROM users\nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon')\nORDER BY Reputation DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName\nFROM users\nWHERE YEAR(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) AS user_count\nFROM users\nWHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) AS post_count\nFROM posts AS p\nJOIN users AS u\n  ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": "SELECT COALESCE(p.LastEditorDisplayName, u.DisplayName) AS display_name\nFROM posts p\nLEFT JOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) AS elder_posts_score_over_19\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Age > 65 AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body\nFROM tags t\nJOIN posts p ON p.Id = t.ExcerptPostId\nWHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT\n    (SUM(CASE WHEN u.Age > 65 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM posts p\nLEFT JOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.UserId = 3025\n  AND c.CreationDate = '2014-04-23 20:29:39';\t----- bird -----\tcodebase_community",
    "308": "SELECT p.Id,\n       CASE WHEN p.ClosedDate IS NULL THEN 'well-finished' ELSE 'not well-finished' END AS post_status\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 23853\n  AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) AS post_count\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT u.DisplayName\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT \n    (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) / \n    NULLIF((SELECT COUNT(*) FROM votes WHERE UserId = 24), 0) AS ratio;\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount\nFROM posts\nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT UserDisplayName\nFROM comments\nWHERE Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT OwnerDisplayName\nFROM posts\nWHERE Title = 'Open source tools for visualizing multi-dimensional data?';\t----- bird -----\tcodebase_community",
    "317": "SELECT \n    c.Text,\n    c.CreationDate,\n    c.UserId,\n    c.UserDisplayName\nFROM comments c\nWHERE c.UserId IN (\n    SELECT DISTINCT ph.UserId\n    FROM postHistory ph\n    JOIN posts p ON ph.PostId = p.Id\n    WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\n);\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nJOIN users u ON v.UserId = u.Id\nWHERE v.BountyAmount = 50\n  AND p.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": "SELECT \n    AVG(p.ViewCount) OVER() AS avg_view_count,\n    p.Title,\n    c.Text AS comment\nFROM posts p\nLEFT JOIN comments c ON c.PostId = p.Id\nWHERE p.Tags LIKE '%<humor>%';\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) AS user_count\nFROM (\n    SELECT UserId\n    FROM badges\n    GROUP BY UserId\n    HAVING COUNT(*) > 5\n) AS sub;\t----- bird -----\tcodebase_community",
    "321": "SELECT u.Id, u.DisplayName\nFROM users u\nJOIN posts p ON p.OwnerUserId = u.Id\nJOIN postHistory ph ON ph.PostId = p.Id\nGROUP BY u.Id, u.DisplayName\nHAVING COUNT(p.Id) = COUNT(DISTINCT ph.PostId)\n   AND MIN(p.ViewCount) >= 1000;\t----- bird -----\tcodebase_community",
    "322": "SELECT\n  (1.0 * SUM(CASE WHEN YEAR(`Date`) = 2010 THEN 1 ELSE 0 END) /\n   COUNT(*) * 100) -\n  (1.0 * SUM(CASE WHEN YEAR(`Date`) = 2011 THEN 1 ELSE 0 END) /\n   COUNT(*) * 100) AS PercentageDifference\nFROM badges\nWHERE `Name` = 'Student';\t----- bird -----\tcodebase_community",
    "323": "SELECT\n    AVG(u.UpVotes) AS avg_upvotes,\n    AVG(u.Age) AS avg_age\nFROM users u\nJOIN (\n    SELECT OwnerUserId\n    FROM posts\n    GROUP BY OwnerUserId\n    HAVING COUNT(*) > 10\n) p ON u.Id = p.OwnerUserId;\t----- bird -----\tcodebase_community",
    "324": "SELECT DIVIDE(\n    COUNT(IF(YEAR(CreationDate) = 2010, 1, NULL)),\n    COUNT(IF(YEAR(CreationDate) = 2011, 1, NULL))\n) AS ratio\nFROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT u.DisplayName, SUM(p.ViewCount) AS total_views\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName IN ('Harvey Motulsky','Noah Snyder')\nGROUP BY u.DisplayName\nORDER BY total_views DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT tag\nFROM (\n    WITH RECURSIVE tag_split AS (\n        SELECT\n            p.Id,\n            p.Tags,\n            1 AS n,\n            CASE\n                WHEN REGEXP_SUBSTR(p.Tags, '<[^>]+>', 1, 1) IS NOT NULL\n                THEN SUBSTRING(\n                        REGEXP_SUBSTR(p.Tags, '<[^>]+>', 1, 1),\n                        2,\n                        CHAR_LENGTH(REGEXP_SUBSTR(p.Tags, '<[^>]+>', 1, 1)) - 2\n                    )\n                ELSE NULL\n            END AS tag\n        FROM posts p\n        JOIN users u ON p.OwnerUserId = u.Id\n        WHERE u.DisplayName = 'Mark Meckes'\n          AND p.CommentCount = 0\n        UNION ALL\n        SELECT\n            p.Id,\n            p.Tags,\n            n + 1 AS n,\n            CASE\n                WHEN REGEXP_SUBSTR(p.Tags, '<[^>]+>', 1, n + 1) IS NOT NULL\n                THEN SUBSTRING(\n                        REGEXP_SUBSTR(p.Tags, '<[^>]+>', 1, n + 1),\n                        2,\n                        CHAR_LENGTH(REGEXP_SUBSTR(p.Tags, '<[^>]+>', 1, n + 1)) - 2\n                    )\n                ELSE NULL\n            END\n        FROM tag_split\n        JOIN posts p ON p.Id = tag_split.Id\n        WHERE tag_split.tag IS NOT NULL\n    )\n    SELECT tag FROM tag_split WHERE tag IS NOT NULL\n) AS t;\t----- bird -----\tcodebase_community",
    "328": "SELECT ROUND(DIVIDE(SUM(CASE WHEN Tags LIKE '%<r>%' THEN 1 ELSE 0 END), COUNT(*)) * 100, 2) AS r_percentage\nFROM posts\nWHERE OwnerDisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "329": "SELECT\n    COALESCE(SUM(IF(u.DisplayName='Mornington', p.ViewCount, 0)),0) -\n    COALESCE(SUM(IF(u.DisplayName='Amos', p.ViewCount, 0)),0) AS ViewCountDifference\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(pl.Id) / 12.0 AS avg_monthly_links\nFROM postLinks AS pl\nJOIN posts AS p ON pl.PostId = p.Id\nWHERE YEAR(pl.CreationDate) = 2010\n  AND p.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) AS first_vote_date\nFROM users u\nJOIN votes v ON u.Id = v.UserId\nWHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT u.DisplayName\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Name = 'Autobiographer'\nORDER BY b.Date ASC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(*) FROM (\n  SELECT u.Id\n  FROM users u\n  JOIN posts p ON p.OwnerUserId = u.Id\n  WHERE u.Location = 'United Kingdom'\n  GROUP BY u.Id\n  HAVING SUM(p.FavoriteCount) >= 4\n) sub;\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreationDate) = 2010\nORDER BY p.FavoriteCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT DIVIDE(COUNT(CASE WHEN YEAR(p.CreaionDate) = 2011 AND u.Reputation > 1000 THEN 1 END), COUNT(p.Id)) * 100 AS percentage_of_posts\nFROM posts p\nLEFT JOIN users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "337": "SELECT\n    p.ViewCount AS total_views,\n    u.DisplayName AS owner_display_name\nFROM\n    posts p\nJOIN\n    users u\nON\n    p.OwnerUserId = u.Id\nWHERE\n    p.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) AS comment_count\nFROM comments\nWHERE PostId = (\n    SELECT Id\n    FROM posts\n    ORDER BY Score DESC\n    LIMIT 1\n);\t----- bird -----\tcodebase_community",
    "339": "SELECT\n    c.Text,\n    c.UserDisplayName\nFROM\n    comments AS c\nJOIN\n    posts AS p\n    ON c.PostId = p.Id\nWHERE\n    p.Title = 'Analysing wind data with R'\nORDER BY\n    c.CreationDate DESC\nLIMIT\n    10;\t----- bird -----\tcodebase_community",
    "340": "SELECT DIVIDE(SUM(CASE WHEN Score > 50 THEN 1 ELSE 0 END), COUNT(*)) * 100 AS percentage_above_50\nFROM posts\nWHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT u.`Reputation`, u.`UpVotes`\nFROM `comments` c\nJOIN `users` u ON c.`UserId` = u.`Id`\nWHERE c.`Text` = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments AS c \nJOIN posts AS p \n  ON p.Id = c.PostId \nWHERE p.CommentCount = 1 \n  AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT\n  DIVIDE(\n    SUM(CASE WHEN u.UpVotes = 0 THEN 1 ELSE 0 END),\n    COUNT(DISTINCT c.UserId)\n  ) * 100 AS percentage\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Score BETWEEN 5 AND 10\n  AND c.UserId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "346": "SELECT id, name, cardKingdomFoilId, cardKingdomId\nFROM cards\nWHERE cardKingdomFoilId IS NOT NULL\n  AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT id, name, cardKingdomFoilId, cardKingdomId, borderColor\nFROM cards\nWHERE borderColor = 'borderless'\n  AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL);\t----- bird -----\tcard_games",
    "348": "SELECT cards.id, cards.name, cards.rarity\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic'\n  AND legalities.format = 'gladiator'\n  AND legalities.status = 'Banned';\t----- bird -----\tcard_games",
    "349": "SELECT c.id, c.name, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.side IS NULL\n  AND c.types LIKE '%Artifact%'\n  AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE (c.power = '*' OR c.power IS NULL)\n  AND l.format = 'commander'\n  AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "351": "SELECT\n    c.id,\n    r.text AS ruling_text,\n    IF(c.hasContentWarning = 1, 'Yes', 'No') AS missing_or_degraded\nFROM\n    cards c\nLEFT JOIN\n    rulings r ON c.uuid = r.uuid\nWHERE\n    c.artist IN ('Stephen Daniel', 'Stephen Daniele');\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, c.isPromo\nFROM cards AS c\nJOIN (\n    SELECT uuid, COUNT(*) AS rulings_count\n    FROM rulings\n    GROUP BY uuid\n    ORDER BY rulings_count DESC\n    LIMIT 1\n) AS r ON c.uuid = r.uuid;\t----- bird -----\tcard_games",
    "353": "SELECT\n    (COUNT(DISTINCT c.id) / (SELECT COUNT(*) FROM cards)) * 100 AS chinese_simplified_percentage\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) AS infinite_power_cards\nFROM cards\nWHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT l.format, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT\n  ROUND(100.0 * SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) / COUNT(id), 2) AS borderless_percentage\nFROM\n  cards;\t----- bird -----\tcard_games",
    "358": "SELECT ROUND(\n    100.0 * SUM(CASE WHEN fd.language = 'French' THEN 1 ELSE 0 END) / COUNT(*),\n    2\n) AS percentage_french\nFROM cards c\nLEFT JOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) AS num_cards\nFROM cards\nWHERE originalType = 'Summon - Angel'\n  AND subtypes <> 'Angel';\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) AS banned_white_border_cards\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Banned'\n  AND c.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT c.id, c.name, f.language, f.name AS foreign_name\nFROM cards c\nJOIN foreign_data f ON f.uuid = c.uuid\nWHERE c.originalType = 'Artifact' AND c.colors = 'B';\t----- bird -----\tcard_games",
    "363": "SELECT `manaCost`\nFROM `cards`\nWHERE `layout` = 'normal'\n  AND `frameVersion` = '2003'\n  AND `borderColor` = 'black'\n  AND `availability` = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT ROUND(100 * SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 END) / COUNT(*), 2) AS percentage FROM cards;\nSELECT id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT s.id) AS brazilian_portuguese_commander_sets\nFROM sets AS s\nJOIN set_translations AS st ON st.setCode = s.code\nWHERE s.block = 'Commander'\n  AND st.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT subtypes AS type\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'German' AND c.subtypes IS NOT NULL\nUNION\nSELECT DISTINCT supertypes AS type\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'German' AND c.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) AS total_cards\nFROM (\n    SELECT DISTINCT c.id\n    FROM cards c\n    JOIN legalities l ON c.uuid = l.uuid\n    JOIN rulings r ON c.uuid = r.uuid\n    WHERE l.format = 'premodern'\n      AND r.text = 'This is a triggered mana ability.'\n      AND c.side IS NULL\n) AS sub;\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.artist = 'Matthew D. Wilson'\n  AND c.type LIKE 'Creature%'\n  AND c.layout = 'normal'\n  AND c.borderColor = 'black'\n  AND fd.language = 'French';\t----- bird -----\tcard_games",
    "370": "SELECT st.language\nFROM set_translations AS st\nJOIN sets AS s ON st.setCode = s.code\nWHERE s.baseSetSize = 180\n  AND s.block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": "SELECT\n  100 * SUM(CASE WHEN c.hasContentWarning = 0 THEN 1 ELSE 0 END) / COUNT(*) AS percentage\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'commander'\n  AND l.status = 'legal';\t----- bird -----\tcard_games",
    "372": "SELECT\n    (COUNT(DISTINCT CASE WHEN fd.language = 'French' AND (c.power IS NULL OR c.power = '*') THEN c.id END) /\n     COUNT(DISTINCT CASE WHEN (c.power IS NULL OR c.power = '*') THEN c.id END)) * 100 AS percentage\nFROM cards c\nLEFT JOIN foreign_data fd ON c.uuid = fd.uuid;\t----- bird -----\tcard_games",
    "373": "SELECT language\nFROM foreign_data\nWHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT \n  DIVIDE(\n    COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END),\n    COUNT(CASE WHEN isTextless = 1 THEN 1 END)\n  ) * 100 AS proportion\nFROM cards;\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT st.language\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE s.code = 'ARC' AND s.mcmName = 'Archenemy';\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT fd.language\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE c.name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT name\nFROM cards\nWHERE name IN ('Serra Angel', 'Shrine Keeper')\nORDER BY convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN set_translations st ON st.setCode = s.code\nWHERE c.name = 'Ancestor''s Chosen'\n  AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS (\n    SELECT 1\n    FROM cards c\n    JOIN foreign_data f ON f.uuid = c.uuid\n    WHERE c.name = 'Ancestor''s Chosen'\n      AND f.language = 'Korean'\n) AS hasKorean;\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) AS adam_rex_cards\nFROM cards c\nJOIN set_translations st ON st.setCode = c.setCode\nWHERE st.translation = 'Hauptset Zehnte Edition'\n  AND c.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT st.translation\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.name = 'Eighth Edition'\n  AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT \n    CASE \n        WHEN EXISTS (\n            SELECT 1\n            FROM cards c\n            JOIN sets s ON c.setCode = s.code\n            WHERE c.name = 'Angel of Mercy'\n              AND s.mtgoCode IS NOT NULL\n        ) THEN 'Yes'\n        ELSE 'No'\n    END AS appears_on_mtgo;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.id) AS italian_sets_count\nFROM sets s\nJOIN set_translations st ON st.setCode = s.code\nWHERE s.block = 'Ice Age'\n  AND st.language = 'Italian'\n  AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT CASE WHEN s.isForeignOnly = 1 THEN 'Yes' ELSE 'No' END AS OnlyAvailableOutsideUS\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.name = 'Adarkar Valkyrie'\nLIMIT 1;\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) AS italian_base_sets_under_10\nFROM sets s\nJOIN set_translations st ON s.id = st.id\nWHERE st.language = 'Italian'\n  AND st.translation IS NOT NULL\n  AND s.baseSetSize < 10;\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT c.artist\nFROM cards c\nJOIN sets s ON s.code = c.setCode\nWHERE s.name = 'Coldsnap'\n  AND c.artist IN ('Jeremy Jarvis','Aaron Miller','Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) AS count\nFROM cards\nWHERE setCode = 'Coldsnap'\n  AND convertedManaCost > 5\n  AND (power IS NULL OR power = '*');\t----- bird -----\tcard_games",
    "388": "SELECT flavorText\nFROM foreign_data\nWHERE name = 'Ancestor''s Chosen'\n  AND language = 'Italian';\t----- bird -----\tcard_games",
    "389": "SELECT rulings.text\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN rulings ON cards.uuid = rulings.uuid\nJOIN foreign_data ON rulings.uuid = foreign_data.uuid\nWHERE sets.name = 'Coldsnap'\n  AND foreign_data.language = 'Italian'\n  AND foreign_data.type = 'ruling';\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE fd.language = 'Italian'\n  AND s.name = 'Coldsnap'\n  AND c.convertedManaCost = (\n      SELECT MAX(c2.convertedManaCost)\n      FROM cards c2\n      WHERE c2.setCode = s.code\n        AND c2.convertedManaCost IS NOT NULL\n  );\t----- bird -----\tcard_games",
    "391": "SELECT \n    DIVIDE(SUM(convertedManaCost = 7), SUM(convertedManaCost)) * 100 AS percentage\nFROM cards c\nINNER JOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "392": "SELECT\n    DIVIDE(\n        SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 END),\n        SUM(CASE WHEN name = 'Coldsnap' THEN 1 END)\n    ) * 100 AS percentage\nFROM cards;\t----- bird -----\tcard_games",
    "393": "SELECT l.format, c.name\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\n  AND l.format = (\n      SELECT l2.format\n      FROM legalities l2\n      WHERE l2.status = 'Banned'\n      GROUP BY l2.format\n      ORDER BY COUNT(*) DESC\n      LIMIT 1\n  );\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.id = l.id\nWHERE c.edhrecRank = 1\n  AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT\n    c.name AS card_name,\n    l.format\nFROM\n    cards c\n    INNER JOIN sets s ON c.setCode = s.code\n    INNER JOIN legalities l ON l.uuid = c.uuid\nWHERE\n    s.name = 'Hour of Devastation'\n    AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT DISTINCT s.name\nFROM sets s\nWHERE s.code IN (\n      SELECT st.setCode\n      FROM set_translations st\n      WHERE st.language = 'Korean'\n   )\n  AND s.code NOT IN (\n      SELECT st.setCode\n      FROM set_translations st\n      WHERE st.language = 'Japanese'\n   );\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT frameVersion FROM cards WHERE artist='Allen Williams';\nSELECT c.id, c.name, l.format, l.status FROM cards c JOIN legalities l ON c.id = l.id WHERE l.status = 'Banned';\t----- bird -----\tcard_games",
    "398": "SELECT bond_type, COUNT(*) AS cnt\nFROM bond\nWHERE bond_type IS NOT NULL\nGROUP BY bond_type\nORDER BY cnt DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(o_cnt) AS avg_oxygen_per_single_bonded_molecule\nFROM (\n    SELECT m.molecule_id,\n           COUNT(a.atom_id) AS o_cnt\n    FROM molecule m\n    LEFT JOIN atom a \n        ON a.molecule_id = m.molecule_id \n        AND a.element = 'o'\n    WHERE EXISTS (\n        SELECT 1\n        FROM bond b\n        WHERE b.molecule_id = m.molecule_id\n          AND b.bond_type = '-'\n    )\n    GROUP BY m.molecule_id\n) AS sub;\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(cnt) AS avg_single_bonds\nFROM (\n    SELECT bond.molecule_id, COUNT(*) AS cnt\n    FROM bond\n    JOIN molecule ON bond.molecule_id = molecule.molecule_id\n    WHERE molecule.label = '+'\n      AND bond.bond_type = '-'\n    GROUP BY bond.molecule_id\n) AS sub;\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE m.label = '+'\n  AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "402": "SELECT DIVIDE(SUM(a.element = 'c'), COUNT(a.atom_id)) AS percentage_carbon\nFROM atom AS a\nWHERE EXISTS (\n    SELECT 1\n    FROM bond AS b\n    WHERE b.molecule_id = a.molecule_id\n      AND b.bond_type = '='\n);\t----- bird -----\ttoxicology",
    "403": "SELECT DISTINCT a.element\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nWHERE c.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON (a.atom_id = c.atom_id OR a.atom_id = c.atom_id2)\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT\n    m.label,\n    COUNT(*) AS cnt\nFROM\n    atom a\nJOIN\n    molecule m ON a.molecule_id = m.molecule_id\nWHERE\n    a.element = 'h'\nGROUP BY\n    m.label\nORDER BY\n    cnt DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT a.element\nFROM atom AS a\nJOIN molecule AS m ON a.molecule_id = m.molecule_id\nWHERE m.label = '-'\n  AND a.element IS NOT NULL\nGROUP BY a.element\nORDER BY COUNT(*) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20')\n   OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8')\nLIMIT 1;\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) AS atom_count\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nWHERE a.element IN ('i','s')\n  AND b.bond_type = '-';\t----- bird -----\ttoxicology",
    "409": "SELECT\n  100 * SUM(\n    CASE \n      WHEN NOT EXISTS (\n        SELECT 1 \n        FROM atom a \n        WHERE a.molecule_id = m.molecule_id \n          AND a.element = 'f'\n      ) THEN 1 \n      ELSE 0 \n    END\n  ) / COUNT(*) AS percentage\nFROM molecule m\nWHERE label = '+';\t----- bird -----\ttoxicology",
    "410": "SELECT\n    DIVIDE(SUM(bond_type = '#') * 100, COUNT(bond_id)) AS percent\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM (\n    SELECT element, COUNT(*) AS cnt\n    FROM atom\n    WHERE molecule_id = 'TR000'\n    GROUP BY element\n    ORDER BY cnt DESC\n    LIMIT 3\n) AS t\nORDER BY element ASC;\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND(100*DIVIDE(SUM(bond_type='='), COUNT(bond_id)),5) AS percent\nFROM bond\nWHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(DIVIDE(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END), COUNT(molecule_id)) * 100, 3) AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(100 * SUM(element = 'h') / COUNT(*), 4) AS hydrogen_percentage\nFROM atom\nWHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT m.label, GROUP_CONCAT(DISTINCT a.element SEPARATOR ', ') AS elements\nFROM molecule m\nLEFT JOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id = 'TR060'\nGROUP BY m.label;\t----- bird -----\ttoxicology",
    "416": "SELECT b.bond_type AS majority_bond_type,\n       'Unknown' AS carcinogenic\nFROM bond b\nWHERE b.molecule_id = 'TR010'\nGROUP BY b.bond_type\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = '-'\n  AND m.label = '-'\nGROUP BY m.molecule_id\nORDER BY m.molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT c.bond_id) AS bond_count\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12')\n  AND b.molecule_id = 'TR009';\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id AS atom1, c.atom_id2 AS atom2\nFROM bond AS b\nJOIN connected AS c ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) AS connections\nFROM connected\nWHERE atom_id LIKE 'TR%_19'\n   OR atom_id2 LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT DISTINCT element\nFROM atom\nWHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id\nFROM `molecule` m\nJOIN `atom` a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\n  AND m.label = '+';\t----- bird -----\ttoxicology",
    "423": "SELECT b.bond_id, b.bond_type\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a1.element = 'p' AND a2.element = 'n')\n   OR (a1.element = 'n' AND a2.element = 'p');\t----- bird -----\ttoxicology",
    "424": "SELECT \n    CASE \n        WHEN EXISTS (\n            SELECT 1 \n            FROM (\n                WITH dbl_counts AS (\n                    SELECT bond.molecule_id, COUNT(*) AS dbl_cnt\n                    FROM bond\n                    WHERE bond.bond_type = ' = '\n                    GROUP BY bond.molecule_id\n                ), max_cnt AS (\n                    SELECT MAX(dbl_cnt) AS max_dbl\n                    FROM dbl_counts\n                )\n                SELECT m.label\n                FROM dbl_counts d\n                JOIN max_cnt mc ON d.dbl_cnt = mc.max_dbl\n                JOIN molecule m ON d.molecule_id = m.molecule_id\n                WHERE m.label = '+'\n            ) t\n        ) THEN 'YES' \n        ELSE 'NO' \n    END AS carcinogenic;\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS avg_bonds\nFROM (\n    SELECT a.atom_id,\n           COUNT(DISTINCT c.bond_id) AS bond_count\n    FROM atom a\n    LEFT JOIN connected c\n       ON a.atom_id = c.atom_id\n       OR a.atom_id = c.atom_id2\n    WHERE a.element = 'i'\n    GROUP BY a.atom_id\n) AS sub;\t----- bird -----\ttoxicology",
    "426": "SELECT DISTINCT element\nFROM atom\nWHERE atom_id NOT IN (SELECT atom_id FROM connected);\t----- bird -----\ttoxicology",
    "427": "SELECT c.atom_id, c.atom_id2\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR041'\n  AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "428": "SELECT DISTINCT a.element\nFROM atom AS a\nJOIN connected AS c\n  ON (a.atom_id = c.atom_id OR a.atom_id = c.atom_id2)\nWHERE c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON b.bond_id = c.bond_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(DIVIDE(SUM(m.label = '+') * 100, COUNT(b.bond_id)), 5) AS percentage\nFROM bond b\nLEFT JOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*) \nFROM atom a\nWHERE a.molecule_id IN (\n    SELECT DISTINCT m.molecule_id\n    FROM molecule m\n    JOIN bond b ON m.molecule_id = b.molecule_id\n    JOIN atom a2 ON m.molecule_id = a2.molecule_id\n    WHERE b.bond_type = '#'\n      AND a2.element IN ('p', 'br')\n);\t----- bird -----\ttoxicology",
    "432": "SELECT \n    DIVIDE(SUM(a.element = 'cl'), COUNT(*)) AS percent\nFROM \n    connected c\n    JOIN atom a ON c.atom_id = a.atom_id\n    JOIN bond b ON c.bond_id = b.bond_id\nWHERE \n    b.bond_type = '-';\t----- bird -----\ttoxicology",
    "433": "SELECT a.element AS element1, a2.element AS element2\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT\n  DIVIDE(SUM(atom.element = 'cl'), COUNT(*)) * 100 AS chlorine_percentage\nFROM molecule\nJOIN atom ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT\n    a.element,\n    COUNT(*) AS tally\nFROM\n    atom a\nJOIN\n    molecule m\nON\n    a.molecule_id = m.molecule_id\nWHERE\n    m.label = '+'\n    AND SUBSTR(a.atom_id, 7, 1) = '4'\nGROUP BY\n    a.element;\t----- bird -----\ttoxicology",
    "436": "SELECT \n    DIVIDE(SUM(a.element = 'h'), COUNT(*)) AS ratio,\n    m.label AS label\nFROM \n    molecule m\nJOIN \n    atom a ON a.molecule_id = m.molecule_id\nWHERE \n    m.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id, m.label\nHAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) AS num_virtual_schools_with_high_math\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE s.AvgScrMath > 400\n  AND sc.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode\nFROM frpm\nWHERE COALESCE(`Enrollment (K-12)`, 0) + COALESCE(`Enrollment (Ages 5-17)`, 0) > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(\n    CAST(`Free Meal Count (Ages 5-17)` AS DECIMAL(10,4)) /\n    NULLIF(`Enrollment (Ages 5-17)`, 0)\n) AS max_eligible_free_rate\nFROM satscores s\nJOIN frpm f ON s.cds = f.CDSCode\nWHERE s.NumTstTakr <> 0\n  AND s.NumGE1500 / s.NumTstTakr > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT RANK() OVER (ORDER BY s.AvgScrWrite DESC) AS rank,\n       sch.CharterNum,\n       s.AvgScrWrite\nFROM satscores AS s\nJOIN schools AS sch ON s.cds = sch.CDSCode\nWHERE s.AvgScrWrite > 499\n  AND sch.CharterNum IS NOT NULL\nORDER BY s.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT\n    s.School,\n    CONCAT_WS(' ', s.Street, s.StreetAbr, s.City, s.Zip) AS full_address\nFROM\n    schools s\nJOIN\n    frpm f\n    ON s.CDSCode = f.CDSCode\nWHERE\n    f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT DISTINCT frpm.`School Name`\nFROM frpm\nJOIN satscores ON frpm.`CDSCode` = satscores.`cds`\nWHERE frpm.`Enrollment (K-12)` > 0\n  AND (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) > 0.1\n  AND satscores.`AvgScrMath` >= 1500;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType\nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE s.County = 'Riverside'\n  AND sc.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT\n    s.School AS school_name,\n    s.Street,\n    s.City,\n    s.State,\n    s.Zip,\n    f.`Free Meal Count (Ages 5-17)` AS free_meals\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Monterey'\n  AND f.`School Type` LIKE '%High%'\n  AND f.`Free Meal Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "446": "SELECT \n    sch.School,\n    sch.Phone,\n    s.AvgScrWrite,\n    AVG(s.AvgScrWrite) OVER () AS OverallAvgScoreWrite\nFROM \n    schools sch\nJOIN \n    satscores s ON s.cds = sch.CDSCode\nWHERE \n    sch.OpenDate > '1991-12-31' \n    OR sch.ClosedDate < '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "447": "SELECT \n    s.`School` AS SchoolName,\n    s.`DOCType`\nFROM \n    frpm f\nJOIN \n    schools s \n    ON f.`CDSCode` = s.`CDSCode`\nWHERE \n    f.`Charter School (Y/N)` = 0\n    AND (\n        COALESCE(f.`Enrollment (K-12)`,0) - COALESCE(f.`Enrollment (Ages 5-17)`,0)\n    ) > (\n        SELECT AVG(\n            COALESCE(f2.`Enrollment (K-12)`,0) - COALESCE(f2.`Enrollment (Ages 5-17)`,0)\n        )\n        FROM frpm f2\n        WHERE f2.`Charter School (Y/N)` = 0\n    );\t----- bird -----\tcalifornia_schools",
    "448": "SELECT\n    CDSCode,\n    `Enrollment (K-12)` AS Enrollment_K12,\n    `Free Meal Count (K-12)` AS FreeMeal_K12,\n    (`Free Meal Count (K-12)` / `Enrollment (K-12)`) * 1.0 AS EligibleFreeRate\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 2 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT `School Name`,\n       IF(`Enrollment (K-12)` = 0, NULL, `FRPM Count (K-12)` / `Enrollment (K-12)`) AS EligibleRate\nFROM frpm\nWHERE `County Code` = 66\nORDER BY `Free Meal Count (K-12)` DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT\n    s.Street,\n    s.City,\n    s.Zip,\n    s.State\nFROM\n    schools s\nJOIN\n    satscores sa ON s.CDSCode = sa.cds\nORDER BY\n    (sa.NumGE1500 / NULLIF(sa.NumTstTakr, 0)) ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT sc.CDSCode,\n       CONCAT(sc.AdmFName1,' ',sc.AdmLName1) AS Admin1,\n       CONCAT(sc.AdmFName2,' ',sc.AdmLName2) AS Admin2,\n       CONCAT(sc.AdmFName3,' ',sc.AdmLName3) AS Admin3\nFROM satscores s\nJOIN schools sc ON sc.CDSCode = s.cds\nWHERE s.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(t.NumTstTakr) AS avg_test_takers\nFROM satscores t\nJOIN schools s ON t.cds = s.CDSCode\nWHERE s.County = 'Fresno'\n  AND s.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.`Phone`\nFROM schools s\nJOIN satscores sc ON s.`CDSCode` = sc.`cds`\nWHERE s.`District` = 'Fresno Unified'\n  AND sc.`AvgScrRead` IS NOT NULL\nORDER BY sc.`AvgScrRead` ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT School\nFROM (\n    SELECT s.School,\n           RANK() OVER (PARTITION BY s.County ORDER BY ss.AvgScrRead DESC) AS rnk\n    FROM schools s\n    JOIN satscores ss ON ss.cds = s.CDSCode\n    WHERE s.Virtual = 'F'\n) AS ranked\nWHERE rnk <= 5;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT \n    s.School,\n    AVG(sc.AvgScrWrite) AS AvgWritingScore\nFROM \n    schools s\nINNER JOIN \n    satscores sc ON s.CDSCode = sc.cds\nWHERE \n    s.AdmFName1 = 'Ricci' \n    AND s.AdmLName1 = 'Ulrich'\nGROUP BY \n    s.School;\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.CDSCode, s.School, s.State, f.`Enrollment (K-12)`\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.DOC = 31\n  AND f.`Enrollment (K-12)` = (\n        SELECT MAX(`Enrollment (K-12)`)\n        FROM frpm fp\n        JOIN schools sp ON fp.CDSCode = sp.CDSCode\n        WHERE sp.DOC = 31\n    )\nORDER BY f.`Enrollment (K-12)` DESC;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12.0 AS monthly_avg\nFROM schools\nWHERE County = 'Alameda'\n  AND DOC = '52'\n  AND YEAR(OpenDate) = 1980;\t----- bird -----\tcalifornia_schools",
    "458": "SELECT\n  SUM(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) AS unified_count,\n  SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END) AS elementary_count,\n  SUM(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END), 0) AS ratio\nFROM schools\nWHERE County = 'Orange';\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.Street, s.School\nFROM satscores sc\nJOIN schools s ON sc.cds = s.CDSCode\nWHERE sc.AvgScrMath IS NOT NULL\nORDER BY sc.AvgScrMath DESC\nLIMIT 6, 1;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) AS total_non_chartered_los_angeles\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Charter = 0\n  AND s.County = 'Los Angeles'\n  AND f.`Enrollment (K-12)` > 0\n  AND (f.`Free Meal Count (K-12)` * 100 / f.`Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT\n    `Enrollment (Ages 5-17)` AS enrollment\nFROM\n    frpm f\nJOIN\n    schools s ON f.CDSCode = s.CDSCode\nWHERE\n    s.EdOpsCode = 'SSS'\n    AND s.City = 'Fremont'\n    AND f.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.School,\n       ROUND((frpm.`FRPM Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)`) * 100, 2) AS `Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools s\nJOIN frpm frpm ON s.CDSCode = frpm.CDSCode\nWHERE s.County = 'Los Angeles'\n  AND frpm.`Low Grade` = 'Kindergarten'\n  AND frpm.`High Grade` = '9th grade';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT\n    County,\n    COUNT(*) AS num_schools\nFROM\n    schools\nWHERE\n    Virtual = 'F'\n    AND (County LIKE '%San Diego%' OR County LIKE '%Santa Barbara%')\nGROUP BY\n    County\nORDER BY\n    num_schools DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT \n    CAST(f.`High Grade` AS UNSIGNED) - CAST(f.`Low Grade` AS UNSIGNED) AS grade_span\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE ABS(s.Longitude) = (SELECT MAX(ABS(Longitude)) FROM schools);\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(*) AS magnet_multiple_count\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Magnet = 1\n  AND f.`Low Grade` = 'Kindergarten'\n  AND f.`High Grade` = '8th grade'\n  AND f.`NSLP Provision Status` = 'Multiple Provision Types';\n\nSELECT s.City, COUNT(*) AS schools_count\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.`Low Grade` = 'Kindergarten'\n  AND f.`High Grade` = '8th grade'\nGROUP BY s.City\nORDER BY s.City;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT frpm.`District Code` AS district_code,\n       frpm.`Percent (%) Eligible Free (K-12)` AS percent_free_k12\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.`AdmFName1` = 'Alusine'\n   OR schools.`AdmFName2` = 'Alusine'\n   OR schools.`AdmFName3` = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT DISTINCT email\nFROM (\n    SELECT AdmEmail1 AS email\n    FROM schools\n    WHERE County='San Bernardino'\n      AND District='San Bernardino City Unified'\n      AND SOC='62'\n      AND DOC='54'\n      AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n    \n    UNION ALL\n    \n    SELECT AdmEmail2\n    FROM schools\n    WHERE County='San Bernardino'\n      AND District='San Bernardino City Unified'\n      AND SOC='62'\n      AND DOC='54'\n      AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n    \n    UNION ALL\n    \n    SELECT AdmEmail3\n    FROM schools\n    WHERE County='San Bernardino'\n      AND District='San Bernardino City Unified'\n      AND SOC='62'\n      AND DOC='54'\n      AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n) AS e\nWHERE e.email IS NOT NULL\n  AND e.email REGEXP '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}$';\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT a.account_id) AS account_count\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN district di ON a.district_id = di.district_id\nWHERE d.type = 'POPLATEK PO OBRATU'\n  AND di.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) \nFROM district \nWHERE A11 > 6000 \n  AND A11 < 10000;\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client c \nJOIN district d ON c.district_id = d.district_id \nWHERE c.gender = 'M' \n  AND d.A3 = 'North Bohemia' \n  AND d.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT a.account_id,\n       (SELECT MAX(ds2.A11)\n          FROM client c2\n          JOIN district ds2 ON c2.district_id = ds2.district_id\n          WHERE c2.gender = 'F') -\n       (SELECT MIN(ds1.A11)\n          FROM client c1\n          JOIN district ds1 ON c1.district_id = ds1.district_id\n          WHERE c1.gender = 'F'\n            AND c1.birth_date = (SELECT MIN(birth_date)\n                                   FROM client\n                                   WHERE gender = 'F')) AS gap\nFROM disp d\nJOIN client c ON d.client_id = c.client_id\nJOIN district ds ON c.district_id = ds.district_id\nWHERE c.gender = 'F'\n  AND c.birth_date = (SELECT MIN(birth_date)\n                       FROM client\n                       WHERE gender = 'F')\n  AND ds.A11 = (SELECT MIN(ds1.A11)\n                FROM client c1\n                JOIN district ds1 ON c1.district_id = ds1.district_id\n                WHERE c1.gender = 'F'\n                  AND c1.birth_date = (SELECT MIN(birth_date)\n                                       FROM client\n                                       WHERE gender = 'F'));\n\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.client_id = c.client_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.birth_date = (SELECT MAX(birth_date) FROM client)\n  AND d.A11 = (SELECT MAX(A11) FROM district);\t----- bird -----\tfinancial",
    "473": "SELECT DISTINCT a.account_id\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nCROSS JOIN (\n    SELECT MIN(l.amount) AS min_amount\n    FROM account a2\n    JOIN loan l ON a2.account_id = l.account_id\n    WHERE l.status = 'approved'\n      AND YEAR(l.date) = 1997\n      AND a2.frequency = 'POPLATEK TYDNE'\n) AS sub\nWHERE l.status = 'approved'\n  AND YEAR(l.date) = 1997\n  AND a.frequency = 'POPLATEK TYDNE'\n  AND l.amount = sub.min_amount;\t----- bird -----\tfinancial",
    "474": "SELECT DISTINCT a.account_id, a.district_id, a.frequency, a.date\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.duration > 12\n  AND YEAR(a.date) = 1993\n  AND l.amount = (\n      SELECT MAX(l2.amount)\n      FROM loan l2\n      JOIN account a2 ON l2.account_id = a2.account_id\n      WHERE l2.duration > 12\n        AND YEAR(a2.date) = 1993\n  );\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT c.client_id) AS female_count\nFROM client c\nJOIN account a ON c.district_id = a.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F'\n  AND c.birth_date < '1950-01-01'\n  AND d.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": "SELECT DISTINCT d.A2\nFROM client c\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F'\n  AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT DIVIDE(\n    SUM(CASE WHEN gender = 'M' THEN 1 END),\n    COUNT(*)\n) * 100 AS male_percentage\nFROM client\nWHERE district_id IN (\n    SELECT district_id\n    FROM district\n    WHERE A3 = 'south Bohemia'\n    ORDER BY A4 DESC\n    LIMIT 1\n);\t----- bird -----\tfinancial",
    "478": "SELECT\n    ((b2.balance - b1.balance) / b1.balance) * 100 AS increase_rate\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nJOIN trans b1 ON a.account_id = b1.account_id AND b1.date = '1993-03-22'\nJOIN trans b2 ON a.account_id = b2.account_id AND b2.date = '1998-12-27'\nWHERE l.date = '1993-07-05'\nORDER BY l.date, l.loan_id\nLIMIT 1;\t----- bird -----\tfinancial",
    "479": "SELECT SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount) AS percentage_of_fully_paid_loans\nFROM loan;\t----- bird -----\tfinancial",
    "480": "SELECT ROUND((COUNT(DISTINCT account_id) / (SELECT COUNT(DISTINCT account_id) FROM loan)) * 100, 2) AS percentage_of_running_accounts_under_100k\nFROM loan\nWHERE amount < 100000\n  AND status = 'C';\t----- bird -----\tfinancial",
    "481": "SELECT\n    d.A2 AS district_name,\n    d.district_id,\n    ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.status = 'D'\n  AND d.A12 IS NOT NULL;\t----- bird -----\tfinancial",
    "482": "SELECT d.A2 AS district,\n       COUNT(DISTINCT c.client_id) AS female_accounts\nFROM district d\nJOIN client c\n  ON c.district_id = d.district_id\n  AND c.gender = 'F'\nJOIN disp dp\n  ON dp.client_id = c.client_id\nGROUP BY d.district_id, d.A2\nORDER BY female_accounts DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) AS approved_loan_count\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.date BETWEEN '1995-01-01' AND '1997-12-31'\n  AND l.amount >= 250000\n  AND a.frequency = 'POPLATEK MESICNE'\n  AND UPPER(l.status) = 'APPROVED';\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT a.account_id) AS running_contract_accounts\nFROM account a\nJOIN loan l ON l.account_id = a.account_id\nWHERE a.district_id = 1\n  AND l.status IN ('C', 'D');\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) AS male_clients\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M'\n  AND d.A15 = (\n    SELECT A15\n    FROM district\n    ORDER BY A15 DESC\n    LIMIT 1, 1\n  );\t----- bird -----\tfinancial",
    "486": "SELECT d.A2 AS district_name,\n       t.trans_id,\n       t.amount,\n       t.date\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ'\n  AND t.date LIKE '1996-01%'\nORDER BY t.amount DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT l.account_id) AS running_contract_count\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE a.district_id = 1\n  AND l.status IN ('C', 'D');\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) AS male_clients\nFROM client\nWHERE gender = 'M'\n  AND district_id = (\n    SELECT district_id\n    FROM district\n    WHERE A15 IS NOT NULL\n    ORDER BY A15 DESC\n    LIMIT 1 OFFSET 1\n  );\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT d.client_id\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN disp d ON a.account_id = d.account_id\nWHERE t.operation = 'VYBER KARTOU'\n  AND YEAR(t.date) = 1998\n  AND t.amount < (\n        SELECT AVG(amount)\n        FROM trans\n        WHERE YEAR(date) = 1998\n          AND operation = 'VYBER KARTOU'\n      );\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT disp.type\nFROM disp\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE disp.type <> 'OWNER'\n  AND district.A11 > 8000\n  AND district.A11 <= 9000;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.`A15`) AS avg_crimes_1995\nFROM district d\nWHERE d.`A8` > 4000\n  AND EXISTS (\n    SELECT 1\n    FROM account a\n    WHERE a.`district_id` = d.`district_id`\n      AND YEAR(a.`date`) >= 1997\n  );\t----- bird -----\tfinancial",
    "492": "SELECT trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account\nFROM trans\nJOIN disp ON trans.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nWHERE client.client_id = 3356\n  AND trans.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": "SELECT \n    ROUND(\n        100.0 * COUNT(DISTINCT CASE WHEN c.gender = 'F' THEN c.client_id END)\n        / COUNT(DISTINCT c.client_id),\n    2) AS woman_percentage\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dist ON a.district_id = dist.district_id\nWHERE dist.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT\n  IFNULL(\n    (SUM(CASE WHEN YEAR(loan.date) = 1997 THEN loan.amount END) -\n     SUM(CASE WHEN YEAR(loan.date) = 1996 THEN loan.amount END))\n    / NULLIF(SUM(CASE WHEN YEAR(loan.date) = 1996 THEN loan.amount END), 0)\n    * 100,\n    NULL\n  ) AS growth_rate\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN client ON account.district_id = client.district_id\nWHERE client.gender = 'M'\n  AND YEAR(loan.date) IN (1996, 1997);\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(*) AS statements_requested\nFROM account\nWHERE account_id = 3\n  AND frequency LIKE '%statement%';\n\nSELECT SUM(amount) AS total_debited, k_symbol\nFROM trans\nWHERE operation = 'debit'\n  AND k_symbol = '3539';\t----- bird -----\tfinancial",
    "496": "SELECT\n    IFNULL(ROUND(100.0 * male_cnt / total_cnt, 2), 0) AS percentage\nFROM (\n    SELECT\n        COUNT(DISTINCT CASE WHEN c.gender = 'M' THEN c.client_id END) AS male_cnt,\n        COUNT(DISTINCT c.client_id) AS total_cnt\n    FROM client c\n    JOIN disp d ON d.client_id = c.client_id\n    JOIN account a ON a.account_id = d.account_id\n    WHERE a.frequency = 'POPLATEK TYDNE'\n) t;\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id\nFROM client c\nJOIN account a ON a.client_id = c.client_id\nJOIN district d ON d.district_id = c.district_id\nWHERE c.gender = 'F'\n  AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\n  AND d.A11 = (\n      SELECT MIN(d2.A11)\n      FROM district d2\n      JOIN client c2 ON c2.district_id = d2.district_id\n      WHERE c2.gender = 'F'\n        AND c2.birth_date = (\n            SELECT MIN(birth_date) FROM client WHERE gender = 'F'\n        )\n  );\t----- bird -----\tfinancial",
    "498": "SELECT AVG(loan.amount) AS avg_amount\nFROM loan\nWHERE status = 'C'\n  AND EXISTS (\n    SELECT 1\n    FROM trans\n    WHERE trans.account_id = loan.account_id\n      AND trans.operation = 'POPLATEK PO OBRATU'\n  );\t----- bird -----\tfinancial",
    "499": "SELECT DISTINCT c.client_id,\n       TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE d.type = 'OWNER'\n  AND ca.type = 'gold';\t----- bird -----\tfinancial"
}