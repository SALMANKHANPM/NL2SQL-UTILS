{
    "0": "SELECT \n  COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio\nFROM customers\nWHERE Currency IN ('EUR', 'CZK');\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, MIN(Consumption) AS MinConsumption\nFROM yearmonth\nWHERE LEFT(Date, 4) = '2012' AND CustomerID IN (\n    SELECT CustomerID\n    FROM customers\n    WHERE Segment = 'LAM'\n)\nGROUP BY CustomerID\nORDER BY MinConsumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(t1.Consumption) / 12 AS average_monthly_consumption\nFROM yearmonth t1\nJOIN customers t2 ON t1.CustomerID = t2.CustomerID\nWHERE t2.Segment = 'SME'\n  AND SUBSTRING(t1.Date, 1, 4) = '2013'\n  AND t1.Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    (SELECT COALESCE(SUM(y.Consumption), 0) \n     FROM yearmonth y\n     JOIN customers c ON y.CustomerID = c.CustomerID\n     WHERE SUBSTRING(y.Date, 1, 4) = '2012' AND c.Currency = 'CZK') -\n    (SELECT COALESCE(SUM(y.Consumption), 0) \n     FROM yearmonth y\n     JOIN customers c ON y.CustomerID = c.CustomerID\n     WHERE SUBSTRING(y.Date, 1, 4) = '2012' AND c.Currency = 'EUR') AS DifferenceInConsumption\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTR(y.Date, 1, 4) AS Year\nFROM yearmonth y\nJOIN transactions_1k t ON y.CustomerID = t.CustomerID\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.Currency = 'CZK'\nGROUP BY Year\nORDER BY SUM(y.Consumption) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT MAX(t.Consumption) AS PeakConsumption, SUBSTR(t.Date, 1, 6) AS PeakMonth\nFROM yearmonth t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE SUBSTR(t.Date, 1, 4) = '2013'\n  AND c.Segment = 'SME'\nGROUP BY SUBSTR(t.Date, 1, 6)\nORDER BY PeakConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n  (SELECT AVG(total_consumption) AS avg_consumption \n   FROM (\n     SELECT CustomerID, SUM(Consumption) AS total_consumption \n     FROM yearmonth \n     WHERE SUBSTR(Date, 1, 4) = '2013' \n     GROUP BY CustomerID \n     HAVING total_consumption = (\n       SELECT MIN(total_consumption) \n       FROM (\n         SELECT CustomerID, SUM(Consumption) AS total_consumption \n         FROM yearmonth \n         WHERE SUBSTR(Date, 1, 4) = '2013' \n         GROUP BY CustomerID\n       ) AS min_consumption_per_customer\n     )\n     AND CustomerID IN (\n       SELECT CustomerID \n       FROM customers \n       WHERE Segment = 'SME' AND Currency = 'CZK'\n     )\n   ) AS lowest_consumption_sme\n  ) - \n  (SELECT AVG(total_consumption) AS avg_consumption \n   FROM (\n     SELECT CustomerID, SUM(Consumption) AS total_consumption \n     FROM yearmonth \n     WHERE SUBSTR(Date, 1, 4) = '2013' \n     GROUP BY CustomerID \n     HAVING total_consumption = (\n       SELECT MIN(total_consumption) \n       FROM (\n         SELECT CustomerID, SUM(Consumption) AS total_consumption \n         FROM yearmonth \n         WHERE SUBSTR(Date, 1, 4) = '2013' \n         GROUP BY CustomerID\n       ) AS min_consumption_per_customer\n     )\n     AND CustomerID IN (\n       SELECT CustomerID \n       FROM customers \n       WHERE Segment = 'LAM' AND Currency = 'CZK'\n     )\n   ) AS lowest_consumption_lam\n  ) AS diff_sme_lam,\n  (SELECT AVG(total_consumption) AS avg_consumption \n   FROM (\n     SELECT CustomerID, SUM(Consumption) AS total_consumption \n     FROM yearmonth \n     WHERE SUBSTR(Date, 1, 4) = '2013' \n     GROUP BY CustomerID \n     HAVING total_consumption = (\n       SELECT MIN(total_consumption) \n       FROM (\n         SELECT CustomerID, SUM(Consumption) AS total_consumption \n         FROM yearmonth \n         WHERE SUBSTR(Date, 1, 4) = '2013' \n         GROUP BY CustomerID\n       ) AS min_consumption_per_customer\n     )\n     AND CustomerID IN (\n       SELECT CustomerID \n       FROM customers \n       WHERE Segment = 'LAM' AND Currency = 'CZK'\n     )\n   ) AS lowest_consumption_lam\n  ) - \n  (SELECT AVG(total_consumption) AS avg_consumption \n   FROM (\n     SELECT CustomerID, SUM(Consumption) AS total_consumption \n     FROM yearmonth \n     WHERE SUBSTR(Date, 1, 4) = '2013' \n     GROUP BY CustomerID \n     HAVING total_consumption = (\n       SELECT MIN(total_consumption) \n       FROM (\n         SELECT CustomerID, SUM(Consumption) AS total_consumption \n         FROM yearmonth \n         WHERE SUBSTR(Date, 1, 4) = '2013' \n         GROUP BY CustomerID\n       ) AS min_consumption_per_customer\n     )\n     AND CustomerID IN (\n       SELECT CustomerID \n       FROM customers \n       WHERE Segment = 'KAM' AND Currency = 'CZK'\n     )\n   ) AS lowest_consumption_kam\n  ) AS diff_lam_kam,\n  (SELECT AVG(total_consumption) AS avg_consumption \n   FROM (\n     SELECT CustomerID, SUM(Consumption) AS total_consumption \n     FROM yearmonth \n     WHERE SUBSTR(Date, 1, 4) = '2013' \n     GROUP BY CustomerID \n     HAVING total_consumption = (\n       SELECT MIN(total_consumption) \n       FROM (\n         SELECT CustomerID, SUM(Consumption) AS total_consumption \n         FROM yearmonth \n         WHERE SUBSTR(Date, 1, 4) = '2013' \n         GROUP BY CustomerID\n       ) AS min_consumption_per_customer\n     )\n     AND CustomerID IN (\n       SELECT CustomerID \n       FROM customers \n       WHERE Segment = 'KAM' AND Currency = 'CZK'\n     )\n   ) AS lowest_consumption_kam\n  ) - \n  (SELECT AVG(total_consumption) AS avg_consumption \n   FROM (\n     SELECT CustomerID, SUM(Consumption) AS total_consumption \n     FROM yearmonth \n     WHERE SUBSTR(Date, 1, 4) = '2013' \n     GROUP BY CustomerID \n     HAVING total_consumption = (\n       SELECT MIN(total_consumption) \n       FROM (\n         SELECT CustomerID, SUM(Consumption) AS total_consumption \n         FROM yearmonth \n         WHERE SUBSTR(Date, 1, 4) = '2013' \n         GROUP BY CustomerID\n       ) AS min_consumption_per_customer\n     )\n     AND CustomerID IN (\n       SELECT CustomerID \n       FROM customers \n       WHERE Segment = 'SME' AND Currency = 'CZK'\n     )\n   ) AS lowest_consumption_sme\n  ) AS diff_kam_sme;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \n    segment,\n    MAX(CASE WHEN year = '2013' THEN percentage_increase END) AS max_percentage_increase,\n    MIN(CASE WHEN year = '2013' THEN percentage_increase END) AS min_percentage_increase\nFROM (\n    SELECT \n        c.Segment AS segment,\n        SUBSTR(y.Date, 1, 4) AS year,\n        (SUM(y.Consumption) - LAG(SUM(y.Consumption), 1) OVER (PARTITION BY c.Segment ORDER BY SUBSTR(y.Date, 1, 4))) / SUM(y.Consumption) * 100 AS percentage_increase\n    FROM yearmonth y\n    INNER JOIN customers c ON y.CustomerID = c.CustomerID\n    WHERE c.Currency = 'EUR' AND SUBSTR(y.Date, 1, 4) IN ('2012', '2013')\n    GROUP BY c.Segment, SUBSTR(y.Date, 1, 4)\n) AS subquery\nWHERE year = '2013'\nGROUP BY segment\nORDER BY max_percentage_increase DESC, min_percentage_increase ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\n  AND SUBSTRING(Date, 1, 4) = '2013'\n  AND SUBSTRING(Date, 5, 2) BETWEEN '08' AND '11';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS difference\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') - \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') AS difference\nFROM \n    dual;\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (SUM(CASE WHEN y.Consumption > 46.73 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT \n    (COUNT(CASE WHEN Consumption > 528.3 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    yearmonth\nWHERE \n    SUBSTR(Date, 1, 6) = '201202';\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) AS highest_monthly_consumption\nFROM yearmonth\nWHERE SUBSTRING(Date, 1, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nJOIN yearmonth y ON t.CustomerID = y.CustomerID AND SUBSTRING(y.Date, 1, 6) = '201309'\nWHERE SUBSTRING(t.Date, 1, 7) = '2013-09';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT gs.Country\nFROM gasstations gs\nJOIN transactions_1k t ON gs.GasStationID = t.GasStationID\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE SUBSTRING(ym.Date, 1, 6) = '201306';\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(*) \nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Currency = 'EUR' AND y.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT MIN(`Time`) AS earliest_time, MAX(`Time`) AS latest_time\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE' \n  AND t.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) \nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-26'\n  AND t.Time BETWEEN '08:00:00' AND '09:00:00'\n  AND g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT c.Country\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Amount * t.Price = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT \n    (COUNT(CASE WHEN c.Currency = 'EUR' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_eur_customers\nFROM \n    customers c\nJOIN \n    transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE \n    t.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (t1.Consumption - t2.Consumption) / t1.Consumption AS ConsumptionDecreaseRate\nFROM yearmonth t1\nJOIN yearmonth t2 ON t1.CustomerID = t2.CustomerID\nJOIN transactions_1k t ON t1.CustomerID = t.CustomerID\nWHERE t1.Date = '2012-08-25'\n  AND t.Price * t.Amount = 634.8\n  AND t1.Date LIKE '2012%'\n  AND t2.Date LIKE '2013%'\n  AND t1.Date = '2012-08-25'\n  AND t2.Date = '2013-08-25'\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    (SUM(CASE WHEN gs.Segment = 'premium' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_premium\nFROM gasstations gs\nWHERE gs.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT \n    SUM(t.Amount * t.Price) AS TotalAmountSpent,\n    COALESCE(SUM(CASE WHEN y.Date = '201201' THEN t.Amount * t.Price ELSE 0 END), 0) AS AmountSpentInJanuary2012\nFROM \n    transactions_1k t\nJOIN \n    yearmonth y ON t.CustomerID = y.CustomerID\nWHERE \n    t.CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT \n    c.CustomerID,\n    AVG(t.Price) AS avg_price_per_item,\n    c.Currency\nFROM \n    customers c\nJOIN \n    transactions_1k t ON c.CustomerID = t.CustomerID\nGROUP BY \n    c.CustomerID, c.Currency\nORDER BY \n    SUM(t.Price) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT y.Consumption\nFROM yearmonth y\nJOIN transactions_1k t ON y.CustomerID = t.CustomerID\nWHERE t.ProductID = 5\n  AND t.Price / t.Amount > 29.00\n  AND y.Date = '201208';\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.first_name = 'Angela' AND mem.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer'\n  AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(e.event_id)\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type = 'Meeting'\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 10\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type != 'fundraiser'\nGROUP BY e.event_id, e.event_name\nHAVING COUNT(a.link_to_member) > 20;\t----- bird -----\tstudent_club",
    "34": "SELECT i.amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT e.approved\nFROM expense e\nJOIN event evt ON e.link_to_budget = evt.event_id\nWHERE evt.event_name = 'October Meeting' AND evt.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) AS average_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah' \n  AND m.last_name = 'Allen'\n  AND (MONTH(e.expense_date) = 9 OR MONTH(e.expense_date) = 10);\t----- bird -----\tstudent_club",
    "38": "SELECT \n    (SELECT COALESCE(SUM(b.spent), 0) \n     FROM budget b \n     JOIN event e ON b.link_to_event = e.event_id \n     WHERE SUBSTRING(e.event_date, 1, 4) = '2019') \n    - \n    (SELECT COALESCE(SUM(b.spent), 0) \n     FROM budget b \n     JOIN event e ON b.link_to_event = e.event_id \n     WHERE SUBSTRING(e.event_date, 1, 4) = '2020') AS difference_spent_2019_2020;\t----- bird -----\tstudent_club",
    "39": "SELECT notes\nFROM income\nWHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT e.status\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense ex ON b.budget_id = ex.link_to_budget\nWHERE ex.expense_description = 'Post Cards, Posters'\n  AND ex.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "42": "SELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.first_name = 'Brent' AND mem.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Business' \n  AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT m.department\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT \n    SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) / \n    SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END) AS ratio\nFROM \n    budget b\nJOIN \n    event e ON b.link_to_event = e.event_id\nWHERE \n    b.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost\nFROM expense\nWHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) \nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nORDER BY (b.spent / b.amount) DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spent\nFROM budget;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) \nFROM budget \nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id, m.first_name, m.last_name\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_member\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name\nFROM event e\nJOIN expense ex ON e.event_id = ex.link_to_event\nORDER BY ex.cost ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": "SELECT \n    (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END) / SUM(ex.cost)) * 100 AS percentage\nFROM \n    expense ex\nJOIN \n    event e ON ex.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "59": "SELECT source\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nORDER BY amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member m\nJOIN major maj ON m.link_to_major = maj.major_id\nWHERE maj.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'Advertisement'\nORDER BY b.spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT EXISTS (\n    SELECT 1\n    FROM member m\n    JOIN attendance a ON m.member_id = a.link_to_member\n    JOIN event e ON a.link_to_event = e.event_id\n    WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer'\n) AS attended;\t----- bird -----\tstudent_club",
    "63": "SELECT e.cost\nFROM expense e\nJOIN event ev ON e.link_to_budget = ev.event_id\nWHERE e.expense_description = 'Posters'\n  AND ev.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed' AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT e.expense_description, SUM(e.cost) AS total_value\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting'\n  AND e.approved = 'Yes'\nGROUP BY e.expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT b.category, SUM(b.amount) AS amount_budgeted\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'April Speaker'\nGROUP BY b.category\nORDER BY amount_budgeted ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member_id, m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT DISTINCT e.expense_description\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT e.type\nFROM event e\nWHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, ma.department, ma.college\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT DISTINCT b.category\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.location = 'MU 215'\n  AND e.type = 'Guest Speaker'\n  AND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT \n    (COUNT(CASE WHEN i.amount = 50 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    member m\nJOIN \n    income i ON m.member_id = i.link_to_member\nWHERE \n    m.t_shirt_size = 'Medium' \n    AND m.position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game'\n  AND status = 'Closed'\n  AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name, m.last_name, m.phone\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": "SELECT m.first_name, m.last_name, e.cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": "SELECT m.first_name, m.last_name, i.amount\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE i.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "78": "SELECT \n    (COUNT(CASE WHEN p.SEX = 'M' AND p.Admission = '+' THEN 1 END) * 100.0 / \n     COUNT(CASE WHEN p.SEX = 'M' THEN 1 END)) AS inpatient_percentage,\n    (COUNT(CASE WHEN p.SEX = 'M' AND p.Admission = '-' THEN 1 END) * 100.0 / \n     COUNT(CASE WHEN p.SEX = 'M' THEN 1 END)) AS outpatient_percentage,\n    ABS((COUNT(CASE WHEN p.SEX = 'M' AND p.Admission = '+' THEN 1 END) * 100.0 / \n         COUNT(CASE WHEN p.SEX = 'M' THEN 1 END)) - \n        (COUNT(CASE WHEN p.SEX = 'M' AND p.Admission = '-' THEN 1 END) * 100.0 / \n         COUNT(CASE WHEN p.SEX = 'M' THEN 1 END))) AS deviation_percentage\nFROM Patient p\nWHERE p.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT \n    (COUNT(CASE WHEN YEAR(Birthday) > 1930 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM Patient\nWHERE SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT \n    (COUNT(CASE WHEN p.Admission = '+' THEN 1 END) * 1.0 / COUNT(CASE WHEN p.Admission = '-' THEN 1 END)) AS ratio\nFROM Patient p\nWHERE p.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT p.Diagnosis, l.Date\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT p.ID, p.SEX, p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT p.ID, YEAR(CURDATE()) - YEAR(p.Birthday) AS age\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT p.ID, p.SEX, p.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \n  AND YEAR(Description) = 1997 \n  AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.`Thrombosis` = 1 \n  AND p.SEX = 'F'\n  AND YEAR(e.`Examination Date`) = 1997\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT e.Symptoms, e.Diagnosis\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.Symptoms IS NOT NULL\nORDER BY p.Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT l.`Date`, (YEAR(p.`First Date`) - YEAR(p.`Birthday`)) AS age_at_admission\nFROM Patient p\nJOIN Examination e ON p.`ID` = e.`ID`\nJOIN Laboratory l ON p.`ID` = l.`ID`\nWHERE e.`Diagnosis` = 'SJS'\nORDER BY p.`Birthday` ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n  SUM(CASE WHEN p.SEX = 'M' AND l.UA <= 8.0 THEN 1 ELSE 0 END) AS male_abnormal_uac,\n  SUM(CASE WHEN p.SEX = 'F' AND l.UA <= 6.5 THEN 1 ELSE 0 END) AS female_abnormal_uac,\n  (SUM(CASE WHEN p.SEX = 'M' AND l.UA <= 8.0 THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN p.SEX = 'F' AND l.UA <= 6.5 THEN 1 ELSE 0 END), 0)) AS ratio\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX IN ('M', 'F') AND l.UA IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE YEAR(p.Birthday) < 18 \n  AND YEAR(e.`Examination Date`) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT TIMESTAMPDIFF(YEAR, p.Birthday, e.`Examination Date`) AS Age, e.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.HGB = (SELECT MAX(HGB) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT e.`aCL IgM`\nFROM Patient p\nJOIN Examination e ON p.`ID` = e.`ID`\nWHERE p.`Diagnosis` = 'SLE'\n  AND p.`Description` = '1994-02-19'\n  AND e.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n    (SUM(CASE WHEN p.Birthday = '1959-02-18' AND l.Date LIKE '1981-11-%' THEN l.`T-CHO` ELSE 0 END) - \n     SUM(CASE WHEN p.Birthday = '1959-02-18' AND l.Date LIKE '1981-12-%' THEN l.`T-CHO` ELSE 0 END)) / \n    NULLIF(SUM(CASE WHEN p.Birthday = '1959-02-18' AND l.Date LIKE '1981-12-%' THEN l.`T-CHO` ELSE 0 END), 0) AS decrease_rate\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Birthday = '1959-02-18' \n  AND l.Date LIKE '1981-11-%' \n  OR l.Date LIKE '1981-12-%';\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE e.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31'\n  AND l.GPT > 30\n  AND l.ALB < 4\nORDER BY p.ID;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 2 \n  AND e.ANA = 'S' \n  AND e.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE ANA = 'S')\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT DISTINCT p.*\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '-'\n  AND l.Date LIKE '1991-10%'\n  AND l.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(l.ALB)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'F'\n  AND l.PLT > 400\n  AND p.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT \n    (SUM(CASE WHEN p.SEX = 'F' THEN 1 ELSE 0 END) / COUNT(p.SEX)) * 100 AS Percentage\nFROM \n    Patient p\nWHERE \n    YEAR(p.Birthday) = 1980 \n    AND p.Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE \n         WHEN l.UA > 8.0 AND p.SEX = 'M' THEN 'Normal'\n         WHEN l.UA > 6.5 AND p.SEX = 'F' THEN 'Normal'\n         ELSE 'Abnormal'\n       END AS UA_Range_Status\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE l.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT p.ID, p.SEX, p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT p.SEX, COUNT(*) AS PatientCount\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.`T-BIL` >= 2.0\nGROUP BY p.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(DATEDIFF(YEAR(NOW()), YEAR(p.Birthday))) AS average_age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.TG >= 200\n  AND (YEAR(CURDATE()) - YEAR(p.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE YEAR(p.Birthday) BETWEEN 1936 AND 1956\n  AND p.SEX = 'M'\n  AND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT p.ID, p.SEX, (YEAR(CURDATE()) - YEAR(p.Birthday)) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GLU >= 180 AND l.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.`ID`, TIMESTAMPDIFF(YEAR, p.`Birthday`, CURRENT_TIMESTAMP) AS age, p.`Diagnosis`\nFROM Patient p\nJOIN Laboratory l ON p.`ID` = l.`ID`\nWHERE l.`RBC` < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT p.ID, p.SEX\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Diagnosis = 'SLE'\n  AND l.HGB > 10\n  AND l.HGB < 17\nORDER BY p.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT p.ID, YEAR(CURDATE()) - YEAR(p.Birthday) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.HCT >= 52\nGROUP BY p.ID, age\nHAVING COUNT(l.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n  SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS LowerThanNormal,\n  SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS HigherThanNormal,\n  SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS Difference\nFROM Laboratory\nWHERE PLT <= 100 OR PLT >= 400;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT DISTINCT p.* \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE YEAR(l.Date) = 1984 \n  AND (YEAR(CURDATE()) - YEAR(p.Birthday)) < 50 \n  AND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT \n    (SUM(CASE WHEN p.SEX = 'F' AND l.PT >= 14 THEN 1 ELSE 0 END) * 100.0 / \n     SUM(CASE WHEN l.PT >= 14 THEN 1 ELSE 0 END)) AS percentage\nFROM \n    Patient p\n    INNER JOIN Laboratory l ON p.ID = l.ID\nWHERE \n    YEAR(CURDATE()) - YEAR(p.Birthday) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.WBC > 3.5\n  AND l.WBC < 9.0\n  AND (l.FG <= 150 OR l.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT e.ID) \nFROM Examination e \nJOIN Laboratory l ON e.ID = l.ID \nWHERE l.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.IGG > 900 AND l.IGG < 2000 AND l.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.IGA > 80 AND l.IGA < 500 \nAND YEAR(p.`First Date`) >= 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(*) AS count\nFROM Examination\nWHERE (IGM < 40 OR IGM > 400)\nGROUP BY Diagnosis\nORDER BY count DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) \nFROM Patient \nWHERE CRP = '+' AND Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRE >= 1.5 \n  AND (YEAR(CURDATE()) - YEAR(p.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.RNP IN ('-', '+-') \n  AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.SM IN ('-', '+-') \n  AND p.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'F'\n  AND l.SC170 IN ('negative', '0')\n  AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT p.ID) AS count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.CENTROMEA IN ('-', '+-')\n  AND l.SSB IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(p.Birthday) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.CPK < 250\n  AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016'\nGROUP BY l.id, l.name\nORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT t.team_long_name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nJOIN Team t ON m.away_team_api_id = t.team_api_id\nWHERE l.name = 'Scotland Premier League'\n  AND m.season = '2009/2010'\n  AND m.away_team_goal > m.home_team_goal\nGROUP BY t.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT t.team_long_name, ta.buildUpPlaySpeed\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nORDER BY ta.buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016' AND m.home_team_goal = m.away_team_goal\nGROUP BY l.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT p.player_name, TIMESTAMPDIFF(YEAR, p.birthday, CURDATE()) AS age\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.sprint_speed >= 97\n  AND YEAR(pa.date) >= 2013\n  AND YEAR(pa.date) <= 2015;\t----- bird -----\teuropean_football_2",
    "133": "SELECT l.name, COUNT(m.id) AS match_count\nFROM Match m\nJOIN League l ON m.league_id = l.id\nGROUP BY l.id, l.name\nORDER BY match_count DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id \nFROM Team_Attributes \nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT t.team_long_name\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE YEAR(ta.date) = 2012\n  AND ta.buildUpPlayPassing > (\n    SELECT AVG(buildUpPlayPassing)\n    FROM Team_Attributes\n    WHERE YEAR(date) = 2012\n      AND buildUpPlayPassing IS NOT NULL\n  );\t----- bird -----\teuropean_football_2",
    "136": "SELECT \n    (SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) * 100.0 / COUNT(player_fifa_api_id)) AS percentage_left_foot\nFROM \n    Player_Attributes\nWHERE \n    YEAR(birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(pa.long_shots) AS average_long_shots\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.height > 180\nGROUP BY p.player_name, p.player_fifa_api_id\nORDER BY AVG(pa.heading_accuracy) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2009/2010'\nGROUP BY l.id, l.name\nHAVING AVG(m.home_team_goal) > AVG(m.away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": "SELECT `player_name` \nFROM `Player` \nWHERE SUBSTR(`birthday`, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Gabriel Tamas'\n  AND strftime('%Y', pa.date) = '2011';\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(m.home_team_goal) \nFROM Match m\nJOIN League l ON m.league_id = l.id\nJOIN Team t ON m.home_team_api_id = t.team_api_id\nWHERE l.country_id = (SELECT id FROM Country WHERE name = 'Poland') \nAND m.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height = (SELECT MAX(height) FROM Player) OR p.height = (SELECT MIN(height) FROM Player)\nORDER BY (SELECT AVG(pa.finishing) FROM Player_Attributes pa2 WHERE pa2.player_api_id = p.player_api_id) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT SUM(t2.overall_rating) / COUNT(t2.id) AS average_overall_rating\nFROM Player t1\nJOIN Player_Attributes t2 ON t1.player_api_id = t2.player_api_id\nWHERE t1.height > 170\n  AND strftime('%Y', t2.date) >= '2010'\n  AND strftime('%Y', t2.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    (SELECT AVG(pa.ball_control) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Abdou Diallo') -\n    (SELECT AVG(pa.ball_control) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Aaron Appindangoye') AS ball_control_difference\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player p \nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id \nWHERE pa.preferred_foot = 'left' \nAND pa.attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT pa.player_api_id)\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE strftime('%Y', p.birthday) < '1986'\n  AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) \nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Belgium Jupiler League'\n  AND SUBSTR(m.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2008/2009'\nGROUP BY l.name\nORDER BY COUNT(m.id) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT \n    ((p1.overall_rating - p2.overall_rating) / p2.overall_rating) * 100 AS percentage_difference\nFROM \n    Player p1\nJOIN \n    Player_Attributes pa1 ON p1.player_api_id = pa1.player_api_id\nJOIN \n    Player p2 ON p2.player_name = 'Paulin Puel'\nJOIN \n    Player_Attributes pa2 ON p2.player_api_id = pa2.player_api_id\nWHERE \n    p1.player_name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating)\nFROM Player_Attributes T1\nJOIN Player T2 ON T1.player_api_id = T2.player_api_id\nWHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(ta.chanceCreationPassing) AS highest_chance_creation_passing, ta.chanceCreationPassingClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "156": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.overall_rating = 77\n  AND pa.date LIKE '2016-06-23%'\nORDER BY p.birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Aaron Mooy'\n  AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": "SELECT pa.attacking_work_rate\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Francesco Migliore'\n  AND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT pa.date\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Kevin Constant'\nORDER BY pa.crossing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "160": "SELECT ta.buildUpPlayPassingClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'FC Lorient'\n  AND ta.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT ta.defence_aggression_class\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Hannover 96'\n  AND ta.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE p.player_name = 'Marko Arnautovic' \n  AND SUBSTRING(pa.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT (p1.overall_rating - p2.overall_rating) * 100.0 / p1.overall_rating AS percentage\nFROM Player_Attributes pa1\nJOIN Player p1 ON pa1.player_api_id = p1.player_api_id\nJOIN Player_Attributes pa2\nJOIN Player p2 ON pa2.player_api_id = p2.player_api_id\nWHERE p1.player_name = 'Landon Donovan'\n  AND p2.player_name = 'Jordan Bowery'\n  AND pa1.date = '2013/7/12'\n  AND pa2.date = '2013/7/12';\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name\nFROM Player\nORDER BY height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "165": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nORDER BY pa.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT t.team_short_name\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \n  AND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_api_id = 6) - (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23) AS jumping_difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.preferred_foot = 'right'\nORDER BY pa.potential ASC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \n  AND crossing = (SELECT MAX(crossing) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "172": "SELECT m.home_team_goal, m.away_team_goal\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.date LIKE '2008-09-24%'\n  AND l.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "173": "SELECT ta.buildUpPlaySpeedClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing, pa.curve\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nORDER BY p.weight DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "175": "SELECT l.name, COUNT(m.id) AS game_count\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.season = '2015/2016'\nGROUP BY l.name\nORDER BY game_count DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT t.team_long_name\nFROM Match m\nJOIN Team t ON m.away_team_api_id = t.team_api_id\nORDER BY m.away_team_goal DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nORDER BY overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": "SELECT \n    (COUNT(CASE WHEN p.height < 180 AND pa.overall_rating > 70 THEN 1 END) * 100.0 / COUNT(p.id)) AS percentage\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE \n    p.height IS NOT NULL AND pa.overall_rating IS NOT NULL;\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 20\n  AND q.position = (\n    SELECT MIN(position)\n    FROM qualifying\n    WHERE raceId = 20\n  )\n  AND q.q1 IS NOT NULL\n  AND q.q2 IS NULL\n  AND q.q3 IS NULL;\t----- bird -----\tformula_1",
    "180": "SELECT d.surname\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 19\n  AND q.q2 = (\n    SELECT MIN(q2)\n    FROM qualifying\n    WHERE raceId = 19 AND q2 IS NOT NULL\n  );\t----- bird -----\tformula_1",
    "181": "SELECT r.name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT c.lat, c.lng\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT c.lat, c.lng\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE d.forename = 'Bruno' AND d.surname = 'Senna' AND q.raceId = 354;\t----- bird -----\tformula_1",
    "185": "SELECT d.number\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 903\n  AND q.q3 LIKE '1:54%';\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results r\nJOIN races ON r.raceId = races.raceId\nWHERE races.name = 'Bahrain Grand Prix' \n  AND races.year = 2007 \n  AND r.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 592 AND r.time IS NOT NULL\nORDER BY d.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT d.url\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE lt.lap = 161 AND lt.time LIKE '0:27%'\t----- bird -----\tformula_1",
    "189": "SELECT c.lat, c.lng\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT c.url\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE cr.raceId = 9\nORDER BY cr.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "191": "SELECT d.code\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 45 AND q.q3 LIKE '01:33%'\t----- bird -----\tformula_1",
    "192": "SELECT s.url\nFROM seasons s\nJOIN races r ON s.year = r.year\nWHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 872 AND r.time IS NOT NULL\nORDER BY d.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT \n    ((r1.fastestLapSpeed - r2.fastestLapSpeed) / r1.fastestLapSpeed) * 100 AS percentage_faster\nFROM \n    results r1\nJOIN \n    drivers d ON r1.driverId = d.driverId\nJOIN \n    races rac1 ON r1.raceId = rac1.raceId\nJOIN \n    results r2 ON r2.raceId = rac1.raceId + 1\nJOIN \n    drivers d2 ON r2.driverId = d2.driverId\nWHERE \n    d.forename = 'Paul' \n    AND d.surname = 'di Resta'\n    AND r1.raceId = 853\n    AND r2.raceId = 854\n    AND r1.fastestLapSpeed IS NOT NULL\n    AND r2.fastestLapSpeed IS NOT NULL;\t----- bird -----\tformula_1",
    "196": "SELECT \n    (COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END) * 100.0 / COUNT(*)) AS race_completion_rate\nFROM \n    races r\nJOIN \n    results res ON r.raceId = res.raceId\nWHERE \n    r.date = '1983-07-16';\t----- bird -----\tformula_1",
    "197": "SELECT name\nFROM races\nWHERE YEAR(date) = (SELECT MIN(YEAR(date)) FROM races)\n  AND MONTH(date) = (SELECT MIN(MONTH(date)) FROM races);\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, ds.points\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nORDER BY ds.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT d.forename, d.surname, r.name, MIN(l.milliseconds) AS best_lap_time\nFROM lapTimes l\nJOIN drivers d ON l.driverId = d.driverId\nJOIN races r ON l.raceId = r.raceId\nGROUP BY r.raceId, d.driverId\nORDER BY best_lap_time ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lt.milliseconds) AS average_lap_time\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE d.forename = 'Lewis'\n  AND d.surname = 'Hamilton'\n  AND r.name = 'Malaysian Grand Prix'\n  AND r.year = 2009;\t----- bird -----\tformula_1",
    "201": "SELECT \n    (COUNT(CASE WHEN r.position > 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    results r\nJOIN \n    drivers d ON r.driverId = d.driverId\nWHERE \n    d.surname = 'Hamilton' \n    AND r.raceId IN (SELECT raceId FROM races WHERE year >= 2010)\t----- bird -----\tformula_1",
    "202": "SELECT d.forename, d.surname, d.nationality, MAX(ds.points) AS max_points\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nWHERE ds.wins = (SELECT MAX(wins) FROM driverStandings)\nLIMIT 1;\t----- bird -----\tformula_1",
    "203": "SELECT YEAR(CURRENT_TIMESTAMP) - YEAR(dob) AS age, forename, surname\nFROM drivers\nWHERE nationality = 'Japanese'\nORDER BY dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT r.name, c.name AS circuit_name, c.location\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005;\t----- bird -----\tformula_1",
    "205": "SELECT r.name\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND res.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT r.name, s.year\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nJOIN seasons s ON r.year = s.year\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nORDER BY res.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT r.date, r.points\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY r.raceId\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT \n    (COUNT(CASE WHEN c.country = 'Germany' THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT country \nFROM drivers d\nJOIN races r ON d.driverId = r.driverId\nJOIN circuits c ON r.circuitId = c.circuitId\nORDER BY d.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "212": "SELECT d.driverRef\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nJOIN seasons s ON ra.year = s.year\nWHERE ra.name = 'Canadian Grand Prix'\n  AND ra.year = 2007\n  AND r.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT r.raceId\nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY res.rank ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(r.fastestLapSpeed) AS fastest_lap_speed\nFROM results r\nJOIN races ON r.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "215": "SELECT r.positionOrder\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ON r.raceId = races.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\n  AND races.name = 'Chinese Grand Prix'\n  AND races.year = 2008;\t----- bird -----\tformula_1",
    "216": "SELECT r.time\nFROM results r\nJOIN races ON r.raceId = races.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE races.name = 'Chinese Grand Prix'\n  AND races.year = 2008\n  AND r.position = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT r.driverId) \nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008 AND ra.name = 'Chinese Grand Prix' AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT \n    ((MAX(CASE WHEN ds.position = 1 THEN r.time END) - MIN(CASE WHEN ds.position = (SELECT MAX(position) FROM driverStandings ds2 WHERE ds2.raceId = r.raceId) THEN r.time END)) / MIN(CASE WHEN ds.position = (SELECT MAX(position) FROM driverStandings ds2 WHERE ds2.raceId = r.raceId) THEN r.time END)) * 100 AS percentage_faster\nFROM \n    results r\n    JOIN races ON r.raceId = races.raceId\n    JOIN drivers ON r.driverId = drivers.driverId\n    JOIN driverStandings ds ON r.raceId = ds.raceId AND r.driverId = ds.driverId\nWHERE \n    races.year = 2008 \n    AND races.name = 'Australian Grand Prix'\n    AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) AS circuit_count\nFROM circuits\nWHERE country = 'Australia' AND location = 'Adelaide';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cs.points) AS max_points\nFROM constructorStandings cs\nJOIN constructors c ON cs.constructorId = c.constructorId\nWHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT c.name\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE cr.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT c.constructorId) AS count_japanese_constructors\nFROM constructors c\nJOIN constructorStandings cs ON c.constructorId = cs.constructorId\nWHERE c.nationality = 'Japanese'\n  AND cs.points = 0\n  AND (\n    SELECT COUNT(DISTINCT raceId)\n    FROM constructorStandings cs2\n    WHERE cs2.constructorId = c.constructorId\n  ) = 2;\t----- bird -----\tformula_1",
    "223": "SELECT \n    (COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END) * 100.0 / COUNT(*)) AS race_completion_percentage\nFROM \n    results r\n    JOIN drivers d ON r.driverId = d.driverId\n    JOIN races ra ON r.raceId = ra.raceId\nWHERE \n    d.nationality = 'Japanese'\n    AND ra.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "224": "SELECT s.year, AVG(TIMESTAMPDIFF(SECOND, '00:00:00', r.time)) AS average_time_seconds\nFROM seasons s\nJOIN races r ON s.year = r.year\nJOIN results res ON r.raceId = res.raceId\nJOIN driverStandings ds ON res.driverId = ds.driverId AND r.raceId = ds.raceId\nWHERE s.year < 1975\n  AND res.time IS NOT NULL\n  AND ds.position = 1\n  AND res.time REGEXP '^[0-9]{2}:[0-9]{2}:[0-9]{2}\\\\.[0-9]{3}$'\nGROUP BY s.year\nORDER BY s.year;\t----- bird -----\tformula_1",
    "225": "SELECT r.fastestLap\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN driverStandings ds ON r.raceId = ds.raceId AND r.driverId = ds.driverId\nWHERE ra.year = 2009 AND ds.position = 1 AND r.fastestLap IS NOT NULL\nLIMIT 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(r.fastestLapSpeed) AS average_fastest_lap_speed\nFROM races AS s\nJOIN results AS r ON s.raceId = r.raceId\nWHERE s.name = 'Spanish Grand Prix' AND s.year = 2009;\t----- bird -----\tformula_1",
    "227": "SELECT \n    (COUNT(CASE WHEN YEAR(d.dob) < 1985 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    results r\n    JOIN drivers d ON r.driverId = d.driverId\n    JOIN races ra ON r.raceId = ra.raceId\nWHERE \n    YEAR(ra.date) BETWEEN 2000 AND 2005\n    AND r.laps > 50;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*) \nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN lapTimes lt ON r.raceId = lt.raceId AND r.driverId = lt.driverId\nWHERE d.nationality = 'French'\nAND lt.time < '120'\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT driverId, number, dob, nationality\nFROM drivers\nORDER BY dob DESC\nLIMIT 3;\t----- bird -----\tformula_1",
    "231": "SELECT driverRef\nFROM drivers\nWHERE nationality = 'German'\nORDER BY dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE YEAR(d.dob) = 1971\n  AND r.fastestLapTime IS NOT NULL\n  AND r.fastestLapTime != ''\n  AND r.fastestLap = (\n    SELECT MIN(fastestLap)\n    FROM results\n    WHERE fastestLapTime IS NOT NULL\n      AND fastestLapTime != ''\n  );\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results r\nJOIN status s ON r.statusId = s.statusId\nWHERE r.raceId > 50 AND r.raceId < 100 \n  AND r.time IS NOT NULL \n  AND s.status = 'Disqualified';\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(*) AS times_held, location, lat, lng \nFROM circuits \nWHERE country = 'Austria';\t----- bird -----\tformula_1",
    "235": "SELECT \n    s.year,\n    d.forename,\n    d.surname,\n    r.date,\n    r.time\nFROM \n    drivers d\nJOIN \n    qualifying q ON d.driverId = q.driverId\nJOIN \n    races r ON q.raceId = r.raceId\nJOIN \n    seasons s ON r.year = s.year\nWHERE \n    d.dob = (SELECT MIN(dob) FROM drivers)\nORDER BY \n    r.date\nLIMIT 1;\t----- bird -----\tformula_1",
    "236": "SELECT d.forename, d.surname, AVG(p.milliseconds) AS avg_pitstop_duration\nFROM drivers d\nJOIN pitStops p ON d.driverId = p.driverId\nWHERE d.nationality = 'German'\n  AND YEAR(d.dob) BETWEEN 1980 AND 1985\nGROUP BY d.driverId, d.forename, d.surname\nORDER BY avg_pitstop_duration ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT d.forename, d.surname, r.time\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.year = 2008 AND c.name = 'Canadian Grand Prix' AND res.position = 1;\t----- bird -----\tformula_1",
    "238": "SELECT c.constructorRef, c.url\nFROM constructors c\nJOIN results r ON c.constructorId = r.constructorId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2009 AND ra.name = 'Singapore Grand Prix'\n  AND r.position = 1\nLIMIT 1;\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT c.name, c.nationality, SUM(cr.points) AS total_points\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nJOIN races r ON cr.raceId = r.raceId\nJOIN circuits cu ON r.circuitId = cu.circuitId\nWHERE cu.name = 'Monaco Grand Prix'\n  AND r.year BETWEEN 1980 AND 2010\nGROUP BY c.constructorId, c.name, c.nationality\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT d.forename, d.surname\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.year = 2008\n  AND c.name = 'Marina Bay Street Circuit'\n  AND q.q3 = (\n    SELECT MIN(q3)\n    FROM qualifying q2\n    JOIN races r2 ON q2.raceId = r2.raceId\n    JOIN circuits c2 ON r2.circuitId = c2.circuitId\n    WHERE r2.year = 2008\n      AND c2.name = 'Marina Bay Street Circuit'\n  )\t----- bird -----\tformula_1",
    "242": "SELECT CONCAT(d.forename, ' ', d.surname) AS fullName, d.nationality, r.name AS raceName\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nORDER BY d.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) AS accident_count\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.name = 'Canadian Grand Prix'\n  AND r.statusId = 3\nGROUP BY r.driverId\nORDER BY accident_count DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "244": "SELECT d.forename, d.surname\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nORDER BY lt.time ASC\nLIMIT 20;\t----- bird -----\tformula_1",
    "245": "SELECT l.raceId, l.driverId, l.lap, l.time, l.milliseconds\nFROM lapTimes l\nJOIN races r ON l.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Italy'\nORDER BY l.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength' \n  AND s.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) \nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE c.colour = 'Blue' AND sp.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'Blue' AND c2.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT s.superhero_name, s.height_cm\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nORDER BY s.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour, COUNT(s.id) AS count\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY c.colour\nORDER BY count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE p.publisher_name = 'Marvel Comics'\n  AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE c.colour = 'Gold' \n  AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "254": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "255": "SELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE p.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) \nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE g.gender = 'Female'\n  AND a.attribute_name = 'Strength'\n  AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT \n    (SUM(CASE WHEN a.alignment = 'Bad' THEN 1 ELSE 0 END) * 100.0 / COUNT(s.id)) AS percentage,\n    SUM(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_bad_count\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\t----- bird -----\tsuperhero",
    "260": "SELECT \n    (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') - \n    (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') AS difference\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(s.weight_kg) \nFROM superhero s \nJOIN gender g ON s.gender_id = g.id \nWHERE g.gender = 'Female';\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE g.gender = 'Male';\t----- bird -----\tsuperhero",
    "265": "SELECT s.superhero_name\nFROM superhero s\nLEFT JOIN colour c ON s.eye_colour_id = c.id\nWHERE s.height_cm BETWEEN 170 AND 190\n  AND (c.colour IS NULL OR c.colour = 'No Colour');\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour\nFROM superhero s\nJOIN colour c ON s.hair_colour_id = c.id\nJOIN race r ON s.race_id = r.id\nWHERE s.height_cm = 185\n  AND r.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT \n    (SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    superhero s\nJOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    s.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT s.superhero_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Male'\n  AND s.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(*) \nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE p.publisher_name = 'Dark Horse Comics'\n  AND a.attribute_name = 'durability'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT c1.colour AS eye_colour, c2.colour AS hair_colour, c3.colour AS skin_colour\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nJOIN colour c3 ON s.skin_colour_id = c3.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE g.gender = 'Female'\n  AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nJOIN colour c3 ON s.skin_colour_id = c3.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE c1.colour = c2.colour AND c2.colour = c3.colour;\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (SUM(CASE WHEN c.colour = 'Blue' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN colour c ON s.skin_colour_id = c.id\nWHERE g.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(hp.power_id) AS power_count\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE s.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT s.height_cm\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'Black' AND c2.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT s.superhero_name\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Strength' \n  AND ha.attribute_value = (\n    SELECT MAX(ha2.attribute_value)\n    FROM hero_attribute ha2\n    JOIN attribute a2 ON ha2.attribute_id = a2.id\n    WHERE a2.attribute_name = 'Strength'\n  );\t----- bird -----\tsuperhero",
    "281": "SELECT \n    (SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference;\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height\nFROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'Blue' AND c2.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT (SUM(CASE WHEN c.colour = 'Blue' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id;\t----- bird -----\tsuperhero",
    "290": "SELECT \n  (SUM(CASE WHEN g.gender = 'Male' THEN 1 ELSE 0 END) * 1.0 / \n   SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END)) AS ratio\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id;\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT \n    (SELECT COUNT(*) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE c.id = 7 AND (s.weight_kg = 0 OR s.weight_kg IS NULL)) \n    - \n    (SELECT COUNT(*) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE c.id = 1 AND (s.weight_kg = 0 OR s.weight_kg IS NULL)) AS difference\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero s\nJOIN colour c ON s.skin_colour_id = c.id\nJOIN alignment a ON s.alignment_id = a.id\nWHERE c.colour = 'Green' \n  AND a.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE p.power_name = 'Wind Control'\nORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE p.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT \n  (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') - \n  (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') AS difference\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon' ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName \nFROM users \nWHERE YEAR(CreationDate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) AS post_count\nFROM posts\nWHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Age > 65 AND p.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body\nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nWHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT \n    (COUNT(CASE WHEN u.Age > 65 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    p.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.UserId = 3025\n  AND c.CreationDate = '2014-04-23 20:29:39';\t----- bird -----\tcodebase_community",
    "308": "SELECT \n    CASE \n        WHEN p.ClosedDate IS NULL THEN 'well-finished'\n        ELSE 'not well-finished'\n    END AS post_status\nFROM \n    comments c\nJOIN \n    posts p ON c.PostId = p.Id\nWHERE \n    c.UserId = 23853 \n    AND c.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) AS PostCount\nFROM posts\nWHERE OwnerDisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT u.DisplayName\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT COUNT(p.Id) / COUNT(v.Id) AS post_to_vote_ratio\nFROM posts p\nLEFT JOIN votes v ON p.OwnerUserId = v.UserId\nWHERE p.OwnerUserId = 24\nGROUP BY p.OwnerUserId;\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount\nFROM posts\nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT u.DisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName\nFROM users u\nJOIN votes v ON u.Id = v.UserId\nJOIN posts p ON v.PostId = p.Id\nWHERE v.BountyAmount = 50\nAND p.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT AVG(p.ViewCount) AS average_view_count, p.Title, c.Text AS comment\nFROM posts p\nJOIN postTags pt ON p.Id = pt.PostId\nJOIN tags t ON pt.TagId = t.Id\nLEFT JOIN comments c ON p.Id = c.PostId\nWHERE t.TagName = 'humor'\nGROUP BY p.Id, p.Title, c.Text;\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) \nFROM (\n    SELECT UserId\n    FROM badges\n    GROUP BY UserId\n    HAVING COUNT(Name) > 5\n) AS users_with_more_than_5_badges\t----- bird -----\tcodebase_community",
    "321": "SELECT DISTINCT ph.UserId\nFROM postHistory ph\nJOIN posts p ON ph.PostId = p.Id\nJOIN users u ON ph.UserId = u.Id\nWHERE u.Views >= 1000\nGROUP BY ph.UserId, ph.PostId\nHAVING COUNT(ph.Id) = 1;\t----- bird -----\tcodebase_community",
    "322": "SELECT \n    (COUNT(CASE WHEN YEAR(Date) = 2010 THEN 1 END) * 100.0 / COUNT(*)) - \n    (COUNT(CASE WHEN YEAR(Date) = 2011 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_difference\nFROM badges\nWHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "323": "SELECT \n    AVG(u.UpVotes) AS average_up_votes,\n    AVG(u.Age) AS average_age\nFROM \n    users u\nJOIN \n    posts p ON u.Id = p.OwnerUserId\nGROUP BY \n    u.Id\nHAVING \n    COUNT(p.Id) > 10;\t----- bird -----\tcodebase_community",
    "324": "SELECT \n  COUNT(CASE WHEN YEAR(CreationDate) = 2010 THEN 1 END) / \n  COUNT(CASE WHEN YEAR(CreationDate) = 2011 THEN 1 END) AS vote_ratio\nFROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT p.Id, p.Title, p.ViewCount\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nORDER BY p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT t.TagName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nJOIN tags t ON p.Tags LIKE CONCAT('%<', t.TagName, '>%' )\nWHERE u.DisplayName = 'Mark Meckes'\n  AND p.CommentCount = 0\n  AND p.Tags IS NOT NULL\n  AND p.Tags != '';\t----- bird -----\tcodebase_community",
    "328": "SELECT \n    (COUNT(CASE WHEN tags.TagName = 'r' THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nJOIN postTags ON posts.Id = postTags.PostId\nJOIN tags ON postTags.TagId = tags.Id\nWHERE users.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "329": "SELECT \n    (SELECT COALESCE(SUM(p.ViewCount), 0) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Mornington') -\n    (SELECT COALESCE(SUM(p.ViewCount), 0) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Amos') AS view_count_difference\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(Id) / 12 AS average_monthly_links\nFROM postLinks\nWHERE YEAR(CreationDate) = 2010\n  AND PostId IN (\n    SELECT Id\n    FROM posts\n    WHERE AnswerCount <= 2\n  );\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate)\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Autobiographer'\nORDER BY b.Date ASC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom'\n  AND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreationDate) = 2010\nORDER BY p.FavoriteCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT \n    (COUNT(CASE WHEN YEAR(p.CreaionDate) = 2011 AND u.Reputation > 1000 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    YEAR(p.CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) AS comment_count\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Score = (SELECT MAX(Score) FROM posts);\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text, u.DisplayName\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN users u ON c.UserId = u.Id\nWHERE p.Title = 'Analysing wind data with R'\nORDER BY c.CreationDate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    (COUNT(CASE WHEN p.Score > 50 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE p.CommentCount = 1 AND c.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT \n    (COUNT(CASE WHEN u.UpVotes = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    comments c\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": "SELECT c.* \nFROM cards c \nWHERE c.cardKingdomFoilId IS NOT NULL \n  AND c.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT c.*\nFROM cards c\nWHERE c.borderColor = 'borderless'\n  AND (c.cardKingdomFoilId IS NULL OR c.cardKingdomId IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT c.name\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'mythic'\n  AND l.format = 'gladiator'\n  AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "349": "SELECT l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types = 'Artifact'\n  AND c.side IS NULL\n  AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE (c.power = '*' OR c.power IS NULL)\n  AND l.format = 'commander'\n  AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "351": "SELECT c.id, c.hasContentWarning, r.text AS ruling_text\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele' AND c.hasContentWarning = 1\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, c.isPromo\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.uuid, c.name, c.artist, c.isPromo\nORDER BY COUNT(r.uuid) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT (SUM(CASE WHEN fd.language = 'Chinese Simplified' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) \nFROM cards \nWHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT (COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT \n    (COUNT(CASE WHEN fd.language = 'French' THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    cards c\n    INNER JOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originalType = 'Summon - Angel' \n  AND subtypes NOT LIKE '%Angel%';\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE l.status = 'Banned' \n  AND c.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT DISTINCT c.name\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE c.originalType = 'Artifact'\n  AND c.colors = 'B'\n  AND f.language IS NOT NULL\n  AND f.language != 'en';\t----- bird -----\tcard_games",
    "363": "SELECT c.manaCost\nFROM cards c\nWHERE c.layout = 'normal'\n  AND c.frameVersion = '2003'\n  AND c.borderColor = 'black'\n  AND c.availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT \n    (SUM(CASE WHEN c.isStorySpotlight = 1 AND c.isTextless = 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    cards c\nWHERE \n    c.isStorySpotlight = 1\nORDER BY \n    c.id;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE st.language = 'Portuguese (Brasil)'\n  AND s.block = 'Commander'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT c.subtypes, c.supertypes\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'de' \n  AND c.subtypes IS NOT NULL \n  AND c.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE power IS NULL OR power = '*'\n  AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'premodern' \n  AND l.status = 'legal'\n  AND c.text LIKE '%This is a triggered mana ability.%'\n  AND c.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'French'\n  AND c.layout = 'normal'\n  AND c.borderColor = 'black'\n  AND c.artist = 'Matthew D. Wilson'\n  AND fd.type = 'Creature';\t----- bird -----\tcard_games",
    "370": "SELECT st.language\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.baseSetSize = 180 AND s.block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(CASE WHEN c.hasContentWarning = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'commander' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "372": "SELECT \n    (COUNT(CASE WHEN fd.language = 'French' AND (c.power IS NULL OR c.power = '*') THEN 1 END) * 100.0 / \n     COUNT(CASE WHEN c.power IS NULL OR c.power = '*' THEN 1 END)) AS percentage\nFROM cards c\nLEFT JOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.power IS NULL OR c.power = '*';\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT \n    (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) * 100.0 / COUNT(*)) AS proportion\nFROM \n    cards;\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT st.language\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE s.mcmName = 'Archenemy' AND s.code = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost\nFROM cards\nWHERE name = 'Serra Angel' OR name = 'Shrine Keeper'\nORDER BY convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nJOIN cards c ON s.code = c.setCode\nWHERE c.name = 'Ancestor''s Chosen'\n  AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS(\n    SELECT 1\n    FROM cards c\n    JOIN foreign_data fd ON c.uuid = fd.uuid\n    WHERE c.name = 'Ancestor''s Chosen'\n      AND fd.language = 'Korean'\n) AS has_korean_version;\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.translation = 'Hauptset Zehnte Edition'\nAND c.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT st.translation\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.name = 'Eighth Edition'\n  AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT EXISTS (\n    SELECT 1 FROM cards c\n    JOIN sets s ON c.setCode = s.code\n    WHERE c.name = 'Angel of Mercy' AND s.mtgoCode IS NOT NULL\n) AS appeared_on_mtg_online;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) \nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ice Age' \n  AND st.language = 'Italian' \n  AND st.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT s.isForeignOnly\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.name = 'Adarkar Valkyrie' AND s.isForeignOnly = 1;\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) \nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.language = 'Italian' \n  AND st.translation IS NOT NULL \n  AND s.baseSetSize < 10\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT c.artist\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\n  AND c.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\n  AND c.convertedManaCost > 5\n  AND (c.power = '*' OR c.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavorText\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE fd.language = 'Italian'\n  AND c.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "389": "SELECT r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\n  AND r.language = 'Italian';\t----- bird -----\tcard_games",
    "390": "SELECT c.name\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE s.name = 'Coldsnap'\n  AND fd.language = 'Italian'\n  AND c.convertedManaCost = (\n    SELECT MAX(c2.convertedManaCost)\n    FROM cards c2\n    JOIN sets s2 ON c2.setCode = s2.code\n    WHERE s2.name = 'Coldsnap'\n  );\t----- bird -----\tcard_games",
    "391": "SELECT \n    (SUM(CASE WHEN c.convertedManaCost = 7 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    cards c\nJOIN \n    sets s ON c.setCode = s.code\nWHERE \n    s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "392": "SELECT \n    (SUM(CASE WHEN c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    cards c\nJOIN \n    sets s ON c.setCode = s.code\nWHERE \n    s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "393": "SELECT l.format, c.name\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\nGROUP BY l.format\nHAVING COUNT(*) = (\n    SELECT MAX(banned_count)\n    FROM (\n        SELECT COUNT(*) AS banned_count\n        FROM legalities\n        WHERE status = 'Banned'\n        GROUP BY format\n    ) AS format_banned_counts\n);\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecRank = 1\nAND l.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN legalities l ON c.uuid = l.uuid\nWHERE s.name = 'Hour of Devastation'\n  AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT s.name\nFROM sets s\nJOIN set_translations st_korean ON s.code = st_korean.setCode AND st_korean.language = 'Korean'\nLEFT JOIN set_translations st_japanese ON s.code = st_japanese.setCode AND st_japanese.language LIKE '%Japanese%'\nWHERE st_japanese.setCode IS NULL;\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT c.frameVersion, c.name, l.status\nFROM cards c\nLEFT JOIN legalities l ON c.uuid = l.uuid\nWHERE c.artist = 'Allen Williams'\n  AND (l.status = 'Banned' OR l.status IS NULL);\t----- bird -----\tcard_games",
    "398": "SELECT bond_type\nFROM bond\nGROUP BY bond_type\nORDER BY COUNT(bond_type) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(CASE WHEN a.element = 'o' THEN 1 ELSE 0 END) AS average_oxygen_atoms\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(CASE WHEN b.bond_type = '-' THEN 1 ELSE 0 END) AS average_single_bonded_carcinogenic\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label = '+';\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '#'\n  AND m.label = '+';\t----- bird -----\ttoxicology",
    "402": "SELECT \n    (SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) / COUNT(a.atom_id)) * 100 AS percentage\nFROM \n    atom a\n    INNER JOIN connected c ON a.atom_id = c.atom_id\n    INNER JOIN bond b ON c.bond_id = b.bond_id\nWHERE \n    b.bond_type = '=';\t----- bird -----\ttoxicology",
    "403": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE c.bond_id = 'TR004_8_9'\nUNION\nSELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT label\nFROM atom\nWHERE element = 'h'\nGROUP BY label\nORDER BY COUNT(label) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '-'\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20')\n   OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) AS atom_count\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (a.element = 'i' OR a.element = 's')\n  AND b.bond_type = '-';\t----- bird -----\ttoxicology",
    "409": "SELECT \n    (COUNT(DISTINCT CASE WHEN a.element = 'f' THEN m.molecule_id END) * 100.0 / COUNT(DISTINCT m.molecule_id)) AS percentage\nFROM \n    molecule m\nLEFT JOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+' AND a.element IS NOT NULL AND a.element = 'f'\t----- bird -----\ttoxicology",
    "410": "SELECT \n    (SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percent\nFROM \n    bond b\nJOIN \n    molecule m ON b.molecule_id = m.molecule_id\nWHERE \n    b.bond_type = '#'\t----- bird -----\ttoxicology",
    "411": "SELECT DISTINCT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR000'\nORDER BY a.element\nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT \n    ROUND(\n        (SUM(CASE WHEN b.bond_type = '=' THEN 1 ELSE 0 END) / COUNT(b.bond_id)) * 100, \n        5\n    ) AS percentage\nFROM \n    bond b\nWHERE \n    b.molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(SUM(label = '+') / COUNT(molecule_id) * 100, 3) AS percent FROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT \n    ROUND(\n        (SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) * 100.0) / COUNT(a.atom_id), \n        4\n    ) AS percent\nFROM \n    atom a\nWHERE \n    a.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT a.element, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT b.bond_type, MAX(COUNT(b.bond_type)) as bond_count, m.label\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR010'\nGROUP BY b.bond_type\nORDER BY bond_count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE m.label = '-'\n  AND b.bond_type = '-'\nORDER BY m.molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) \nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR009' \n  AND (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) AS connection_count\nFROM connected\nWHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT a.element\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\n  AND m.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT b.bond_id, b.bond_type\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a1.element = 'p' AND a2.element = 'n') OR (a1.element = 'n' AND a2.element = 'p');\t----- bird -----\ttoxicology",
    "424": "SELECT m.label = '+' AS is_carcinogenic\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '='\nGROUP BY m.molecule_id\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT a.atom_id, COUNT(c.bond_id) AS bond_count\n    FROM atom a\n    JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\n    WHERE a.element = 'i'\n    GROUP BY a.atom_id\n) AS atom_bond_counts;\t----- bird -----\ttoxicology",
    "426": "SELECT DISTINCT a.element\nFROM atom a\nLEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.atom_id IS NULL AND c.atom_id2 IS NULL;\t----- bird -----\ttoxicology",
    "427": "SELECT a.atom_id, a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR041' AND b.bond_type = '#'\t----- bird -----\ttoxicology",
    "428": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE c.bond_id = 'TR144_8_19'\nUNION\nSELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT \n    (SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(b.bond_id)) AS proportion\nFROM \n    bond b\n    JOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE \n    b.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*) \nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nWHERE b.bond_type = '#' \n  AND (a.element = 'p' OR a.element = 'br');\t----- bird -----\ttoxicology",
    "432": "SELECT \n    (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(a.atom_id)) AS percent\nFROM \n    atom a\n    INNER JOIN connected c ON a.atom_id = c.atom_id\n    INNER JOIN bond b ON c.bond_id = b.bond_id\nWHERE \n    b.bond_type = '-';\t----- bird -----\ttoxicology",
    "433": "SELECT a1.element, a2.element\nFROM connected c\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT \n    (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT m.molecule_id)) AS percentage\nFROM \n    molecule m\nJOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT a.element\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+'\n  AND SUBSTR(a.atom_id, 7, 1) = '4';\t----- bird -----\ttoxicology",
    "436": "SELECT \n    m.label,\n    (SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) / COUNT(a.element)) AS ratio\nFROM \n    molecule m\nJOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.molecule_id = 'TR006'\nGROUP BY \n    m.label;\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE s.AvgScrMath > 400 \n  AND sc.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE (f.`Enrollment (K-12)` + f.`Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(f.`Percent (%) Eligible Free (Ages 5-17)`) AS highest_eligible_free_rate\nFROM satscores s\nJOIN frpm f ON s.`cds` = f.`CDSCode`\nWHERE (s.`NumGE1500` / s.`NumTstTakr`) > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.CDSCode, s.CharterNum, ss.AvgScrWrite\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE ss.AvgScrWrite > 499\n  AND s.CharterNum IS NOT NULL\nORDER BY ss.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.School, CONCAT(s.Street, ', ', s.City, ', ', s.State, ' ', s.Zip) AS FullStreetAddress\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT DISTINCT s.School\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores s2 ON s.CDSCode = s2.cds\nWHERE f.`Percent (%) Eligible Free (K-12)` > 0.1\n  AND s2.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT DISTINCT s.FundingType\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.County = 'Riverside'\n  AND (SELECT AVG(ss2.AvgScrMath) FROM satscores ss2 WHERE ss2.cds IN (\n    SELECT cds FROM schools WHERE County = 'Riverside'\n  )) > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.School, s.Street, s.City, s.State, s.Zip\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Monterey'\n  AND s.HighGrade = '12'\n  AND f.`Percent (%) Eligible FRPM (Ages 5-17)` > 0\n  AND f.`FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.School, s.CDSCode, s.Phone AS CommunicationNumber, AVG(ss.AvgScrWrite) AS AvgWriteScore\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.OpenDate > '1991-12-31' OR s.ClosedDate < '2000-01-01'\nGROUP BY s.School, s.CDSCode, s.Phone;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCType\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.FundingType = 'Local'\n  AND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > (\n    SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n    FROM frpm f2\n    JOIN schools s2 ON f2.CDSCode = s2.CDSCode\n    WHERE s2.FundingType = 'Local'\n  )\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `Percent (%) Eligible Free (K-12)` \nFROM frpm \nORDER BY `Enrollment (K-12)` DESC \nLIMIT 10 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT \n    (f.`FRPM Count (K-12)` / f.`Enrollment (K-12)`) AS eligible_rate\nFROM \n    frpm f\nJOIN \n    schools s ON f.`CDSCode` = s.`CDSCode`\nWHERE \n    s.`DOCType` = '66'\nORDER BY \n    f.`FRPM Count (K-12)` DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nORDER BY (ss.NumGE1500 / ss.NumTstTakr) ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.AdmFName1, s.AdmLName1, s.AdmFName2, s.AdmLName2, s.AdmFName3, s.AdmLName3\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nORDER BY ss.NumGE1500 DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(s.NumTstTakr) AS average_test_takers\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE sc.County = 'Fresno'\n  AND sc.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.Phone\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.District = 'Fresno Unified'\nORDER BY ss.AvgScrRead ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.School\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.Virtual = 'F'\n  AND ss.AvgScrRead IS NOT NULL\n  AND (\n    SELECT COUNT(DISTINCT ss2.AvgScrRead)\n    FROM satscores ss2\n    JOIN schools s2 ON ss2.cds = s2.CDSCode\n    WHERE s2.County = s.County\n      AND ss2.AvgScrRead > ss.AvgScrRead\n  ) < 5\nORDER BY s.County, ss.AvgScrRead DESC;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.School, AVG(ss.AvgScrWrite) AS AverageWritingScore\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich'\nGROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "456": "SELECT `CDSCode`, `Enrollment (K-12)` \nFROM schools \nWHERE `DOC` = '31' \nORDER BY `Enrollment (K-12)` DESC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS monthly_average\nFROM schools\nWHERE County = 'Alameda County'\n  AND DOC = '52'\n  AND YEAR(OpenDate) = 1980\n  AND StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange County' AND DOC = '54') AS UnifiedSchoolDistrictCount,\n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange County' AND DOC = '52') AS ElementarySchoolDistrictCount,\n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange County' AND DOC = '54') / \n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange County' AND DOC = '52') AS Ratio\nFROM DUAL;\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.School, s.MailStreet\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nORDER BY ss.AvgScrMath DESC\nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) AS total_non_chartered_schools\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Los Angeles'\n  AND s.Charter = 0\n  AND (f.`Free Meal Count (K-12)` * 100.0 / f.`Enrollment (K-12)`) < 0.18\n  AND f.`Enrollment (K-12)` IS NOT NULL\n  AND f.`Free Meal Count (K-12)` IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT s.`Enrollment (Ages 5-17)`\nFROM schools s\nJOIN frpm f ON s.`CDSCode` = f.`CDSCode`\nWHERE s.`School` = 'State Special School'\nAND s.`City` = 'Fremont'\nAND f.`Academic Year` = '2014-15'\nAND s.`EdOpsCode` = 'SSS';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.School, f.`Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Los Angeles'\n  AND s.GSserved = 'K-9';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS num_schools\nFROM schools\nWHERE Virtual = 'F' AND County IN ('San Diego', 'Santa Barbara')\nGROUP BY County\nORDER BY num_schools DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools WHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT \n    COUNT(*) AS num_multiple_provision_types,\n    City,\n    COUNT(*) AS num_schools_in_city\nFROM \n    schools s\nJOIN \n    frpm f ON s.CDSCode = f.CDSCode\nWHERE \n    s.Magnet = 1\n    AND s.GSserved = 'K-8'\n    AND f.`NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY \n    City;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT f.`Percent (%) Eligible Free (K-12)`, s.`District Code`\nFROM frpm f\nJOIN schools s ON f.`CDSCode` = s.`CDSCode`\nWHERE s.`AdmFName1` = 'Alusine' OR s.`AdmFName2` = 'Alusine' OR s.`AdmFName3` = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT DISTINCT s.AdmissionEmail1, s.AdmissionEmail2, s.AdmissionEmail3\nFROM schools s\nWHERE s.County = 'San Bernardino'\n  AND s.City = 'San Bernardino'\n  AND s.OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n  AND s.DOC = '54'\n  AND s.SOC = '62'\n  AND s.StatusType = 'Public';\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON c.district_id = d.district_id\nJOIN disp dis ON a.account_id = dis.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE d.A3 = 'EAST BOHEMIA'\n  AND dis.type = 'POPLATEK PO OBRATU'\n  AND t.type = 'PAYMENT';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) \nFROM district d\nJOIN client c ON d.district_id = c.district_id\nWHERE c.gender = 'F' \n  AND d.A11 > 6000 \n  AND d.A11 < 10000;\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M' \n  AND d.A3 = 'North Bohemia' \n  AND d.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT \n    a.account_id,\n    (SELECT MAX(c1.avg_salary) FROM (SELECT AVG(c1.A11) AS avg_salary FROM client c1 JOIN account a1 ON c1.district_id = a1.district_id WHERE c1.gender = 'F' GROUP BY c1.client_id) AS avg_salaries) - \n    (SELECT MIN(c2.avg_salary) FROM (SELECT AVG(c2.A11) AS avg_salary FROM client c2 JOIN account a2 ON c2.district_id = a2.district_id WHERE c2.gender = 'F' GROUP BY c2.client_id) AS avg_salaries) AS salary_gap\nFROM \n    client c\nJOIN \n    account a ON c.district_id = a.district_id\nWHERE \n    c.gender = 'F'\nORDER BY \n    c.birth_date ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nWHERE c.birth_date = (\n    SELECT MIN(birth_date)\n    FROM client\n)\nAND c.district_id IN (\n    SELECT district_id\n    FROM client\n    GROUP BY district_id\n    HAVING AVG(A11) = (\n        SELECT MAX(avg_salary)\n        FROM (\n            SELECT AVG(A11) AS avg_salary\n            FROM client\n            GROUP BY district_id\n        ) AS subquery\n    )\n)\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, t.type\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE YEAR(l.date) = 1997\n  AND l.status = 'A'\n  AND l.amount = (\n    SELECT MIN(amount)\n    FROM loan\n    WHERE YEAR(date) = 1997 AND status = 'A'\n  )\n  AND t.type = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "474": "SELECT a.account_id, l.amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.duration > 12\n  AND YEAR(a.date) = 1993\nORDER BY l.amount DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*) \nFROM client c\nJOIN account a ON c.client_id = a.client_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F' \n  AND c.birth_date < '1950-01-01'\n  AND d.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT d.A2\nFROM client c\nJOIN disp ON c.client_id = disp.client_id\nJOIN account a ON disp.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT \n    (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_clients\nFROM \n    client c\nJOIN \n    district d ON c.district_id = d.district_id\nWHERE \n    d.A3 = 'south Bohemia'\nORDER BY \n    d.A4 DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "478": "SELECT ((t1.balance - t2.balance) / t2.balance) * 100 AS increase_rate\nFROM trans t1\nJOIN account a ON t1.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nJOIN disp d ON c.client_id = d.client_id\nJOIN loan l ON d.account_id = l.account_id\nWHERE l.date = '1993-07-05'\n  AND t1.date = '1998-12-27'\n  AND EXISTS (\n    SELECT 1\n    FROM loan l2\n    WHERE l2.account_id = l.account_id\n      AND l2.date = '1993-07-05'\n    ORDER BY l2.date\n    LIMIT 1\n  )\n  AND (SELECT balance FROM trans WHERE account_id = t1.account_id AND date = '1993-03-22') IS NOT NULL\n  AND (SELECT balance FROM trans WHERE account_id = t1.account_id AND date = '1998-12-27') IS NOT NULL\n  AND t1.account_id IN (\n    SELECT account_id\n    FROM loan\n    WHERE date = '1993-07-05'\n    ORDER BY date\n    LIMIT 1\n  )\n  AND t1.balance IS NOT NULL\n  AND (SELECT balance FROM trans WHERE account_id = t1.account_id AND date = '1993-03-22') IS NOT NULL\n  AND (SELECT balance FROM trans WHERE account_id = t1.account_id AND date = '1998-12-27') IS NOT NULL\n  AND EXISTS (\n    SELECT 1\n    FROM trans t2\n    WHERE t2.account_id = t1.account_id\n      AND t2.date = '1993-03-22'\n  )\n  AND EXISTS (\n    SELECT 1\n    FROM trans t3\n    WHERE t3.account_id = t1.account_id\n      AND t3.date = '1998-12-27'\n  );\t----- bird -----\tfinancial",
    "479": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage\nFROM loan;\t----- bird -----\tfinancial",
    "480": "SELECT \n    (SUM(CASE WHEN l.amount < 100000 AND l.status = 'C' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN l.amount < 100000 THEN 1 ELSE 0 END)) AS percentage\nFROM \n    loan l;\t----- bird -----\tfinancial",
    "481": "SELECT d.A2, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE l.status = 'D';\t----- bird -----\tfinancial",
    "482": "SELECT d.A2 AS district, COUNT(c.client_id) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nWHERE c.gender = 'F'\nGROUP BY d.district_id, d.A2\nORDER BY female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) \nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN disp d ON a.account_id = d.account_id\nWHERE l.date BETWEEN '1995-01-01' AND '1997-12-31'\n  AND l.amount >= 250000\n  AND a.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(*) \nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district ON c.district_id = district.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE district.district_id = 1\n  AND l.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) \nFROM client \nWHERE gender = 'M' \n  AND district_id = (\n    SELECT district_id \n    FROM district \n    ORDER BY A15 DESC \n    LIMIT 1 OFFSET 1\n  )\t----- bird -----\tfinancial",
    "486": "SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawal\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE t.type = 'VYDAJ'\n  AND t.date LIKE '1996-01%'\nGROUP BY d.district_id, d.A2\nORDER BY total_withdrawal DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*) \nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dis ON c.district_id = dis.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE dis.district_id = 1 \n  AND (l.status = 'C' OR l.status = 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) AS male_client_count\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M'\n  AND d.district_id IN (\n    SELECT district_id\n    FROM district\n    ORDER BY A15 DESC\n    LIMIT 1 OFFSET 1\n  );\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT t.account_id\nFROM trans t\nJOIN card c ON t.account_id = c.disp_id\nJOIN disp d ON c.disp_id = d.disp_id\nWHERE t.operation = 'VYBER KARTOU'\n  AND t.amount < (SELECT AVG(amount) FROM trans WHERE YEAR(date) = 1998)\n  AND YEAR(t.date) = 1998;\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT d.type\nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nJOIN district dist ON a.district_id = dist.district_id\nWHERE d.type != 'OWNER'\n  AND dist.A11 > 8000\n  AND dist.A11 <= 9000;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.A15) \nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.A15 > 4000 \n  AND YEAR(a.date) >= 1997;\t----- bird -----\tfinancial",
    "492": "SELECT t.*\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nWHERE c.client_id = 3356\n  AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": "SELECT \n    (SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_women\nFROM \n    client c\nJOIN \n    account a ON c.client_id = a.client_id\nJOIN \n    district d ON c.district_id = d.district_id\nWHERE \n    d.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT \n    ((SUM(CASE WHEN YEAR(l.date) = 1997 THEN l.amount ELSE 0 END) - SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END)) / \n     NULLIF(SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END), 0)) * 100 AS growth_rate\nFROM \n    loan l\n    INNER JOIN account a ON l.account_id = a.account_id\n    INNER JOIN client c ON a.district_id = c.district_id\nWHERE \n    c.gender = 'M' \n    AND YEAR(l.date) IN (1996, 1997);\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(*) AS request_count, k_symbol AS purpose_of_debit\nFROM trans\nWHERE account_id = 3 AND type = 'DISP' AND amount = 3539\nGROUP BY k_symbol;\t----- bird -----\tfinancial",
    "496": "SELECT \n    (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM \n    client c\n    INNER JOIN disp d ON c.client_id = d.client_id\nWHERE \n    d.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nWHERE c.gender = 'F'\nORDER BY c.birth_date ASC, c.district_id ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(l.amount) AS average_loan_amount\nFROM loan l\nJOIN trans t ON l.account_id = t.account_id\nWHERE l.status IN ('C', 'D')\n  AND t.type = 'PAYMENT'\n  AND t.operation = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": "SELECT c.client_id, TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE ca.type = 'gold' AND d.type = 'OWNER';\t----- bird -----\tfinancial"
}