{
    "0": "SELECT \n  CAST(SUM(CASE WHEN c.Currency = 'EUR' THEN 1 ELSE 0 END) AS DOUBLE) / \n  CAST(SUM(CASE WHEN c.Currency = 'CZK' THEN 1 ELSE 0 END) AS DOUBLE) AS ratio\nFROM customers c\nWHERE c.Currency IN ('EUR', 'CZK');\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT c.CustomerID\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE y.Date BETWEEN '201201' AND '201212'\nAND c.Segment = 'LAM'\nGROUP BY c.CustomerID\nORDER BY SUM(y.Consumption) ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS average_monthly_consumption\nFROM yearmonth\nWHERE CustomerID IN (\n    SELECT DISTINCT CustomerID\n    FROM customers\n    WHERE Segment = 'SME'\n)\nAND SUBSTRING(Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n  (SELECT SUM(y.Consumption) \n   FROM yearmonth y \n   JOIN customers c ON y.CustomerID = c.CustomerID \n   WHERE SUBSTRING(y.Date, 1, 4) = '2012' \n   AND c.Currency = 'CZK') \n  - \n  (SELECT SUM(y.Consumption) \n   FROM yearmonth y \n   JOIN customers c ON y.CustomerID = c.CustomerID \n   WHERE SUBSTRING(y.Date, 1, 4) = '2012' \n   AND c.Currency = 'EUR') AS consumption_difference\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTRING(y.Date, 1, 4) as Year, SUM(y.Consumption) as TotalConsumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Currency = 'CZK'\nGROUP BY SUBSTRING(y.Date, 1, 4)\nORDER BY TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT ym.Date, SUM(ym.Consumption) as TotalConsumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME' \nAND ym.Date BETWEEN '201301' AND '201312'\nGROUP BY ym.Date\nORDER BY TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SELECT AVG(Consumption) FROM yearmonth y1 JOIN customers c1 ON y1.CustomerID = c1.CustomerID WHERE c1.Segment = 'SME' AND LEFT(y1.Date, 4) = '2013') -\n    (SELECT AVG(Consumption) FROM yearmonth y2 JOIN customers c2 ON y2.CustomerID = c2.CustomerID WHERE c2.Segment = 'LAM' AND LEFT(y2.Date, 4) = '2013') AS SME_LAM_Difference,\n    (SELECT AVG(Consumption) FROM yearmonth y3 JOIN customers c3 ON y3.CustomerID = c3.CustomerID WHERE c3.Segment = 'LAM' AND LEFT(y3.Date, 4) = '2013') -\n    (SELECT AVG(Consumption) FROM yearmonth y4 JOIN customers c4 ON y4.CustomerID = c4.CustomerID WHERE c4.Segment = 'KAM' AND LEFT(y4.Date, 4) = '2013') AS LAM_KAM_Difference,\n    (SELECT AVG(Consumption) FROM yearmonth y5 JOIN customers c5 ON y5.CustomerID = c5.CustomerID WHERE c5.Segment = 'KAM' AND LEFT(y5.Date, 4) = '2013') -\n    (SELECT AVG(Consumption) FROM yearmonth y6 JOIN customers c6 ON y6.CustomerID = c6.CustomerID WHERE c6.Segment = 'SME' AND LEFT(y6.Date, 4) = '2013') AS KAM_SME_Difference\nFROM dual;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \n    c.Segment,\n    ((SUM(CASE WHEN LEFT(ym.Date, 4) = '2013' THEN ym.Consumption ELSE 0 END) - \n      SUM(CASE WHEN LEFT(ym.Date, 4) = '2012' THEN ym.Consumption ELSE 0 END)) / \n     SUM(CASE WHEN LEFT(ym.Date, 4) = '2013' THEN ym.Consumption ELSE 0 END)) * 100 AS percentage_change\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE LEFT(ym.Date, 4) IN ('2012', '2013')\n  AND c.Segment IN ('SME', 'LAM', 'KAM')\nGROUP BY c.Segment\nORDER BY percentage_change DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\nAND SUBSTRING(Date, 1, 4) = '2013'\nAND SUBSTRING(Date, 5, 2) IN ('08', '09', '10', '11')\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n  (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') -\n  (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS discount_difference\nFROM dual\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    (SELECT COUNT(*) FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE c.Segment = 'SME' AND c.Currency = 'CZK') - \n    (SELECT COUNT(*) FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE c.Segment = 'SME' AND c.Currency = 'EUR') AS difference\nFROM dual;\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT \n    (COUNT(CASE WHEN ym.Consumption > 46.73 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT (COUNT(CASE WHEN Consumption > 528.3 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM yearmonth\nWHERE SUBSTRING(Date, 1, 6) = '201202'\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) as highest_monthly_consumption\nFROM yearmonth\nWHERE SUBSTRING(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nWHERE YEAR(t.Date) = 2013 AND MONTH(t.Date) = 9\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT gs.Country\nFROM gasstations gs\nJOIN transactions_1k t ON gs.GasStationID = t.GasStationID\nWHERE YEAR(t.Date) = 2013 AND MONTH(t.Date) = 6;\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT c.CustomerID) \nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Currency = 'EUR' \nAND y.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT t.Date, t.Time\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11\nORDER BY t.Date, t.Time;\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE' \nAND t.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24' \nAND t.Time = '16:25:00'\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE DATE(t.Date) = '2012-08-23' \nAND t.Time = '21:20:00'\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) \nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-26' \nAND t.Time BETWEEN '08:00:00' AND '09:00:00'\nAND g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT c.Nationality\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE DATE(t.Date) = '2012-08-24'\nAND t.Amount = 548.4\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT \n    (COUNT(DISTINCT CASE WHEN c.Currency = 'EUR' THEN c.CustomerID END) * 100.0 / COUNT(DISTINCT c.CustomerID)) AS percentage\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE DATE(t.Date) = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT ((y2012.Consumption - y2013.Consumption) / y2012.Consumption) * 100 AS consumption_decrease_rate\nFROM (\n    SELECT t.CustomerID, SUM(t.Amount) AS Consumption\n    FROM transactions_1k t\n    JOIN customers c ON t.CustomerID = c.CustomerID\n    WHERE t.Date >= '2012-01-01' AND t.Date <= '2012-12-31'\n    GROUP BY t.CustomerID\n) y2012\nJOIN (\n    SELECT t.CustomerID, SUM(t.Amount) AS Consumption\n    FROM transactions_1k t\n    JOIN customers c ON t.CustomerID = c.CustomerID\n    WHERE t.Date >= '2013-01-01' AND t.Date <= '2013-12-31'\n    GROUP BY t.CustomerID\n) y2013 ON y2012.CustomerID = y2013.CustomerID\nWHERE y2012.CustomerID IN (\n    SELECT CustomerID\n    FROM transactions_1k\n    WHERE Date = '2012-08-25' AND Price = 634.8\n)\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    (COUNT(CASE WHEN c.Segment = 'premium' THEN 1 END) * 100.0 / COUNT(*)) AS premium_percentage\nFROM customers c\nJOIN gasstations g ON c.CustomerID = g.GasStationID\nWHERE g.Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(t.Amount) as TotalAmount\nFROM transactions_1k t\nWHERE t.CustomerID = 38508;\n\nSELECT SUM(t.Amount) as TotalAmount\nFROM transactions_1k t\nWHERE t.CustomerID = 38508 \nAND t.Date = '201201';\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT \n    t.CustomerID,\n    SUM(t.Price) AS total_spent,\n    SUM(t.Price) / SUM(t.Amount) AS avg_price_per_item,\n    c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nGROUP BY t.CustomerID, c.Currency\nORDER BY total_spent DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT ym.CustomerID, ym.Consumption\nFROM yearmonth ym\nJOIN (\n    SELECT DISTINCT t.CustomerID\n    FROM transactions_1k t\n    WHERE t.ProductID = 5\n    AND (t.Price / t.Amount) > 29.00\n    AND YEAR(t.Date) = 2012\n    AND MONTH(t.Date) = 8\n) AS high_spending_customers ON ym.CustomerID = high_spending_customers.CustomerID\nWHERE ym.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.first_name = 'Angela' AND mem.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer' \nAND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) \nFROM (\n    SELECT e.event_id\n    FROM event e\n    JOIN attendance a ON e.event_id = a.link_to_event\n    WHERE e.type = 'Meeting'\n    GROUP BY e.event_id\n    HAVING COUNT(a.link_to_member) > 10\n) AS subquery;\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.event_id IN (\n    SELECT link_to_event\n    FROM attendance\n    GROUP BY link_to_event\n    HAVING COUNT(link_to_member) > 20\n)\nAND e.type != 'fundraiser'\nGROUP BY e.event_name;\t----- bird -----\tstudent_club",
    "34": "SELECT i.amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'IL';\t----- bird -----\tstudent_club",
    "36": "SELECT e.expense_id, e.expense_description, e.approved\nFROM expense e\nJOIN event ev ON e.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting' \nAND ev.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) AS average_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah' AND m.last_name = 'Allen'\nAND (SUBSTRING(e.expense_date, 6, 2) = '09' OR SUBSTRING(e.expense_date, 6, 2) = '10')\t----- bird -----\tstudent_club",
    "38": "SELECT \n    (SELECT SUM(b.spent) \n     FROM budget b \n     JOIN event e ON b.link_to_event = e.event_id \n     WHERE SUBSTRING(e.event_date, 1, 4) = '2019') -\n    (SELECT SUM(b.spent) \n     FROM budget b \n     JOIN event e ON b.link_to_event = e.event_id \n     WHERE SUBSTRING(e.event_date, 1, 4) = '2020') AS difference_spent\nFROM DUAL;\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT e.status\nFROM expense exp\nJOIN budget b ON exp.link_to_budget = b.budget_id\nJOIN event e ON b.link_to_event = e.event_id\nWHERE exp.expense_description = 'Post Cards, Posters'\nAND exp.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "42": "SELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.first_name = 'Brent' AND mem.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member m\nJOIN major maj ON m.link_to_major = maj.major_id\nWHERE maj.major_name = 'Business' \nAND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT m.department\nFROM member AS m\nJOIN major AS maj ON m.link_to_major = maj.major_id\nWHERE m.position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT \n    CASE \n        WHEN SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END) > 0 \n        THEN SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) / \n             SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END)\n        ELSE NULL \n    END AS ratio\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE b.category = 'Advertisement'\nAND e.event_name IN ('Yearly Kickoff', 'October Meeting');\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_pizza_cost\nFROM expense\nWHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange County' \nAND state = 'VA';\t----- bird -----\tstudent_club",
    "49": "SELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN major maj ON m.link_to_major = maj.major_id\nWHERE maj.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nORDER BY (b.spent / b.amount) DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent\nFROM budget\nWHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id, m.first_name, m.last_name\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_event\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name\nFROM event e\nJOIN expense exp ON e.event_id = exp.link_to_budget\nORDER BY exp.cost ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": "SELECT (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN exp.cost ELSE 0 END) / SUM(exp.cost)) * 100 AS percentage\nFROM expense exp\nJOIN event e ON exp.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "59": "SELECT source\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY SUM(amount) DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member m\nJOIN major maj ON m.link_to_major = maj.major_id\nWHERE maj.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'Advertisement'\nORDER BY b.spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT COUNT(*) > 0\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "63": "SELECT e.cost\nFROM expense e\nJOIN event ev ON e.link_to_event = ev.event_id\nWHERE e.expense_description = 'Posters'\nAND ev.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nAND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT e.expense_description, SUM(e.cost) AS total_value\nFROM expense e\nJOIN event ev ON e.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting'\nAND e.approved = 'Approved'\nGROUP BY e.expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT b.category, b.amount\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.event_name = 'April Speaker'\nORDER BY b.amount ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member_id, m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT e.expense_description\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT e.type\nFROM event e\nWHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, m.link_to_major, major.department, major.college\nFROM member m\nJOIN major ON m.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT b.category\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.location = 'MU 215'\nAND e.type = 'Guest Speaker'\nAND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT (COUNT(CASE WHEN i.amount = 50 THEN 1 END) * 100.0 / COUNT(m.member_id)) AS percentage\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE m.t_shirt_size = 'Medium' AND m.position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' \nAND status = 'Closed' \nAND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name, m.last_name, m.phone\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense)\nGROUP BY m.member_id, m.first_name, m.last_name, m.phone;\t----- bird -----\tstudent_club",
    "76": "SELECT m.first_name, m.last_name, e.cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": "SELECT m.first_name, m.last_name, i.amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "78": "SELECT \n    SUM(CASE WHEN p.SEX = 'M' AND p.Admission = '+' THEN 1 ELSE 0 END) AS inpatient_male,\n    SUM(CASE WHEN p.SEX = 'M' AND p.Admission = '-' THEN 1 ELSE 0 END) AS outpatient_male,\n    ROUND(\n        ABS(\n            (SUM(CASE WHEN p.SEX = 'M' AND p.Admission = '+' THEN 1 ELSE 0 END) * 100.0) / \n            NULLIF(SUM(CASE WHEN p.SEX = 'M' AND p.Admission = '-' THEN 1 ELSE 0 END), 0) - 100\n        ), 2\n    ) AS deviation_percentage\nFROM Patient p\nWHERE p.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT \n    (COUNT(CASE WHEN YEAR(Birthday) > 1930 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM Patient\nWHERE SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT \n    CAST(SUM(CASE WHEN p.Admission = '+' THEN 1 ELSE 0 END) AS FLOAT) / \n    SUM(CASE WHEN p.Admission = '-' THEN 1 ELSE 0 END) AS outpatient_to_inpatient_ratio\nFROM Patient p\nWHERE p.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT p.Diagnosis, l.Date\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT p.ID, p.SEX, p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT p.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) AS age\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT p.ID, p.SEX, p.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \nAND YEAR(Description) = 1997 \nAND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31'\nAND e.`Thrombosis` = 1\nAND p.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT e.`Symptoms`, e.`Diagnosis`\nFROM Patient p\nJOIN Examination e ON p.`ID` = e.`ID`\nWHERE e.`Symptoms` IS NOT NULL\nAND p.`Birthday` = (\n    SELECT MAX(`Birthday`)\n    FROM Patient\n)\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT \n    MAX(l.`Date`) AS LastLabDate,\n    (YEAR(Patient.`First Date`) - YEAR(Patient.Birthday)) AS AgeAtFirstVisit\nFROM Patient\nJOIN Laboratory l ON Patient.`ID` = l.`ID`\nWHERE Patient.`Diagnosis` LIKE '%SJS%'\nORDER BY Patient.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    SUM(CASE WHEN p.SEX = 'M' AND l.UA <= 8.0 THEN 1 ELSE 0 END) / \n    SUM(CASE WHEN p.SEX = 'F' AND l.UA <= 6.5 THEN 1 ELSE 0 END) AS male_to_female_ratio\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.UA IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE YEAR(p.Birthday) < 18 \nAND YEAR(e.`Examination Date`) BETWEEN 1990 AND 1993;\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n    YEAR(e.`Examination Date`) - YEAR(p.Birthday) AS Age,\n    e.`Diagnosis`\nFROM \n    Patient p\nJOIN \n    Examination e ON p.ID = e.ID\nWHERE \n    e.HGB = (SELECT MAX(HGB) FROM Examination)\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT e.`aCL IgM` \nFROM Patient p\nJOIN Examination e ON p.`ID` = e.`ID`\nWHERE p.`Description` = '1994-02-19' \nAND e.`Examination Date` = '1993-11-12'\nAND p.`Diagnosis` = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n    CASE \n        WHEN SUM(CASE WHEN l.Date LIKE '1981-12-%' THEN l.`T-CHO` ELSE 0 END) = 0 THEN NULL\n        ELSE \n            (SUM(CASE WHEN l.Date LIKE '1981-11-%' THEN l.`T-CHO` ELSE 0 END) - \n             SUM(CASE WHEN l.Date LIKE '1981-12-%' THEN l.`T-CHO` ELSE 0 END)) / \n            SUM(CASE WHEN l.Date LIKE '1981-12-%' THEN l.`T-CHO` ELSE 0 END)\n    END AS decrease_rate\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Birthday = '1959-02-18'\n    AND (l.Date LIKE '1981-11-%' OR l.Date LIKE '1981-12-%');\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE e.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31'\nAND l.GPT > 30\nAND l.ALB < 4\nORDER BY p.ID;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 2 \nAND e.ANA = 'S'\nAND e.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT DISTINCT p.`ID`\nFROM Patient p\nJOIN Laboratory l ON p.`ID` = l.`ID`\nWHERE p.`Admission` = '-'\nAND l.`Date` LIKE '1991-10%'\nAND l.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(l.ALB) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'F' \nAND l.PLT > 400 \nAND p.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT (SUM(CASE WHEN p.SEX = 'F' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage_women\nFROM Patient p\nWHERE YEAR(p.Birthday) = 1980 AND p.Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE WHEN (p.SEX = 'M' AND l.UA > 8.0) OR (p.SEX = 'F' AND l.UA > 6.5) THEN 'Yes' ELSE 'No' END AS WithinNormalRange\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' \nAND l.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT p.ID, p.SEX, p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT p.SEX, COUNT(*) as PatientCount\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.`T-BIL` >= 2.0\nGROUP BY p.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(NOW()) - YEAR(p.Birthday)) AS average_age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.TG >= 200 \nAND YEAR(CURDATE()) - YEAR(p.Birthday) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE YEAR(p.Birthday) BETWEEN 1936 AND 1956 \nAND p.SEX = 'M' \nAND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT p.ID, p.SEX, YEAR(CURDATE()) - YEAR(p.Birthday) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GLU >= 180 AND l.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.`ID`, p.`Diagnosis`, YEAR(CURDATE()) - YEAR(p.`Birthday`) AS Age\nFROM Patient p\nJOIN Laboratory l ON p.`ID` = l.`ID`\nWHERE l.`RBC` < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT p.ID, p.SEX\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE e.Diagnosis = 'SLE'\n  AND l.HGB > 10\n  AND l.HGB < 17\nORDER BY p.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT p.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.HCT >= 52\nGROUP BY p.ID, age\nHAVING COUNT(l.ID) >= 2;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_than_normal,\n    SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_than_normal,\n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS difference\nFROM Laboratory;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE YEAR(l.Date) = 1984\n  AND (YEAR(CURDATE()) - YEAR(p.Birthday)) < 50\n  AND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT \n    (SUM(CASE WHEN p.SEX = 'F' AND l.PT >= 14 THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN l.PT >= 14 THEN 1 ELSE 0 END)) AS percentage\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    YEAR(CURDATE()) - YEAR(p.Birthday) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' \nAND l.WBC > 3.5 \nAND l.WBC < 9.0 \nAND (l.FG <= 150 OR l.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT e.ID) \nFROM Examination e \nWHERE e.`aCL IgG` >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE p.ID IN (\n    SELECT ID \n    FROM Laboratory \n    WHERE IGG > 900 AND IGG < 2000\n)\nAND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.IGA > 80 AND l.IGA < 500\nAND YEAR(p.`First Date`) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT e.`Diagnosis`, COUNT(*) as diagnosis_count\nFROM Examination e\nJOIN Patient p ON e.`ID` = p.`ID`\nWHERE (e.`aCL IgM` <= 40 OR e.`aCL IgM` >= 400)\nGROUP BY e.`Diagnosis`\nORDER BY diagnosis_count DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) \nFROM Patient \nWHERE CRP = '+' \nAND Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRE >= 1.5 \nAND (YEAR(CURDATE()) - YEAR(p.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.RNP IN ('-', '+-') \nAND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.SM IN ('-', '+-') \nAND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.SC170 IN ('negative', '0') \n  AND p.SEX = 'F' \n  AND l.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' \nAND l.CENTROMEA IN ('-', '+-') \nAND l.SSB IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(p.Birthday) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.CPK < 250\nAND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016'\nGROUP BY l.name\nORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT t.team_long_name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nJOIN Team t ON m.away_team_api_id = t.team_api_id\nWHERE l.name = 'Scotland Premier League'\nAND m.season = '2009/2010'\nAND m.away_team_goal > m.home_team_goal\nGROUP BY t.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT ta.buildUpPlaySpeed\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nORDER BY ta.buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT l.name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.season = '2015/2016'\nAND m.home_team_goal = m.away_team_goal\nGROUP BY l.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT \n    p.player_name,\n    TIMESTAMPDIFF(YEAR, p.birthday, CURDATE()) AS current_age\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE \n    pa.sprint_speed >= 97\n    AND YEAR(pa.date) >= 2013\n    AND YEAR(pa.date) <= 2015;\t----- bird -----\teuropean_football_2",
    "133": "SELECT l.name, COUNT(m.id) as match_count\nFROM League l\nJOIN Match m ON l.id = m.league_id\nGROUP BY l.id, l.name\nORDER BY match_count DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT DISTINCT ta.team_fifa_api_id\nFROM Team_Attributes ta\nWHERE ta.buildUpPlaySpeed > 50 AND ta.buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT t.team_long_name\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE ta.buildUpPlayPassing > (\n    SELECT AVG(buildUpPlayPassing)\n    FROM Team_Attributes\n    WHERE buildUpPlayPassing IS NOT NULL\n)\nAND strftime('%Y', ta.date) = '2012';\t----- bird -----\teuropean_football_2",
    "136": "SELECT (SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) * 100.0 / COUNT(player_fifa_api_id)) AS percentage_left_footed\nFROM Player_Attributes\nWHERE YEAR(birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(pa.long_shots) AS average_long_shots\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.height > 180\nGROUP BY p.player_name\nORDER BY AVG(pa.heading_accuracy) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2009/2010'\nGROUP BY l.id, l.name\nHAVING AVG(m.home_team_goal) > AVG(m.away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": "SELECT id, player_api_id, player_name, birthday \nFROM Player \nWHERE SUBSTR(birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Gabriel Tamas'\nAND YEAR(pa.date) = 2011;\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Poland' AND m.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT p.player_name, AVG(pa.finishing) as avg_finishing\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height = (SELECT MAX(height) FROM Player)\n   OR p.height = (SELECT MIN(height) FROM Player)\nGROUP BY p.player_name\nORDER BY avg_finishing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.date >= '2010' AND pa.date <= '2015'\nAND p.height > 170;\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    (SELECT AVG(pa.ball_control) \n     FROM Player_Attributes pa \n     JOIN Player p ON pa.player_api_id = p.player_api_id \n     WHERE p.player_name = 'Abdou Diallo') \n    - \n    (SELECT AVG(pa.ball_control) \n     FROM Player_Attributes pa \n     JOIN Player p ON pa.player_api_id = p.player_api_id \n     WHERE p.player_name = 'Aaron Appindangoye') AS difference_ball_control\nFROM DUAL;\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name, birthday \nFROM Player \nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') \nORDER BY birthday ASC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT player_api_id) \nFROM Player_Attributes \nWHERE player_api_id IN (\n    SELECT player_api_id \n    FROM Player \n    WHERE strftime('%Y', birthday) < '1986'\n) \nAND defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) \nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Belgium Jupiler League' \nAND SUBSTR(m.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2008/2009'\nGROUP BY l.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT \n    ((MAX(CASE WHEN p.player_name = 'Ariel Borysiuk' THEN pa.overall_rating END) - \n      MAX(CASE WHEN p.player_name = 'Paulin Puel' THEN pa.overall_rating END)) * 100.0) / \n     MAX(CASE WHEN p.player_name = 'Paulin Puel' THEN pa.overall_rating END) AS percentage_difference\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name IN ('Ariel Borysiuk', 'Paulin Puel');\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) \nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(ta.chanceCreationPassing) AS highest_chance_creation_passing, ta.chanceCreationPassingClass\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'Ajax'\nGROUP BY ta.chanceCreationPassingClass\nORDER BY highest_chance_creation_passing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "156": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.overall_rating = 77\n  AND pa.date LIKE '2016-06-23%'\nORDER BY p.birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Aaron Mooy'\nAND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Francesco Migliore'\nAND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT pa.date\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Kevin Constant'\nAND pa.crossing = (\n    SELECT MAX(pa2.crossing)\n    FROM Player p2\n    JOIN Player_Attributes pa2 ON p2.player_api_id = pa2.player_api_id\n    WHERE p2.player_name = 'Kevin Constant'\n)\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "160": "SELECT ta.buildUpPlayPassingClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id\nWHERE t.team_long_name = 'FC Lorient'\nAND ta.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT ta.defenceAggressionClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id\nWHERE t.team_long_name = 'Hannover 96'\nAND ta.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE p.player_name = 'Marko Arnautovic' \nAND SUBSTRING(pa.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT \n    ((MAX(CASE WHEN p.player_name = 'Landon Donovan' THEN pa.overall_rating END) - \n      MAX(CASE WHEN p.player_name = 'Jordan Bowery' THEN pa.overall_rating END)) * 100.0) / \n     MAX(CASE WHEN p.player_name = 'Landon Donovan' THEN pa.overall_rating END) AS percentage\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name IN ('Landon Donovan', 'Jordan Bowery')\n  AND pa.date = '2013-07-12';\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "165": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.overall_rating = (\n    SELECT MAX(overall_rating)\n    FROM Player_Attributes\n)\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT DISTINCT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT t.team_short_name\nFROM Team t\nJOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id\nWHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \nAND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) AS jumping_difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id\nFROM Player_Attributes\nWHERE preferred_foot = 'right'\nORDER BY potential ASC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": "SELECT m.home_team_goal, m.away_team_goal\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.date LIKE '2008-09-24%'\nAND l.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "173": "SELECT ta.buildUpPlaySpeedClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id\nWHERE t.team_long_name = 'KSV Cercle Brugge'\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "174": "SELECT p.finishing, p.curve\nFROM Player_Attributes p\nJOIN Player pl ON p.player_api_id = pl.player_api_id\nWHERE pl.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "175": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016'\nGROUP BY l.name\nORDER BY COUNT(m.id) DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT t.team_long_name\nFROM Match m\nJOIN Team t ON m.away_team_api_id = t.team_api_id\nWHERE m.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": "SELECT (COUNT(CASE WHEN p.height < 180 AND pa.overall_rating > 70 THEN 1 END) / COUNT(p.id)) * 100 AS percentage\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height IS NOT NULL AND pa.overall_rating IS NOT NULL;\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 20\nAND q.q1 IS NULL\nORDER BY q.q1 ASC\nLIMIT 5;\t----- bird -----\tformula_1",
    "180": "SELECT d.surname\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 19 AND q.q2 = (\n    SELECT MIN(q2)\n    FROM qualifying\n    WHERE raceId = 19\n    AND q2 IS NOT NULL\n)\nLIMIT 1;\t----- bird -----\tformula_1",
    "181": "SELECT r.name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT c.lat, c.lng\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": "SELECT c.lat, c.lng\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE d.forename = 'Bruno' AND d.surname = 'Senna' AND q.raceId = 354;\t----- bird -----\tformula_1",
    "185": "SELECT d.number\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 903\nAND q.q3 LIKE '1:54%';\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Bahrain Grand Prix' \nAND ra.year = 2007 \nAND r.time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT d.forename, d.surname, d.dob\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.raceId = 592\nAND r.time IS NOT NULL\nORDER BY d.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT d.url\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE lt.raceId = 161\nAND lt.time LIKE '1:27%';\t----- bird -----\tformula_1",
    "189": "SELECT c.lat, c.lng\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT c.url\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE cr.raceId = 9\nORDER BY cr.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "191": "SELECT d.code\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 45 AND q.q3 LIKE '1:33%';\t----- bird -----\tformula_1",
    "192": "SELECT s.url\nFROM seasons s\nJOIN races r ON s.year = r.year\nWHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.raceId = 872\nAND r.time IS NOT NULL\nAND r.time != ''\nORDER BY d.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\nLIMIT 1;\t----- bird -----\tformula_1",
    "195": "SELECT \n    ((MAX(CASE WHEN r.raceId = 853 THEN res.fastestLapSpeed END) - \n      MAX(CASE WHEN r.raceId = 854 THEN res.fastestLapSpeed END)) / \n     MAX(CASE WHEN r.raceId = 853 THEN res.fastestLapSpeed END)) * 100 AS percentage_faster\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Paul' AND d.surname = 'di Resta'\n  AND r.raceId IN (853, 854);\t----- bird -----\tformula_1",
    "196": "SELECT \n    (COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END) * 100.0 / COUNT(r.driverId)) AS race_completion_rate\nFROM races ra\nJOIN results r ON ra.raceId = r.raceId\nWHERE ra.date = '1983-07-16';\t----- bird -----\tformula_1",
    "197": "SELECT name\nFROM races\nWHERE YEAR(date) = (SELECT YEAR(MIN(date)) FROM races)\n  AND MONTH(date) = (SELECT MONTH(MIN(date)) FROM races);\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, SUM(r.points) as total_points\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nGROUP BY d.driverId, d.forename, d.surname\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT d.forename, d.surname, r.name, lt.milliseconds\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE lt.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes)\nLIMIT 1;\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lt.milliseconds) \nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND r.name = 'Malaysian Grand Prix' AND r.year = 2009;\t----- bird -----\tformula_1",
    "201": "SELECT \n    (COUNT(CASE WHEN ds.position > 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM results ds\nJOIN drivers d ON ds.driverId = d.driverId\nJOIN races r ON ds.raceId = r.raceId\nWHERE d.surname = 'Hamilton' AND r.year >= 2010;\t----- bird -----\tformula_1",
    "202": "SELECT d.forename, d.surname, d.nationality, MAX(ds.points) AS max_points\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nGROUP BY d.driverId, d.forename, d.surname, d.nationality\nORDER BY COUNT(ds.wins) DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "203": "SELECT DATEDIFF(CURDATE(), dob) / 365 AS age, forename, surname\nFROM drivers\nWHERE nationality = 'Japanese'\nORDER BY dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT r.name, c.name AS circuit_name, c.location\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE YEAR(r.date) = 2005 AND MONTH(r.date) = 9;\t----- bird -----\tformula_1",
    "205": "SELECT r.name\nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND res.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT r.name, s.year\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN seasons s ON r.year = s.year\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nAND res.fastestLap = 1\nORDER BY res.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT r.name, res.points\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND r.year = (\n    SELECT MIN(year)\n    FROM races r\n    JOIN results res ON r.raceId = res.raceId\n    JOIN drivers d ON res.driverId = d.driverId\n    WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\n)\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT \n    (COUNT(CASE WHEN c.country = 'Germany' THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT d.nationality\nFROM drivers d\nWHERE d.dob = (\n    SELECT MIN(dob)\n    FROM drivers\n)\nLIMIT 1;\t----- bird -----\tformula_1",
    "212": "SELECT d.driverRef\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Canadian Grand Prix' AND ra.year = 2007 AND r.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT r.name\nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY res.rank ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(r.fastestLapSpeed) \nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Spanish Grand Prix' AND ra.year = 2009;\t----- bird -----\tformula_1",
    "215": "SELECT r.positionOrder\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND ra.name = 'Chinese Grand Prix' AND ra.year = 2008;\t----- bird -----\tformula_1",
    "216": "SELECT r.time \nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.name = 'Chinese Grand Prix' \nAND ra.year = 2008 \nAND r.position = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT r.driverId) \nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008 \nAND ra.name = 'Chinese Grand Prix'\nAND r.time IS NOT NULL\nAND r.time != '';\t----- bird -----\tformula_1",
    "218": "SELECT \n    ((LAST_TIME - CHAMPION_TIME) / LAST_TIME) * 100 AS percentage_faster\nFROM (\n    SELECT \n        MIN(CASE WHEN r.position = 1 THEN r.time END) AS CHAMPION_TIME,\n        MAX(CASE WHEN r.position IS NOT NULL THEN r.time END) AS LAST_TIME\n    FROM results r\n    JOIN races ra ON r.raceId = ra.raceId\n    WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix'\n    AND r.time IS NOT NULL\n) AS subquery;\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) \nFROM circuits \nWHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cs.points) AS max_points\nFROM constructorStandings cs\nJOIN constructors c ON cs.constructorId = c.constructorId\nWHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT c.name\nFROM constructors c\nLEFT JOIN constructorResults cr ON c.constructorId = cr.constructorId AND cr.raceId = 291\nWHERE cr.points IS NULL OR cr.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) \nFROM (\n    SELECT c.constructorId\n    FROM constructors c\n    JOIN constructorResults cr ON c.constructorId = cr.constructorId\n    JOIN races r ON cr.raceId = r.raceId\n    WHERE c.nationality = 'Japanese'\n    GROUP BY c.constructorId\n    HAVING SUM(CASE WHEN cr.points = 0 THEN 1 ELSE 0 END) = 2\n) AS subquery;\t----- bird -----\tformula_1",
    "223": "SELECT \n    (COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END) * 100.0 / COUNT(*)) AS race_completion_percentage\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.nationality = 'Japanese' \n  AND ra.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "224": "SELECT r.year, AVG(\n    CASE \n        WHEN res.time IS NOT NULL AND res.time REGEXP '^[0-9]+:[0-9]+:[0-9]+\\.[0-9]+$' THEN\n            TIME_TO_SEC(STR_TO_TIME(res.time, '%H:%i:%s.%f'))\n        ELSE NULL\n    END\n) AS avg_time_seconds\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nWHERE r.year < 1975 AND res.position = 1\nGROUP BY r.year\nORDER BY r.year;\t----- bird -----\tformula_1",
    "225": "SELECT r.lap\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN driverStandings ds ON r.driverId = ds.driverId AND r.raceId = ds.raceId\nWHERE ra.year = 2009 AND ds.position = 1\nORDER BY r.fastestLap DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(r.fastestLapSpeed) \nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Spanish Grand Prix' AND ra.year = 2009;\t----- bird -----\tformula_1",
    "227": "SELECT \n    (COUNT(CASE WHEN YEAR(d.dob) < 1985 AND r.laps > 50 THEN d.driverId END) * 100.0 / \n     COUNT(DISTINCT d.driverId)) AS percentage\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE YEAR(ra.date) BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*) \nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE d.nationality = 'French' \nAND lt.time < '02:00.00';\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT d.driverId, d.forename, d.surname, d.dob,\n       ROW_NUMBER() OVER (ORDER BY d.dob DESC) as age_rank\nFROM drivers d\nWHERE d.dob IS NOT NULL\nORDER BY d.dob DESC\nLIMIT 3;\n\nSELECT COUNT(*) as dutch_drivers\nFROM (\n    SELECT d.driverId\n    FROM drivers d\n    WHERE d.dob IS NOT NULL\n    ORDER BY d.dob DESC\n    LIMIT 3\n) AS top3\nWHERE top3.nationality = 'Dutch';\t----- bird -----\tformula_1",
    "231": "SELECT driverRef\nFROM drivers\nWHERE nationality = 'German'\nORDER BY dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE YEAR(d.dob) = 1971\nAND r.fastestLapTime IS NOT NULL\nAND r.fastestLapTime <> '';\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results r\nJOIN status s ON r.statusId = s.statusId\nWHERE r.raceId > 50 \n  AND r.raceId < 100 \n  AND s.statusId = 2 \n  AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(*) AS circuit_count, location, lat, lng\nFROM circuits\nWHERE country = 'Austria'\nGROUP BY location, lat, lng;\t----- bird -----\tformula_1",
    "235": "SELECT d.forename, d.surname, r.date, r.time, d.dob\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nWHERE d.dob = (\n    SELECT MAX(dob)\n    FROM drivers\n)\nAND r.date = (\n    SELECT MIN(date)\n    FROM races r2\n    JOIN qualifying q2 ON r2.raceId = q2.raceId\n    WHERE q2.driverId = (\n        SELECT driverId\n        FROM drivers\n        WHERE dob = (\n            SELECT MAX(dob)\n            FROM drivers\n        )\n    )\n);\t----- bird -----\tformula_1",
    "236": "SELECT \n    d.forename, \n    d.surname, \n    AVG(PARSE_TIME(ps.duration)) AS avg_duration\nFROM \n    drivers d\nJOIN \n    pitStops ps ON d.driverId = ps.driverId\nWHERE \n    d.nationality = 'German' \n    AND YEAR(d.dob) BETWEEN 1980 AND 1985\nGROUP BY \n    d.driverId, d.forename, d.surname\nORDER BY \n    avg_duration ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT d.forename, d.surname, r.time\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nJOIN circuits c ON ra.circuitId = c.circuitId\nWHERE ra.year = 2008\nAND c.name = 'Circuit Gilles Villeneuve'\nAND r.position = 1;\t----- bird -----\tformula_1",
    "238": "SELECT c.constructorRef, c.url\nFROM constructors c\nJOIN constructorStandings cs ON c.constructorId = cs.constructorId\nJOIN races r ON cs.raceId = r.raceId\nWHERE r.year = 2009 AND r.name = 'Singapore Grand Prix'\nORDER BY cs.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT c.name, c.nationality, SUM(cr.points) AS total_points\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nJOIN races r ON cr.raceId = r.raceId\nJOIN circuits ci ON r.circuitId = ci.circuitId\nWHERE ci.name = 'Monaco Grand Prix'\nAND r.year BETWEEN 1980 AND 2010\nGROUP BY c.constructorId, c.name, c.nationality\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT d.forename, d.surname\nFROM qualifying q\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN drivers d ON q.driverId = d.driverId\nWHERE r.year = 2008\nAND c.name = 'Marina Bay Street Circuit'\nAND q.position = 1\nORDER BY q.q3 ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "242": "SELECT CONCAT(d.forename, ' ', d.surname) AS fullName, d.nationality, r.name AS raceName\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nLIMIT 1;\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) AS accident_count\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.name = 'Canadian Grand Prix'\nAND r.statusId = 3\nGROUP BY r.driverId\nORDER BY accident_count DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "244": "SELECT d.forename, d.surname\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE lt.time = (\n    SELECT MIN(time)\n    FROM lapTimes\n)\nLIMIT 20;\t----- bird -----\tformula_1",
    "245": "SELECT c.name AS circuit_name, MIN(lt.time) AS fastest_lap_time\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nJOIN lapTimes lt ON r.raceId = lt.raceId\nWHERE c.country = 'Italy'\nGROUP BY c.circuitId, c.name\nORDER BY fastest_lap_time ASC;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength' \nAND s.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) \nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE c.colour = 'Blue' AND sp.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'Blue' AND c2.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT s.superhero_name, s.height_cm\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nORDER BY s.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour, COUNT(s.id) as color_count\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY c.colour\nORDER BY color_count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE p.publisher_name = 'Marvel Comics'\nAND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE a.attribute_name = 'Speed'\nAND ha.attribute_value = (\n    SELECT MIN(ha2.attribute_value)\n    FROM hero_attribute ha2\n    JOIN attribute a2 ON ha2.attribute_id = a2.id\n    WHERE a2.attribute_name = 'Speed'\n)\nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE p.publisher_name = 'Marvel Comics' \nAND c.colour = 'Gold'\t----- bird -----\tsuperhero",
    "254": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\nAND ha.attribute_value = (\n    SELECT MIN(ha2.attribute_value)\n    FROM hero_attribute ha2\n    JOIN attribute a2 ON ha2.attribute_id = a2.id\n    WHERE a2.attribute_name = 'Intelligence'\n)\t----- bird -----\tsuperhero",
    "255": "SELECT r.race \nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) \nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE g.gender = 'Female' \nAND a.attribute_name = 'Strength' \nAND ha.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT \n    (COUNT(CASE WHEN a.alignment = 'Bad' THEN 1 END) * 100.0 / COUNT(s.id)) AS percentage_bad_alignment,\n    COUNT(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 END) AS marvel_bad_alignment_count\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nLEFT JOIN publisher p ON s.publisher_id = p.id\nWHERE a.alignment IS NOT NULL;\t----- bird -----\tsuperhero",
    "260": "SELECT \n  (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') - \n  (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') AS difference\nFROM dual\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(s.weight_kg) \nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE g.gender = 'Male'\nLIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.height_cm BETWEEN 170 AND 190\nAND c.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nJOIN colour c ON s.hair_colour_id = c.id\nWHERE r.race = 'Human' AND s.height_cm = 185;\t----- bird -----\tsuperhero",
    "267": "SELECT (COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT s.superhero_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Male'\nAND s.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hp.hero_id) \nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nAND ha.attribute_value = (\n    SELECT MAX(ha2.attribute_value)\n    FROM hero_attribute ha2\n    JOIN attribute a2 ON ha2.attribute_id = a2.id\n    WHERE a2.attribute_name = 'strength'\n)\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE p.publisher_name = 'Dark Horse Comics'\nAND a.attribute_name = 'durability'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT c1.colour AS eyes, c2.colour AS hair, c3.colour AS skin\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nJOIN colour c3 ON s.skin_colour_id = c3.id\nWHERE g.gender = 'Female' \nAND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.eye_colour_id = s.hair_colour_id \nAND s.hair_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (SUM(CASE WHEN c.colour = 'Blue' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN colour c ON s.skin_colour_id = c.id\nWHERE g.gender = 'Female';\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) \nFROM hero_power hp\nJOIN superhero s ON hp.hero_id = s.id\nWHERE s.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT s.height_cm\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour eye_colour ON s.eye_colour_id = eye_colour.id\nJOIN colour hair_colour ON s.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT s.superhero_name\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Strength' \nAND ha.attribute_value = (\n    SELECT MAX(ha2.attribute_value)\n    FROM hero_attribute ha2\n    JOIN attribute a2 ON ha2.attribute_id = a2.id\n    WHERE a2.attribute_name = 'Strength'\n)\t----- bird -----\tsuperhero",
    "281": "SELECT \n    (COUNT(CASE WHEN g.gender = 'Female' AND p.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / \n     COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END)) AS percentage\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference;\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height FROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour eye_colour ON s.eye_colour_id = eye_colour.id\nJOIN colour hair_colour ON s.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' \nAND hair_colour.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT (COUNT(CASE WHEN c.colour = 'Blue' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_blue_eyes\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'Blue' OR c.id = 7;\t----- bird -----\tsuperhero",
    "290": "SELECT \n(SUM(CASE WHEN g.gender = 'Male' THEN 1 ELSE 0 END) * 1.0) / \n(SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) * 1.0) AS ratio\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender IN ('Male', 'Female');\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT SUM(CASE WHEN T2.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.eye_colour_id = 1 THEN 1 ELSE 0 END) AS difference\nFROM superhero T2\nWHERE T2.weight_kg IS NULL OR T2.weight_kg = 0\nAND T2.eye_colour_id IN (1, 7)\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero s\nJOIN colour c ON s.skin_colour_id = c.id\nJOIN alignment a ON s.alignment_id = a.id\nWHERE c.colour = 'Green' \nAND a.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Wind Control'\nORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN gender g ON s.gender_id = g.id\nWHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT \n  (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') - \n  (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') AS difference\nFROM dual;\t----- bird -----\tsuperhero",
    "297": "SELECT u1.DisplayName\nFROM users u1\nJOIN users u2 ON u1.Reputation > u2.Reputation\nWHERE u1.DisplayName = 'Harlan' OR u1.DisplayName = 'Jarrod Dixon'\nORDER BY u1.Reputation DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE YEAR(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) \nFROM users \nWHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Age > 65 AND p.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body\nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nWHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT \n    (COUNT(CASE WHEN u.Age > 65 THEN 1 END) * 100.0 / COUNT(p.Id)) AS percentage\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.UserId = 3025\nAND c.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT p.ClosedDate IS NULL AS well_finished\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 23853 \nAND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (\n    SELECT Id \n    FROM users \n    WHERE DisplayName = 'Tiago Pasqualini'\n);\t----- bird -----\tcodebase_community",
    "310": "SELECT u.DisplayName\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT \n    (SELECT COUNT(p.Id) FROM posts p WHERE p.OwnerUserId = 24) / \n    (SELECT COUNT(v.Id) FROM votes v WHERE v.UserId = 24) AS post_to_vote_ratio;\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT u.DisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data?';\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\nAND c.UserId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nJOIN users u ON v.UserId = u.Id\nWHERE v.BountyAmount = 50\nAND p.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, c.Text, AVG(p.ViewCount) as AverageViewCount\nFROM posts p\nJOIN postLinks pl ON p.Id = pl.PostId\nJOIN tags t ON pl.RelatedPostId = t.Id\nLEFT JOIN comments c ON p.Id = c.PostId\nWHERE t.TagName = '<humor>'\nGROUP BY p.Id, p.Title, c.Text;\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) \nFROM (\n    SELECT UserId \n    FROM badges \n    GROUP BY UserId \n    HAVING COUNT(Name) > 5\n) AS user_badge_counts;\t----- bird -----\tcodebase_community",
    "321": "SELECT u.Id\nFROM users u\nJOIN postHistory ph ON u.Id = ph.UserId\nGROUP BY u.Id\nHAVING COUNT(DISTINCT ph.PostId) = COUNT(ph.Id)\nAND u.Views >= 1000;\t----- bird -----\tcodebase_community",
    "322": "SELECT \n    ABS(\n        (COUNT(CASE WHEN YEAR(Date) = 2010 THEN 1 END) * 100.0 / COUNT(*)) -\n        (COUNT(CASE WHEN YEAR(Date) = 2011 THEN 1 END) * 100.0 / COUNT(*))\n    ) AS percentage_difference\nFROM badges\nWHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) AS avg_up_votes, AVG(u.Age) AS avg_age\nFROM users u\nJOIN (\n    SELECT OwnerUserId\n    FROM posts\n    GROUP BY OwnerUserId\n    HAVING COUNT(Id) > 10\n) p ON u.Id = p.OwnerUserId;\t----- bird -----\tcodebase_community",
    "324": "SELECT \n    (COUNT(CASE WHEN YEAR(CreationDate) = 2010 THEN Id END) / \n     COUNT(CASE WHEN YEAR(CreationDate) = 2011 THEN Id END)) AS vote_ratio\nFROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT p.Title, SUM(p.ViewCount) as TotalViews\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY p.Title\nORDER BY TotalViews DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT t.TagName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nJOIN (\n    SELECT PostId, TRIM(BOTH '<>' FROM SUBSTRING_INDEX(SUBSTRING_INDEX(p.Tags, '><', numbers.n), '><', -1)) AS TagName\n    FROM posts p\n    JOIN (\n        SELECT 1 n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5\n        UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10\n    ) numbers ON CHAR_LENGTH(p.Tags) - CHAR_LENGTH(REPLACE(p.Tags, '><', '')) >= numbers.n - 1\n    WHERE p.CommentCount = 0\n) t ON p.Id = t.PostId\nWHERE u.DisplayName = 'Mark Meckes'\nAND p.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT \n    (COUNT(CASE WHEN t.TagName = 'r' THEN p.Id END) * 100.0 / COUNT(p.Id)) AS percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nJOIN \n    postTags pt ON p.Id = pt.PostId\nJOIN \n    tags t ON pt.TagId = t.Id\nWHERE \n    u.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "329": "SELECT \n    (SELECT SUM(p.ViewCount) \n     FROM posts p \n     JOIN users u ON p.OwnerUserId = u.Id \n     WHERE u.DisplayName = 'Mornington') \n    - \n    (SELECT SUM(p.ViewCount) \n     FROM posts p \n     JOIN users u ON p.OwnerUserId = u.Id \n     WHERE u.DisplayName = 'Amos') AS difference;\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(pl.Id) / 12 AS average_monthly_links\nFROM postLinks pl\nJOIN posts p ON pl.PostId = p.Id\nWHERE YEAR(pl.CreationDate) = 2010\nAND p.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) \nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Autobiographer'\nORDER BY b.Date ASC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id) \nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom' \nAND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreaionDate) = 2010\nORDER BY p.FavoriteCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT \n    (COUNT(CASE WHEN YEAR(p.CreaionDate) = 2011 AND u.Reputation > 1000 THEN 1 END) * 100.0 / COUNT(p.Id)) AS percentage\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE PostId = (\n    SELECT Id \n    FROM posts \n    WHERE Score = (\n        SELECT MAX(Score) \n        FROM posts\n    ) \n    LIMIT 1\n)\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text, c.CreationDate, u.DisplayName\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN users u ON c.UserId = u.Id\nWHERE p.Title = 'Analysing wind data with R'\nORDER BY c.CreationDate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    (COUNT(CASE WHEN p.Score > 50 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId\nFROM tags\nWHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nWHERE PostId IN (\n    SELECT Id \n    FROM posts \n    WHERE CommentCount = 1\n) \nAND Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT \n    (COUNT(CASE WHEN u.UpVotes = 0 THEN c.UserId END) * 100.0 / COUNT(c.UserId)) AS percentage\nFROM \n    comments c\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": "SELECT id, name, cardKingdomFoilId, cardKingdomId\nFROM cards\nWHERE cardKingdomFoilId IS NOT NULL\nAND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT c.id, c.name\nFROM cards c\nWHERE c.borderColor = 'borderless'\nAND c.cardKingdomFoilId IS NOT NULL\nAND c.cardKingdomId IS NOT NULL\nAND c.cardKingdomId <> ''\nAND c.cardKingdomFoilId <> '';\t----- bird -----\tcard_games",
    "348": "SELECT c.name\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'mythic'\nAND l.format = 'gladiator'\nAND l.status = 'Banned';\t----- bird -----\tcard_games",
    "349": "SELECT c.uuid, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types = 'Artifact'\n  AND c.side IS NULL\n  AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE (c.power = '*' OR c.power IS NULL)\nAND l.format = 'commander'\nAND l.status = 'Legal';\t----- bird -----\tcard_games",
    "351": "SELECT c.id, c.name, r.text AS ruling_text, c.hasContentWarning\nFROM cards c\nLEFT JOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele'\nAND c.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, c.isPromo\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.uuid, c.name, c.artist, c.isPromo\nORDER BY COUNT(r.id) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT (COUNT(CASE WHEN language = 'Chinese Simplified' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM foreign_data;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT r.text\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT (COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_borderless FROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT \n    (COUNT(CASE WHEN fd.language = 'French' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_french_story_spotlight\nFROM \n    cards c\nJOIN \n    foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE `originalType` = 'Summon - Angel' \nAND `subtypes` != 'Angel' \nAND `subtypes` IS NOT NULL;\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Banned' AND c.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT DISTINCT c.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.originalType = 'Artifact'\nAND c.colors = 'B'\nAND fd.language IS NOT NULL\nAND fd.language != 'English';\n```\t----- bird -----\tcard_games",
    "363": "SELECT manaCost\nFROM cards\nWHERE layout = 'normal'\nAND frameVersion = '2003'\nAND borderColor = 'black'\nAND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT \n    (SUM(CASE WHEN c.isStorySpotlight = 1 AND c.isTextless = 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_story_spotlight_no_textbox\nFROM cards c;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE s.block = 'Commander' \nAND st.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT fd.type\nFROM foreign_data fd\nWHERE fd.language = 'German'\nAND fd.type IS NOT NULL\nAND fd.type != '';\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') \nAND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN rulings r ON c.uuid = r.uuid\nWHERE l.format = 'premodern'\nAND r.text = 'This is a triggered mana ability.'\nAND c.side IS NULL;\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'French'\nAND c.type = 'Creature'\nAND c.layout = 'normal'\nAND c.borderColor = 'black'\nAND c.artist = 'Matthew D. Wilson';\t----- bird -----\tcard_games",
    "370": "SELECT st.language\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.baseSetSize = 180\nAND s.block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": "SELECT \n    (COUNT(CASE WHEN c.hasContentWarning = 0 THEN 1 END) * 100.0 / COUNT(c.id)) AS percentage\nFROM \n    cards c\nJOIN \n    legalities l ON c.uuid = l.uuid\nWHERE \n    l.format = 'commander' \n    AND l.status = 'legal';\t----- bird -----\tcard_games",
    "372": "SELECT \n    (COUNT(CASE WHEN fd.language = 'French' AND (c.power IS NULL OR c.power = '*') THEN 1 END) * 100.0 / \n     COUNT(CASE WHEN c.power IS NULL OR c.power = '*' THEN 1 END)) AS percentage\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.power IS NULL OR c.power = '*';\t----- bird -----\tcard_games",
    "373": "SELECT fd.language\nFROM foreign_data fd\nWHERE fd.multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) / COUNT(*)) * 100 AS proportion\nFROM cards;\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT st.language\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.mcmName = 'Archenemy' AND s.code = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT fd.language\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE c.name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost\nFROM cards\nWHERE name IN ('Serra Angel', 'Shrine Keeper')\nORDER BY convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.language = 'Italian'\nAND s.id = (\n    SELECT DISTINCT c.id\n    FROM cards c\n    WHERE c.name = 'Ancestor''s Chosen'\n)\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS(\n    SELECT 1\n    FROM cards c\n    JOIN foreign_data fd ON c.uuid = fd.uuid\n    WHERE c.name = 'Ancestor''s Chosen'\n    AND fd.language = 'Korean'\n) AS has_korean_version;\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.translation = 'Hauptset Zehnte Edition'\nAND c.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT st.translation\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.name = 'Eighth Edition' AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT s.mtgoCode IS NOT NULL AS appeared_on_mtgo\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.name = 'Angel of Mercy'\nLIMIT 1;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) \nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ice Age' \nAND st.language = 'Italian' \nAND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT s.code, s.name, s.isForeignOnly\nFROM sets s\nJOIN cards c ON s.code = c.setCode\nWHERE c.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) \nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.language = 'Italian' \nAND st.translation IS NOT NULL\nAND s.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT c.artist\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\nAND c.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards \nJOIN sets ON cards.setCode = sets.code \nWHERE sets.name = 'Coldsnap' \nAND cards.convertedManaCost > 5 \nAND (cards.power = '*' OR cards.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavorText\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE c.name = 'Ancestor''s Chosen'\nAND fd.language = 'Italian';\t----- bird -----\tcard_games",
    "389": "SELECT r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap' AND r.language = 'Italian'\nAND r.text IS NOT NULL;\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\n  AND fd.language = 'Italian'\n  AND c.convertedManaCost = (\n    SELECT MAX(c2.convertedManaCost)\n    FROM cards c2\n    JOIN sets s2 ON c2.setCode = s2.code\n    WHERE s2.name = 'Coldsnap'\n  );\t----- bird -----\tcard_games",
    "391": "SELECT (SUM(CASE WHEN c.convertedManaCost = 7 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT (SUM(CASE WHEN c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "393": "SELECT l.format, GROUP_CONCAT(c.name) AS card_names\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\nGROUP BY l.format\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecRank = 1\nAND l.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN legalities l ON c.uuid = l.uuid\nWHERE s.name = 'Hour of Devastation'\nAND l.status = 'Legal'\nORDER BY c.name, l.format;\t----- bird -----\tcard_games",
    "396": "SELECT DISTINCT s.name\nFROM sets s\nJOIN set_translations st1 ON s.code = st1.setCode\nJOIN set_translations st2 ON s.code = st2.setCode\nWHERE st1.language NOT LIKE '%Japanese%'\nAND st2.language = 'Korean'\nAND s.name IS NOT NULL;\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT c.frameVersion, c.name\nFROM cards c\nWHERE c.artist = 'Allen Williams'\nAND c.id IN (\n    SELECT l.id\n    FROM legalities l\n    WHERE l.status = 'Banned'\n)\nUNION\nSELECT DISTINCT c.frameVersion, c.name\nFROM cards c\nWHERE c.artist = 'Allen Williams'\nAND c.id NOT IN (\n    SELECT l.id\n    FROM legalities l\n    WHERE l.status = 'Banned'\n);\t----- bird -----\tcard_games",
    "398": "SELECT bond_type\nFROM bond\nGROUP BY bond_type\nORDER BY COUNT(bond_type) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) as average_oxygen_atoms\nFROM (\n    SELECT m.molecule_id, COUNT(a.atom_id) as oxygen_count\n    FROM molecule m\n    JOIN bond b ON m.molecule_id = b.molecule_id\n    JOIN connected c ON b.bond_id = c.bond_id\n    JOIN atom a ON c.atom_id = a.atom_id\n    WHERE b.bond_type = '-' AND a.element = 'o'\n    GROUP BY m.molecule_id\n) as molecule_oxygen_counts\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(CASE WHEN b.bond_type = '-' THEN 1 ELSE 0 END) AS average_single_bonds\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label = '+'\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '#' \nAND m.label = '+'\t----- bird -----\ttoxicology",
    "402": "SELECT (SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT a.atom_id)) AS percentage\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "403": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE c.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE LOWER(a.element) = 'h'\nGROUP BY label\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '-'\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20')\n   OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) \nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nWHERE a.element IN ('i', 's') \nAND b.bond_type = '-'\nAND a.atom_id IN (SELECT atom_id FROM connected)\nAND a.atom_id IN (SELECT atom_id2 FROM connected)\t----- bird -----\ttoxicology",
    "409": "SELECT \n    (COUNT(DISTINCT CASE WHEN a.element != 'f' THEN m.molecule_id END) * 100.0 / \n     COUNT(DISTINCT m.molecule_id)) AS percentage\nFROM molecule m\nLEFT JOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+';\t----- bird -----\ttoxicology",
    "410": "SELECT \n    CASE \n        WHEN COUNT(b.bond_id) = 0 THEN 0\n        ELSE (SUM(CASE WHEN b.bond_type = '#' THEN 1 ELSE 0 END) * 100.0) / COUNT(b.bond_id)\n    END AS percent\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE m.label = '+'\t----- bird -----\ttoxicology",
    "411": "SELECT DISTINCT a.element\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id = 'TR000'\nAND a.element IS NOT NULL\nORDER BY a.element\nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT \n    ROUND(\n        (SUM(CASE WHEN b.bond_type = '=' THEN 1 ELSE 0 END) * 100.0) / COUNT(b.bond_id), \n        5\n    ) AS percentage\nFROM bond b\nWHERE b.molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND((SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(molecule_id)), 3) AS percent\nFROM molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) * 100.0 / COUNT(a.atom_id), 4) AS percent\nFROM atom a\nWHERE a.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT a.element, m.label \nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE m.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT \n    bond_type,\n    COUNT(*) as bond_count\nFROM bond \nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1;\n\nSELECT \n    CASE \n        WHEN EXISTS (\n            SELECT 1 \n            FROM bond b1 \n            JOIN atom a1 ON b1.molecule_id = a1.molecule_id \n            WHERE b1.molecule_id = 'TR010' \n            AND (a1.element = 'Cl' OR a1.element = 'Br' OR a1.element = 'I')\n        ) THEN 'Yes'\n        ELSE 'No'\n    END as is_carcinogenic;\t----- bird -----\ttoxicology",
    "417": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON c.atom_id = b.molecule_id\nWHERE m.label = '-'\nAND b.bond_type = '-'\nORDER BY m.molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) \nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12')\nAND b.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) \nFROM connected \nWHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT DISTINCT a.element\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT b.bond_id\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a1.element = 'p' AND a2.element = 'n') OR (a1.element = 'n' AND a2.element = 'p')\t----- bird -----\ttoxicology",
    "424": "SELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = ' = '\nGROUP BY m.molecule_id, m.label\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) as average_bonds\nFROM (\n    SELECT a.atom_id, COUNT(c.bond_id) as bond_count\n    FROM atom a\n    LEFT JOIN connected c ON a.atom_id = c.atom_id\n    WHERE a.element = 'i'\n    GROUP BY a.atom_id\n) as atom_bond_counts;\t----- bird -----\ttoxicology",
    "426": "SELECT DISTINCT a.element\nFROM atom a\nWHERE a.atom_id NOT IN (\n    SELECT atom_id FROM connected\n    UNION\n    SELECT atom_id2 FROM connected\n)\t----- bird -----\ttoxicology",
    "427": "SELECT a.atom_id\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE b.molecule_id = 'TR041' \nAND b.bond_type = '#'\t----- bird -----\ttoxicology",
    "428": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT a.element\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nWHERE b.bond_type = '#'\t----- bird -----\ttoxicology",
    "430": "SELECT \n    ROUND(\n        (SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0) / \n        COUNT(b.bond_id), \n        5\n    ) AS percentage\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*) \nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '#' \nAND (a.element = 'p' OR a.element = 'br')\t----- bird -----\ttoxicology",
    "432": "SELECT (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(a.atom_id)) AS percent\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT a.element \nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT \n    (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT m.molecule_id)) AS percentage\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT SUM(CAST(SUBSTRING(a.atom_id, 7, 1) AS UNSIGNED) = 4) as toxicology_tally\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+' AND SUBSTRING(a.atom_id, 7, 1) = '4'\t----- bird -----\ttoxicology",
    "436": "SELECT \n    m.label,\n    CAST(SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(a.element) AS ratio\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id = 'TR006'\nGROUP BY m.label;\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE s.AvgScrMath > 400 \nAND sc.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode\nFROM frpm\nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(f.`Percent (%) Eligible Free (Ages 5-17)`) AS highest_eligible_free_rate\nFROM satscores s\nJOIN frpm f ON s.`cds` = f.`CDSCode`\nWHERE (s.`NumGE1500` / s.`NumTstTakr`) > 0.3\nAND s.`NumTstTakr` > 0\nAND f.`Enrollment (Ages 5-17)` > 0;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.`sname`, s.`cname`, s.`AvgScrWrite`, s.`cds`\nFROM satscores s\nJOIN schools sc ON s.`cds` = sc.`CDSCode`\nWHERE s.`AvgScrWrite` > 499 AND sc.`CharterNum` IS NOT NULL\nORDER BY s.`AvgScrWrite` DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.`School`, CONCAT(s.`Street`, ' ', s.`StreetAbr`) AS FullAddress\nFROM frpm f\nJOIN schools s ON f.`CDSCode` = s.`CDSCode`\nWHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT DISTINCT s.`School`\nFROM schools s\nJOIN frpm f ON s.`CDSCode` = f.`CDSCode`\nJOIN satscores ss ON s.`CDSCode` = ss.`cds`\nWHERE f.`Percent (%) Eligible Free (K-12)` > 0.1\nAND ss.`NumGE1500` > 0;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.`School`, s.`FundingType`\nFROM schools s\nJOIN satscores sc ON s.`CDSCode` = sc.`cds`\nWHERE s.`County` = 'RIVERSIDE'\nGROUP BY s.`School`, s.`FundingType`\nHAVING AVG(sc.`AvgScrMath`) > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT \n    s.`School`, \n    s.`Street`, \n    s.`City`, \n    s.`State`, \n    s.`Zip`\nFROM \n    schools s\nJOIN \n    frpm f ON s.`CDSCode` = f.`CDSCode`\nWHERE \n    s.`County` = 'Monterey' \n    AND s.`School Type` = 'High School'\n    AND f.`FRPM Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "446": "SELECT \n    s.`School` AS school_name,\n    s.`Phone` AS communication_number,\n    sc.`AvgScrWrite` AS average_writing_score\nFROM \n    schools s\nJOIN \n    satscores sc ON s.`CDSCode` = sc.`cds`\nWHERE \n    (s.`OpenDate` > '1991-12-31' OR s.`ClosedDate` < '2000-01-01')\n    AND sc.`AvgScrWrite` IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.`School`, s.`DOCType`\nFROM schools s\nJOIN frpm f ON s.`CDSCode` = f.`CDSCode`\nWHERE f.`FundingType` = 'Locally Funded'\nAND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > (\n    SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n    FROM frpm f2\n    JOIN schools s2 ON f2.`CDSCode` = s2.`CDSCode`\n    WHERE f2.`FundingType` = 'Locally Funded'\n)\nAND s.`StatusType` = 'Active';\t----- bird -----\tcalifornia_schools",
    "448": "SELECT \n    s.`School Name`,\n    (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) AS eligible_free_rate\nFROM frpm f\nJOIN schools s ON f.`CDSCode` = s.`CDSCode`\nWHERE f.`Enrollment (K-12)` IS NOT NULL\nORDER BY f.`Enrollment (K-12)` DESC\nLIMIT 10;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT \n    s.`CDSCode`,\n    (f.`FRPM Count (K-12)` / f.`Enrollment (K-12)`) AS frpm_rate\nFROM \n    frpm f\nJOIN \n    schools s ON f.`CDSCode` = s.`CDSCode`\nWHERE \n    s.`DOC` = '66'\n    AND f.`Enrollment (K-12)` IS NOT NULL\n    AND f.`FRPM Count (K-12)` IS NOT NULL\nORDER BY \n    f.`FRPM Count (K-12)` DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State\nFROM schools s\nJOIN (\n    SELECT cds, NumGE1500, NumTstTakr,\n           CASE \n               WHEN NumTstTakr = 0 THEN 0 \n               ELSE NumGE1500 / NumTstTakr \n           END AS excellence_rate\n    FROM satscores\n) AS scores ON s.CDSCode = scores.cds\nORDER BY scores.excellence_rate ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.`AdmFName1`, s.`AdmLName1`, s.`AdmFName2`, s.`AdmLName2`, s.`AdmFName3`, s.`AdmLName3`\nFROM schools s\nJOIN satscores sc ON s.`CDSCode` = sc.`cds`\nWHERE sc.`NumGE1500` = (SELECT MAX(`NumGE1500`) FROM satscores)\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(s.NumTstTakr) AS average_test_takers\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE sc.OpenDate >= '1980-01-01' AND sc.OpenDate <= '1980-12-31'\nAND sc.County = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.Phone\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.`CDSCode`\nJOIN satscores sat ON s.CDSCode = sat.cds\nWHERE f.`District Name` = 'Fresno Unified'\nORDER BY sat.AvgScrRead ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT sname\nFROM (\n    SELECT s.sname,\n           s.County,\n           AVG(sc.AvgScrRead) as avg_reading_score,\n           ROW_NUMBER() OVER (PARTITION BY s.County ORDER BY AVG(sc.AvgScrRead) DESC) as rank_in_county\n    FROM schools s\n    JOIN satscores sc ON s.CDSCode = sc.cds\n    WHERE s.Virtual = 'F'\n    GROUP BY s.sname, s.County\n) ranked_schools\nWHERE rank_in_county <= 5;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT \n    s.`School`, \n    AVG(ss.`AvgScrWrite`) AS average_writing_score\nFROM \n    schools s\nJOIN \n    satscores ss ON s.`CDSCode` = ss.`cds`\nWHERE \n    s.`AdmFName1` = 'Ricci' AND s.`AdmLName1` = 'Ulrich'\nGROUP BY \n    s.`School`;\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.`State`, SUM(f.`Enrollment (K-12)`) AS total_enrollment\nFROM schools s\nJOIN frpm f ON s.`CDSCode` = f.`CDSCode`\nWHERE s.`DOC` = '31'\nGROUP BY s.`State`\nORDER BY total_enrollment DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12.0 AS monthly_avg_opened_schools\nFROM schools\nWHERE County = 'Alameda'\n  AND DOC = '52'\n  AND YEAR(OpenDate) = 1980\n  AND OpenDate IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SELECT COUNT(*) FROM schools WHERE DOC = 54 AND County = 'Orange') /\n    (SELECT COUNT(*) FROM schools WHERE DOC = 52 AND County = 'Orange') AS ratio;\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.`School`, s.`MailStreet` \nFROM schools s\nJOIN satscores sc ON s.`CDSCode` = sc.`cds`\nORDER BY sc.`AvgScrMath` DESC\nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Los Angeles' \nAND s.Charter = 0 \nAND (f.`Free Meal Count (K-12)` * 100 / f.`Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT s.`Enrollment (Ages 5-17)`\nFROM frpm s\nJOIN schools sc ON s.`CDSCode` = sc.`CDSCode`\nWHERE sc.`EdOpsCode` = 'SSS'\n  AND sc.`City` = 'Fremont'\n  AND s.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT \n    s.`School`, \n    (f.`FRPM Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)` * 100) AS `Percent (%) Eligible FRPM (Ages 5-17)`\nFROM \n    schools s\nJOIN \n    frpm f ON s.`CDSCode` = f.`CDSCode`\nWHERE \n    s.`County` = 'Los Angeles' \n    AND s.`GSserved` = 'K-9';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT \n    CASE \n        WHEN SUM(CASE WHEN s.County = 'San Diego' AND s.Virtual = 'F' THEN 1 ELSE 0 END) > \n             SUM(CASE WHEN s.County = 'Santa Barbara' AND s.Virtual = 'F' THEN 1 ELSE 0 END) \n        THEN 'San Diego'\n        WHEN SUM(CASE WHEN s.County = 'San Diego' AND s.Virtual = 'F' THEN 1 ELSE 0 END) < \n             SUM(CASE WHEN s.County = 'Santa Barbara' AND s.Virtual = 'F' THEN 1 ELSE 0 END) \n        THEN 'Santa Barbara'\n        ELSE 'Equal'\n    END AS CountyWithMostNonPhysicalSchools,\n    GREATEST(\n        SUM(CASE WHEN s.County = 'San Diego' AND s.Virtual = 'F' THEN 1 ELSE 0 END),\n        SUM(CASE WHEN s.County = 'Santa Barbara' AND s.Virtual = 'F' THEN 1 ELSE 0 END)\n    ) AS NumberOfNonPhysicalSchools\nFROM schools s\nWHERE s.County IN ('San Diego', 'Santa Barbara')\n  AND s.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered\nFROM schools\nWHERE Longitude = (\n    SELECT MAX(Longitude)\n    FROM schools\n)\nOR Longitude = (\n    SELECT MIN(Longitude)\n    FROM schools\n);\t----- bird -----\tcalifornia_schools",
    "465": "SELECT \n    COUNT(*) AS magnet_k8_multiple_provision_schools,\n    COUNT(DISTINCT s.`City`) AS cities_with_k8_magnet_programs,\n    s.`City`,\n    COUNT(*) AS schools_per_city\nFROM schools s\nJOIN frpm f ON s.`CDSCode` = f.`CDSCode`\nWHERE s.`Magnet` = 1 \nAND s.`GSoffered` LIKE '%K-8%'\nAND f.`NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY s.`City`;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT \n    frpm.`Percent (%) Eligible Free (K-12)`,\n    frpm.`District Code`\nFROM \n    frpm\nJOIN \n    schools ON frpm.`CDSCode` = schools.`CDSCode`\nWHERE \n    schools.`AdmFName1` = 'Alusine'\n    OR schools.`AdmFName2` = 'Alusine'\n    OR schools.`AdmFName3` = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3\nFROM schools\nWHERE County = 'San Bernardino'\n  AND City = 'San Bernardino City Unified'\n  AND OpenDate >= '2009-01-01'\n  AND OpenDate <= '2010-12-31'\n  AND SOC = '62'\n  AND DOC = '54';\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(*) \nFROM account a\nJOIN district d ON a.district_id = d.district_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE d.A3 = 'EAST BOHEMIA' \nAND t.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) \nFROM (\n    SELECT d.district_id\n    FROM district d\n    JOIN client c ON d.district_id = c.district_id\n    WHERE c.gender = 'F'\n    GROUP BY d.district_id\n    HAVING AVG(d.A11) > 6000 AND AVG(d.A11) < 10000\n) AS filtered_districts;\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M' \nAND d.A3 = 'North Bohemia' \nAND d.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT \n    a.account_id,\n    (SELECT MAX(avg_salary) - MIN(avg_salary) \n     FROM (\n         SELECT AVG(d.A11) AS avg_salary\n         FROM client c\n         JOIN disp d ON c.client_id = d.client_id\n         JOIN account a ON d.account_id = a.account_id\n         WHERE c.gender = 'F'\n         GROUP BY c.client_id\n     ) AS subquery) AS gap\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nWHERE c.gender = 'F'\nAND c.birth_date = (\n    SELECT MIN(birth_date)\n    FROM client\n    WHERE gender = 'F'\n)\nGROUP BY a.account_id\nHAVING AVG(d.A11) = (\n    SELECT MIN(avg_salary)\n    FROM (\n        SELECT AVG(d.A11) AS avg_salary\n        FROM client c\n        JOIN disp d ON c.client_id = d.client_id\n        JOIN account a ON d.account_id = a.account_id\n        WHERE c.gender = 'F'\n        GROUP BY c.client_id\n    ) AS subquery\n);\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE c.birth_date = (\n    SELECT MAX(birth_date)\n    FROM client\n)\nAND dist.A11 = (\n    SELECT MAX(A11)\n    FROM district\n    JOIN client ON district.district_id = client.district_id\n    JOIN disp ON client.client_id = disp.client_id\n    JOIN account ON disp.account_id = account.account_id\n);\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE YEAR(l.date) = 1997 AND l.status = 'A'\nAND l.amount = (\n    SELECT MIN(amount)\n    FROM loan\n    WHERE YEAR(date) = 1997 AND status = 'A'\n)\nAND EXISTS (\n    SELECT 1\n    FROM trans t\n    WHERE t.account_id = a.account_id\n    AND t.type = 'VYBER' \n    AND t.operation = 'POPLATEK TYDNE'\n)\nLIMIT 1;\t----- bird -----\tfinancial",
    "474": "SELECT a.account_id\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.duration > 12\n  AND YEAR(a.date) = 1993\n  AND l.amount = (\n    SELECT MAX(l2.amount)\n    FROM account a2\n    JOIN loan l2 ON a2.account_id = l2.account_id\n    WHERE l2.duration > 12\n      AND YEAR(a2.date) = 1993\n  )\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*) \nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F' \nAND c.birth_date < '1950-01-01' \nAND d.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": "SELECT d.A2 \nFROM client c\nJOIN account a ON c.client_id = a.account_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_clients\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE d.A3 = 'south Bohemia'\nAND d.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia');\t----- bird -----\tfinancial",
    "478": "SELECT ((MAX(CASE WHEN t.date = '1998-12-27' THEN t.balance END) - MAX(CASE WHEN t.date = '1993-03-22' THEN t.balance END)) / MAX(CASE WHEN t.date = '1993-03-22' THEN t.balance END)) * 100 AS increase_rate\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN loan l ON a.account_id = l.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE l.date = '1993-07-05'\nAND t.date IN ('1993-03-22', '1998-12-27')\nAND c.client_id = (\n    SELECT c2.client_id\n    FROM client c2\n    JOIN disp d2 ON c2.client_id = d2.client_id\n    JOIN account a2 ON d2.account_id = a2.account_id\n    JOIN loan l2 ON a2.account_id = l2.account_id\n    WHERE l2.date = '1993-07-05'\n    LIMIT 1\n);\t----- bird -----\tfinancial",
    "479": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) / SUM(amount)) * 100 AS percentage_paid_no_issue\nFROM loan;\t----- bird -----\tfinancial",
    "480": "SELECT \n    (COUNT(CASE WHEN l.status = 'C' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_running\nFROM \n    loan l\nWHERE \n    l.amount < 100000;\t----- bird -----\tfinancial",
    "481": "SELECT \n    d.district_id,\n    ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_increment_rate\nFROM \n    district d\nJOIN \n    account a ON d.district_id = a.district_id\nJOIN \n    disp di ON a.account_id = di.account_id\nJOIN \n    loan l ON a.account_id = l.account_id\nWHERE \n    l.status = 'D'\nGROUP BY \n    d.district_id, d.A12, d.A13;\t----- bird -----\tfinancial",
    "482": "SELECT d.A2, COUNT(*) as female_count\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nWHERE c.gender = 'F'\nGROUP BY d.A2\nORDER BY female_count DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) \nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.date BETWEEN '1995-01-01' AND '1997-12-31'\nAND l.amount >= 250000\nAND a.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account_id) \nFROM loan \nWHERE status IN ('C', 'D') \nAND account_id IN (\n    SELECT account_id \n    FROM account \n    WHERE district_id = 1\n);\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) \nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M' \nAND d.district_id = (\n    SELECT district_id \n    FROM district \n    ORDER BY A15 DESC \n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "486": "SELECT d.A2, SUM(t.amount) as total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ'\nAND t.date LIKE '1996-01%'\nAND t.account_id NOT IN (\n    SELECT DISTINCT account_id\n    FROM card c\n    JOIN disp d ON c.disp_id = d.disp_id\n    JOIN trans t ON d.account_id = t.account_id\n    WHERE t.type = 'VYDAJ'\n    AND t.date LIKE '1996-01%'\n)\nGROUP BY d.A2\nORDER BY total_withdrawals DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT account_id) \nFROM loan \nWHERE status IN ('C', 'D') \nAND account_id IN (\n    SELECT account_id \n    FROM account \n    WHERE district_id = 1\n);\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) \nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M' \nAND d.district_id = (\n    SELECT district_id \n    FROM district \n    ORDER BY A15 DESC \n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT t.account_id\nFROM trans t\nWHERE t.type = 'VYBER KARTOU'\nAND t.amount < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU')\nAND YEAR(t.date) = 1998;\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT a.type\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE a.type != 'OWNER'\nAND d.A11 > 8000\nAND d.A11 <= 9000;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.A15) \nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.A15 > 4000 \nAND YEAR(a.date) >= 1997\nAND d.A3 IS NOT NULL;\t----- bird -----\tfinancial",
    "492": "SELECT t.trans_id, t.date, t.amount, t.balance\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nWHERE d.client_id = 3356\nAND t.operation = 'VYBER'\nAND t.type = 'VYBER';\t----- bird -----\tfinancial",
    "493": "SELECT (COUNT(CASE WHEN c.gender = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_women\nFROM client c\nJOIN account a ON c.client_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT \n    ((SUM(CASE WHEN YEAR(l.date) = 1997 THEN l.amount ELSE 0 END) - \n      SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END)) * 100.0) / \n     SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END) AS growth_rate\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.gender = 'M' \n  AND YEAR(l.date) IN (1996, 1997);\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(*) AS statement_requests, SUM(t.amount) AS total_debit_amount\nFROM trans t\nWHERE t.account_id = 3 AND t.type = 'VYBER' AND t.k_symbol = 'VYBER' AND t.amount = 3539;\t----- bird -----\tfinancial",
    "496": "SELECT \n    (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_clients_with_weekly_statements\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.operation = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE c.gender = 'F'\nORDER BY c.birth_date ASC, dist.A11 ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "498": "SELECT AVG(l.amount) AS average_loan_amount\nFROM loan l\nJOIN trans t ON l.account_id = t.account_id\nWHERE l.status IN ('C', 'D')\nAND t.operation = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": "SELECT DISTINCT c.client_id, TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE ca.type = 'gold' AND d.type = 'OWNER';\t----- bird -----\tfinancial"
}