{
    "0": "SELECT (SUM(CASE WHEN `Currency` = 'EUR' THEN 1 ELSE 0 END) * 1.0) / NULLIF(SUM(CASE WHEN `Currency` = 'CZK' THEN 1 ELSE 0 END), 0) AS ratio\nFROM customers;\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT \n    c.CustomerID,\n    SUM(ym.Consumption) AS TotalConsumption\nFROM \n    yearmonth ym\nINNER JOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    ym.Date BETWEEN '201201' AND '201212'\n    AND c.Segment = 'LAM'\nGROUP BY \n    c.CustomerID\nORDER BY \n    TotalConsumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption)/12 AS avg_monthly_consumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE LEFT(ym.Date, 4) = '2013'\n  AND c.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT\n    SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) -\n    SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS Difference\nFROM\n    yearmonth ym\nINNER JOIN\n    customers c ON ym.CustomerID = c.CustomerID\nWHERE\n    ym.Date LIKE '2012%';\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT LEFT(y.Date, 4) AS year,\n       SUM(y.Consumption) AS total_consumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Currency = 'CZK'\nGROUP BY year\nORDER BY total_consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT \n    SUBSTRING(y.Date,5,2) AS PeakMonth,\n    SUM(y.Consumption) AS TotalConsumption\nFROM \n    yearmonth y\nINNER JOIN \n    customers c ON y.CustomerID = c.CustomerID\nWHERE \n    c.Segment = 'SME'\n    AND y.Date BETWEEN '201301' AND '201312'\nGROUP BY \n    PeakMonth\nORDER BY \n    TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT\n    ((SELECT min_consumption/12 FROM min_per_segment WHERE Segment='SME') -\n     (SELECT min_consumption/12 FROM min_per_segment WHERE Segment='LAM')) AS diff_SME_LAM,\n    ((SELECT min_consumption/12 FROM min_per_segment WHERE Segment='LAM') -\n     (SELECT min_consumption/12 FROM min_per_segment WHERE Segment='KAM')) AS diff_LAM_KAM,\n    ((SELECT min_consumption/12 FROM min_per_segment WHERE Segment='KAM') -\n     (SELECT min_consumption/12 FROM min_per_segment WHERE Segment='SME')) AS diff_KAM_SME\nFROM\n    (SELECT Segment, MIN(total_consumption) AS min_consumption\n     FROM\n         (SELECT c.Segment AS Segment,\n                 ym.CustomerID,\n                 SUM(ym.Consumption) AS total_consumption\n          FROM yearmonth ym\n          JOIN customers c ON ym.CustomerID = c.CustomerID\n          WHERE ym.Date LIKE '2013%'\n          GROUP BY c.Segment, ym.CustomerID) t\n     GROUP BY Segment) min_per_segment;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT 'biggest' AS type, segment, perc_increase\nFROM (\n    SELECT c.Segment AS segment,\n           ((SUM(CASE WHEN LEFT(y.Date,4)='2013' THEN y.Consumption END) -\n             SUM(CASE WHEN LEFT(y.Date,4)='2012' THEN y.Consumption END)) /\n            SUM(CASE WHEN LEFT(y.Date,4)='2013' THEN y.Consumption END)) * 100\n           ) AS perc_increase\n    FROM yearmonth y\n    JOIN customers c ON y.CustomerID = c.CustomerID\n    GROUP BY c.Segment\n) t\nWHERE c.Segment IN ('SME','LAM','KAM')\nORDER BY perc_increase DESC\nLIMIT 1\n\nUNION ALL\n\nSELECT 'lowest' AS type, segment, perc_increase\nFROM (\n    SELECT c.Segment AS segment,\n           ((SUM(CASE WHEN LEFT(y.Date,4)='2013' THEN y.Consumption END) -\n             SUM(CASE WHEN LEFT(y.Date,4)='2012' THEN y.Consumption END)) /\n            SUM(CASE WHEN LEFT(y.Date,4)='2013' THEN y.Consumption END)) * 100\n           ) AS perc_increase\n    FROM yearmonth y\n    JOIN customers c ON y.CustomerID = c.CustomerID\n    GROUP BY c.Segment\n) t\nWHERE c.Segment IN ('SME','LAM','KAM')\nORDER BY perc_increase ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\n  AND SUBSTRING(Date, 1, 4) = '2013'\n  AND SUBSTRING(Date, 5, 2) BETWEEN '08' AND '11';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT\n  (SELECT COUNT(*) FROM gasstations WHERE Country='CZE' AND Segment='discount')\n  - (SELECT COUNT(*) FROM gasstations WHERE Country='SVK' AND Segment='discount')\n  AS Difference;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT\n    CASE \n        WHEN (SUM(CASE WHEN c.Currency = 'CZK' THEN t.Amount * t.Price ELSE 0 END) -\n              SUM(CASE WHEN c.Currency = 'EUR' THEN t.Amount * t.Price ELSE 0 END)) > 0\n        THEN 'Yes'\n        ELSE 'No'\n    END AS MoreInCZK,\n    (SUM(CASE WHEN c.Currency = 'CZK' THEN t.Amount * t.Price ELSE 0 END) -\n     SUM(CASE WHEN c.Currency = 'EUR' THEN t.Amount * t.Price ELSE 0 END)) AS Difference\nFROM\n    transactions_1k t\nJOIN\n    customers c ON t.CustomerID = c.CustomerID\nWHERE\n    c.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (COUNT(DISTINCT CASE WHEN ym.Consumption > 46.73 THEN ym.CustomerID END) * 100.0 / COUNT(DISTINCT ym.CustomerID)) AS percent\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT ROUND(100 * SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) / COUNT(*), 2) AS percentage\nFROM yearmonth\nWHERE Date LIKE '201202%';\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT SUBSTRING(Date, 6, 2) AS Month, SUM(Consumption) AS HighestConsumption\nFROM yearmonth\nWHERE SUBSTRING(Date, 1, 4) = '2012'\nGROUP BY Month\nORDER BY HighestConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT p.Description\nFROM products p\nJOIN transactions_1k t ON p.ProductID = t.ProductID\nJOIN yearmonth y ON y.CustomerID = t.CustomerID\nWHERE LEFT(y.Date,4) = '2013'\n  AND SUBSTRING(y.Date,5,2) = '09';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.Country\nFROM gasstations g\nJOIN transactions_1k t ON g.GasStationID = t.GasStationID\nWHERE YEAR(t.Date) = 2013 AND MONTH(t.Date) = 6;\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT ym.CustomerID) AS num_customers\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Currency = 'EUR' AND ym.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT p.`Description`\nFROM transactions_1k t\nJOIN gasstations g ON t.`GasStationID` = g.`GasStationID`\nJOIN products p ON t.`ProductID` = p.`ProductID`\nWHERE g.`Country` = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT t.`Time`\nFROM `transactions_1k` AS t\nJOIN `gasstations` AS g\n  ON t.`GasStationID` = g.`GasStationID`\nWHERE g.`ChainID` = 11;\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) AS transaction_count\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE' \n  AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency\nFROM customers c\nJOIN transactions_1k t ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24'\n  AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment\nFROM customers AS c\nJOIN transactions_1k AS t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) AS num_transactions\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-26'\n  AND t.Time BETWEEN '08:00:00' AND '09:00:00'\n  AND g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT\n    c.Segment AS Nationality\nFROM\n    customers c\nJOIN\n    transactions_1k t\nON\n    c.CustomerID = t.CustomerID\nWHERE\n    t.Amount = 548.4\n    AND t.Date = '2012-08-24';\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT \n    (COUNT(DISTINCT CASE WHEN c.Currency = 'EUR' THEN t.CustomerID END) * 1.0 /\n     COUNT(DISTINCT t.CustomerID)) * 100 AS percentage\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT\n    (SUM(CASE WHEN YEAR(`Date`) = 2012 THEN `Consumption` ELSE 0 END) -\n     SUM(CASE WHEN YEAR(`Date`) = 2013 THEN `Consumption` ELSE 0 END))\n    /\n    SUM(CASE WHEN YEAR(`Date`) = 2012 THEN `Consumption` ELSE 0 END) AS consumption_decrease_rate\nFROM `yearmonth`\nWHERE `CustomerID` = (\n        SELECT `CustomerID`\n        FROM `transactions_1k`\n        WHERE `Date` = '2012-08-25'\n          AND `Price` = 634.8\n      )\nGROUP BY `CustomerID`;\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT\n    (SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) / COUNT(*) * 100) AS premium_percentage\nFROM\n    gasstations\nWHERE\n    Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT\n    SUM(Amount) AS TotalSpent,\n    SUM(CASE WHEN DATE_FORMAT(`Date`, '%Y%m') = '201201' THEN Amount ELSE 0 END) AS Jan2012Spent\nFROM transactions_1k\nWHERE `CustomerID` = 38508;\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.CustomerID,\n       SUM(t.Price)/SUM(t.Amount) AS AvgPricePerItem,\n       c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nGROUP BY c.CustomerID, c.Currency\nORDER BY SUM(t.Price) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT y.CustomerID, y.Consumption\nFROM yearmonth AS y\nWHERE y.Date = '201208'\n  AND y.CustomerID IN (\n        SELECT DISTINCT t.CustomerID\n        FROM transactions_1k AS t\n        WHERE t.ProductID = 5\n          AND t.Amount > 0\n          AND (t.Price / t.Amount) > 29.00\n      );\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT `major_name`\nFROM `member`\nJOIN `major` ON `member`.`link_to_major` = `major`.`major_id`\nWHERE `member`.`first_name` = 'Angela'\n  AND `member`.`last_name` = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) AS medium_tshirt_count\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON e.event_id = a.link_to_event\nWHERE e.event_name = 'Women''s Soccer'\n  AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) AS meeting_event_count\nFROM (\n    SELECT e.event_id\n    FROM event e\n    JOIN attendance a ON e.event_id = a.link_to_event\n    WHERE e.type = 'Meeting'\n    GROUP BY e.event_id\n    HAVING COUNT(DISTINCT a.link_to_member) > 10\n) AS sub;\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type <> 'Fundraiser'\nGROUP BY e.event_id, e.event_name\nHAVING COUNT(*) > 20;\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(i.amount) AS total_amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": "SELECT member.first_name, member.last_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT\n  CASE\n    WHEN COUNT(*) = SUM(CASE WHEN exp.approved = 'True' THEN 1 ELSE 0 END) THEN 'True'\n    ELSE 'False'\n  END AS all_approved\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense exp ON b.budget_id = exp.link_to_budget\nWHERE e.event_name = 'October Meeting'\n  AND e.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(expense.cost) AS avg_cost\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Elijah'\n  AND member.last_name = 'Allen'\n  AND SUBSTRING(expense.expense_date, 6, 2) IN ('09', '10');\t----- bird -----\tstudent_club",
    "38": "SELECT (SUM(CASE WHEN YEAR(e.event_date) = 2019 THEN b.spent ELSE 0 END) - SUM(CASE WHEN YEAR(e.event_date) = 2020 THEN b.spent ELSE 0 END)) AS difference\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event;\t----- bird -----\tstudent_club",
    "39": "SELECT notes\nFROM income\nWHERE date_received = '2019-09-14' AND source = 'Fundraising';\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT b.event_status\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nWHERE e.expense_description = 'Post Cards, Posters'\n  AND e.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "42": "SELECT m.major_name\nFROM member AS mem\nJOIN major AS m ON mem.link_to_major = m.major_id\nWHERE mem.first_name = 'Brent' AND mem.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) AS medium_count\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business'\n  AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.first_name = 'Connor'\n  AND m.last_name = 'Hilton'\n  AND i.source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT DIVIDE(\n    SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END),\n    SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END)\n) AS result\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_pizza_cost\nFROM expense\nWHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) AS num_cities  \nFROM zip_code  \nWHERE county = 'Orange County'  \n  AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT m.major_name\nFROM member AS mem\nJOIN major AS m ON mem.link_to_major = m.major_id\nWHERE mem.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT a.link_to_member) AS member_count\nFROM attendance AS a\nJOIN event AS e\n  ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women's Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT m.first_name, m.last_name\nFROM member AS m\nJOIN major AS j ON m.link_to_major = j.major_id\nWHERE j.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT\n    e.event_name,\n    DIVIDE(b.spent, b.amount) AS spend_to_budget_ratio\nFROM\n    event e\nINNER JOIN\n    budget b\n    ON e.event_id = b.link_to_event\nWHERE\n    e.status = 'Closed'\nORDER BY\n    spend_to_budget_ratio DESC\nLIMIT\n    1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(`spent`) AS max_spent FROM budget;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(`spent`) AS total_spent FROM budget WHERE category='Food';\t----- bird -----\tstudent_club",
    "55": "SELECT CONCAT(m.first_name,' ', m.last_name) AS full_name\nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nGROUP BY m.member_id, m.first_name, m.last_name\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT\n    m.first_name,\n    m.last_name\nFROM\n    member m\n    JOIN expense e ON m.member_id = e.link_to_member\n    JOIN budget b ON e.link_to_budget = b.budget_id\n    JOIN event ev ON b.link_to_event = ev.event_id\nWHERE\n    ev.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT\n    e.event_name,\n    ex.cost\nFROM\n    expense ex\nINNER JOIN\n    budget b\n    ON ex.link_to_budget = b.budget_id\nINNER JOIN\n    event e\n    ON b.link_to_event = e.event_id\nORDER BY\n    ex.cost ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": "SELECT \n    DIVIDE(\n        SUM(\n            CASE \n                WHEN event.event_name = 'Yearly Kickoff' THEN expense.cost \n                ELSE 0 \n            END\n        ),\n        SUM(expense.cost)\n    ) * 100 AS percentage\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id;\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) AS number_of_members\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'Advertisement'\nORDER BY b.spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT\n    CASE WHEN COUNT(*)>0 THEN 'Yes' ELSE 'No' END AS Maya_Mclean_attended\nFROM member m\nJOIN attendance a ON a.link_to_member = m.member_id\nJOIN event e ON e.event_id = a.link_to_event\nWHERE m.first_name = 'Maya'\n  AND m.last_name = 'Mclean'\n  AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "63": "SELECT e.cost\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'September Speaker'\n  AND e.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\n  AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT\n    e.expense_description AS expense_type,\n    SUM(e.cost) AS total_value\nFROM\n    expense e\n    JOIN budget b ON e.link_to_budget = b.budget_id\n    JOIN event ev ON b.link_to_event = ev.event_id\nWHERE\n    ev.event_name = 'October Meeting'\n    AND e.approved IS NOT NULL\nGROUP BY\n    e.expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT SUM(b.amount) AS total_budgeted\nFROM budget b\nJOIN event e ON e.event_id = b.link_to_event\nWHERE e.event_name = 'April Speaker';\n\nSELECT b.category, SUM(b.amount) AS category_budgeted\nFROM budget b\nJOIN event e ON e.event_id = b.link_to_event\nWHERE e.event_name = 'April Speaker'\nGROUP BY b.category\nORDER BY category_budgeted ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name, m.last_name, IFNULL(SUM(e.cost), 0) AS total_cost\nFROM member m\nLEFT JOIN expense e ON e.link_to_member = m.member_id\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member_id, m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT e.expense_description\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT type\nFROM event\nWHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, ma.department, ma.college\nFROM member AS m\nJOIN major AS ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT b.category\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.location = 'MU 215'\n  AND e.type = 'Guest Speaker'\n  AND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT \n  ROUND(DIVIDE(\n    COUNT(IF(income.amount = 50,1,NULL)),\n    COUNT(DISTINCT member.member_id)\n  ) * 100, 2) AS percentage\nFROM member\nLEFT JOIN income ON income.link_to_member = member.member_id\nWHERE member.t_shirt_size = 'Medium'\n  AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game'\n  AND status = 'Closed'\n  AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT DISTINCT CONCAT(m.first_name, ' ', m.last_name) AS full_name,\n       m.phone\nFROM member AS m\nJOIN expense AS e\n  ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, e.cost AS cost\nFROM expense e\nINNER JOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": "SELECT m.first_name, m.last_name, i.amount\nFROM member m\nJOIN income i ON i.link_to_member = m.member_id\nWHERE i.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "78": "SELECT\n  CASE\n    WHEN SUM(CASE WHEN Admission='+' THEN 1 ELSE 0 END) > SUM(CASE WHEN Admission='-' THEN 1 ELSE 0 END) THEN 'In-patient'\n    WHEN SUM(CASE WHEN Admission='+' THEN 1 ELSE 0 END) < SUM(CASE WHEN Admission='-' THEN 1 ELSE 0 END) THEN 'Out-patient'\n    ELSE 'Equal'\n  END AS MoreMaleGroup,\n  DIVIDE(\n    SUM(CASE WHEN Admission='+' THEN 1 ELSE 0 END),\n    SUM(CASE WHEN Admission='-' THEN 1 ELSE 0 END)\n  ) AS DeviationPercentage\nFROM Patient\nWHERE SEX='M';\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT DIVIDE(\n           SUM(CASE WHEN YEAR(Birthday) > 1930 AND SEX = 'F' THEN 1 ELSE 0 END),\n           SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END)\n         ) * 100 AS percentage\nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT\n  DIVIDE(\n    COUNT(CASE WHEN Admission = '+' THEN ID END),\n    COUNT(CASE WHEN Admission = '-' THEN ID END)\n  ) AS ratio\nFROM Patient\nWHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT P.Diagnosis, L.Date\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.ID = 30609\nORDER BY L.Date;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT p.ID, p.SEX, p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT p.`ID`, YEAR(CURRENT_TIMESTAMP) - YEAR(p.`Birthday`) AS age\nFROM `Patient` AS p\nJOIN `Examination` AS e ON p.`ID` = e.`ID`\nWHERE e.`RVVT` = '+';\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT \n    e.`ID`, \n    p.`SEX`, \n    e.`Diagnosis`\nFROM \n    `Examination` AS e\nJOIN \n    `Patient` AS p \n    ON e.`ID` = p.`ID`\nWHERE \n    e.`Thrombosis` = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) AS female_patients_1997_outpatient\nFROM Patient\nWHERE SEX = 'F'\n  AND YEAR(Description) = 1997\n  AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(DISTINCT Patient.ID) AS female_count\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 1\n  AND YEAR(Examination.`Examination Date`) = 1997\n  AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT\n    e.Symptoms,\n    e.Diagnosis\nFROM\n    Patient p\n    JOIN Examination e ON p.ID = e.ID\nWHERE\n    e.Symptoms IS NOT NULL\nORDER BY\n    p.Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT \n    l.Date AS LabDate, \n    (YEAR(`First Date`) - YEAR(`Birthday`)) AS Age\nFROM \n    Laboratory l\nJOIN \n    Patient p \n    ON l.ID = p.ID\nWHERE \n    p.Diagnosis = 'SJS'\nORDER BY \n    Age DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT\n    DIVIDE(\n        SUM(CASE WHEN p.SEX = 'M' AND l.UA <= 8.0 THEN 1 ELSE 0 END),\n        SUM(CASE WHEN p.SEX = 'F' AND l.UA <= 6.5 THEN 1 ELSE 0 END)\n    ) AS Ratio\nFROM\n    Patient p\nJOIN\n    Laboratory l\n    ON p.ID = l.ID;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT p.ID) AS UnderageExaminedCount\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE YEAR(p.Birthday) < 18\n  AND YEAR(e.`Examination Date`) BETWEEN 1990 AND 1993;\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n    YEAR(Examination.`Examination Date`) - YEAR(Patient.Birthday) AS Age,\n    Examination.Diagnosis\nFROM Examination\nJOIN Laboratory USING (ID)\nJOIN Patient USING (ID)\nORDER BY Laboratory.HGB DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT e.`aCL IgM` AS aCL_IgM\nFROM Patient p\nJOIN Examination e ON p.`ID` = e.`ID`\nWHERE p.`Diagnosis` = 'SLE'\n  AND p.`Description` = '1994-02-19'\n  AND e.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT\n    (SUM(CASE WHEN l.Date LIKE '1981-11-%' THEN l.`T-CHO` END) -\n     SUM(CASE WHEN l.Date LIKE '1981-12-%' THEN l.`T-CHO` END)) /\n    SUM(CASE WHEN l.Date LIKE '1981-12-%' THEN l.`T-CHO` END) AS decrease_rate\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE p.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT ID\nFROM Laboratory\nWHERE Date BETWEEN '1987-07-06' AND '1996-01-31'\n  AND GPT > 30\n  AND ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) AS patient_count\nFROM Examination e\nWHERE e.Thrombosis = 2\n  AND e.`ANA Pattern` = 'S'\n  AND e.`aCL IgM` > (\n      SELECT AVG(`aCL IgM`) * 1.2\n      FROM Examination\n  );\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT P.*\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.Admission = '-'\n  AND L.`Date` LIKE '1991-10%'\n  AND L.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(`ALB`) AS avg_albumin\nFROM `Patient` AS P\nJOIN `Laboratory` AS L ON P.`ID` = L.`ID`\nWHERE P.`SEX` = 'F'\n  AND L.`PLT` > 400\n  AND P.`Diagnosis` = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) AS female_APS_count\nFROM Patient\nWHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT DIVIDE(SUM(SEX = 'F'), COUNT(SEX)) * 100 AS percent_women\nFROM Patient\nWHERE YEAR(Birthday) = 1980\n  AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT\n    l.ID,\n    l.UA,\n    p.SEX,\n    CASE\n        WHEN (l.UA > 8.0 AND p.SEX = 'M')\n          OR (l.UA > 6.5 AND p.SEX = 'F')\n        THEN 'Yes'\n        ELSE 'No'\n    END AS NormalRange\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE l.ID = 57266\nORDER BY l.Date DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT L.ID\nFROM Laboratory AS L\nJOIN Patient AS P\n  ON L.ID = P.ID\nWHERE P.SEX = 'M'\n  AND L.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT \n    Patient.Diagnosis \nFROM \n    Patient \nJOIN \n    Laboratory \nON \n    Patient.ID = Laboratory.ID \nWHERE \n    Laboratory.GPT > 60 \nORDER BY \n    Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`\nFROM `Patient`\nINNER JOIN `Laboratory`\nON `Patient`.`ID` = `Laboratory`.`ID`\nWHERE `Laboratory`.`UN` = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT p.SEX, l.ID, l.`T-BIL`\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.`T-BIL` >= 2.0\nORDER BY p.SEX, l.ID;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT\n    DIVIDE(\n        SUM(\n            SUBTRACT(\n                YEAR(NOW()),\n                YEAR(`Birthday`)\n            )\n        ),\n        COUNT(`ID`)\n    ) AS average_age\nFROM\n    `Patient` AS `P`\n    JOIN `Laboratory` AS `L`\n        ON `P`.`ID` = `L`.`ID`\nWHERE\n    `P`.`SEX` = 'M'\n    AND `L`.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Laboratory l ON l.ID = p.ID\nWHERE l.TG >= 200\n  AND TIMESTAMPDIFF(YEAR, p.Birthday, CURRENT_DATE()) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT p.ID) AS male_patients_with_high_cpk\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND YEAR(p.Birthday) BETWEEN 1936 AND 1956\n  AND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT\n    p.ID,\n    p.`SEX`,\n    (YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday)) AS Age\nFROM\n    Patient p\nINNER JOIN\n    Laboratory l\n    ON p.ID = l.ID\nWHERE\n    l.GLU >= 180\n    AND l.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT\n    p.ID,\n    p.Diagnosis,\n    YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) AS age\nFROM\n    Patient p\nJOIN\n    Laboratory l\n    ON p.ID = l.ID\nWHERE\n    l.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT p.ID, p.SEX\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Diagnosis = 'SLE'\n  AND l.HGB > 10\n  AND l.HGB < 17\nORDER BY p.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT p.ID, YEAR(CURDATE()) - YEAR(p.Birthday) AS age\nFROM Patient p\nJOIN Laboratory l ON l.ID = p.ID\nWHERE l.HCT >= 52\nGROUP BY p.ID\nHAVING COUNT(*) > 2;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_count,\n    SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_count,\n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS difference\nFROM Laboratory\nWHERE PLT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT p.*\nFROM Patient AS p\nJOIN Laboratory AS l ON p.ID = l.ID\nWHERE YEAR(l.Date) = 1984\n  AND l.PLT BETWEEN 100 AND 400\n  AND YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) < 50;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT ROUND(DIVIDE(SUM(p.SEX = 'F'), COUNT(*)) * 100, 2) AS Percentage\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE SUBTRACT(YEAR(CURRENT_TIMESTAMP), YEAR(p.Birthday)) > 55\n  AND l.PT >= 14\n  AND l.PT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT Patient.ID) AS male_abnormal_fibrinogen\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\n  AND Laboratory.WBC > 3.5\n  AND Laboratory.WBC < 9.0\n  AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) AS patients_with_high_IGG\nFROM Laboratory\nWHERE IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) AS SymptomCount\nFROM Laboratory L\nJOIN Examination E ON L.ID = E.ID\nWHERE L.IGG > 900\n  AND L.IGG < 2000\n  AND E.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.`aCL IgA` > 80\n  AND e.`aCL IgA` < 500\n  AND p.`First Date` >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT E.Diagnosis\nFROM Laboratory L\nJOIN Examination E ON L.ID = E.ID\nWHERE L.IGM <= 40 OR L.IGM >= 400\nGROUP BY E.Diagnosis\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRP = '+'\n  AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(DISTINCT L.ID) AS AbnormalUnder70Count\nFROM Laboratory AS L\nJOIN Patient AS P ON L.ID = P.ID\nWHERE L.CRE >= 1.5\n  AND (YEAR(CURDATE()) - YEAR(P.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT p.`ID`) AS `normal_RNP_admitted_patients`\nFROM `Patient` p\nJOIN `Laboratory` l ON p.`ID` = l.`ID`\nWHERE l.`RNP` IN ('-','+-')\n  AND p.`Admission` = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT p.ID) AS normal_no_thrombosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.SM IN ('-', '0')\n  AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT p.ID) AS cnt\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'F'\n  AND e.Symptoms IS NULL\n  AND l.SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT P.`ID`) AS `MaleCount`\nFROM `Patient` AS P\nJOIN `Laboratory` AS L ON P.`ID` = L.`ID`\nWHERE L.`CENTROMEA` IN ('-','+-')\n  AND L.`SSB` IN ('-','+-')\n  AND P.`SEX` = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MAX(p.Birthday) AS Youngest_Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT l.ID) AS patient_count\nFROM Laboratory l\nJOIN Examination e ON l.ID = e.ID\nWHERE l.CPK < 250\n  AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT L.name\nFROM League L\nJOIN (\n    SELECT league_id, SUM(home_team_goal + away_team_goal) AS total_goals\n    FROM Match\n    WHERE season = '2015/2016'\n    GROUP BY league_id\n    ORDER BY total_goals DESC\n    LIMIT 1\n) AS M ON L.id = M.league_id;\t----- bird -----\teuropean_football_2",
    "129": "SELECT t.team_long_name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nJOIN Team t ON m.away_team_api_id = t.team_api_id\nWHERE l.name = 'Scotland Premier League'\n  AND m.season = '2009/2010'\n  AND m.away_team_goal > m.home_team_goal\nGROUP BY t.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT buildUpPlaySpeed\nFROM Team_Attributes\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT l.name\nFROM League AS l\nJOIN (\n    SELECT league_id, SUM(home_team_goal = away_team_goal) AS draw_count\n    FROM Match\n    WHERE season = '2015/2016'\n    GROUP BY league_id\n    ORDER BY draw_count DESC\n    LIMIT 1\n) AS d ON l.id = d.league_id;\t----- bird -----\teuropean_football_2",
    "132": "SELECT \n    p.id,\n    p.player_name,\n    TIMESTAMPDIFF(YEAR, p.birthday, CURRENT_TIMESTAMP) AS age\nFROM \n    Player p\nJOIN \n    Player_Attributes a ON p.player_api_id = a.player_api_id\nWHERE \n    a.sprint_speed >= 97\n    AND YEAR(a.date) BETWEEN 2013 AND 2015;\t----- bird -----\teuropean_football_2",
    "133": "SELECT\n    L.name AS league_name,\n    COUNT(*) AS match_count\nFROM\n    Match M\nJOIN\n    League L\n    ON M.league_id = L.id\nGROUP BY\n    L.id,\n    L.name\nORDER BY\n    match_count DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT T.team_long_name\nFROM Team T\nJOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id\nWHERE strftime('%Y', TA.date) = '2012'\n  AND TA.buildUpPlayPassing > (\n        SELECT AVG(buildUpPlayPassing)\n        FROM Team_Attributes\n        WHERE buildUpPlayPassing IS NOT NULL\n          AND strftime('%Y', date) = '2012'\n      );\t----- bird -----\teuropean_football_2",
    "136": "SELECT\n    DIVIDE(\n        SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) * 100,\n        COUNT(DISTINCT p.id)\n    ) AS percentage\nFROM\n    Player_Attributes pa\n    JOIN Player p ON pa.player_api_id = p.id\nWHERE\n    YEAR(p.birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "137": "SELECT DIVIDE(SUM(pa.long_shots), COUNT(pa.player_fifa_api_id)) AS average_long_shots\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height > 180\nGROUP BY p.id, p.player_name\nORDER BY AVG(pa.heading_accuracy) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2009/2010'\nGROUP BY L.id, L.name\nHAVING SUM(M.home_team_goal) / COUNT(DISTINCT M.id) > SUM(M.away_team_goal) / COUNT(DISTINCT M.id);\t----- bird -----\teuropean_football_2",
    "140": "SELECT * \nFROM Player \nWHERE SUBSTR(birthday,1,4) = '1970' \n  AND SUBSTR(birthday,6,2) = '10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Gabriel Tamas'\n  AND DATE_FORMAT(pa.date, '%Y') = '2011';\t----- bird -----\teuropean_football_2",
    "142": "SELECT SUM(home_team_goal) / COUNT(DISTINCT Match.id) AS avg_home_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Poland'\n  AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT p.player_name, pa.finishing\nFROM Player_Attributes pa\nJOIN Player p ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.height = (SELECT MAX(height) FROM Player)\n   OR p.height = (SELECT MIN(height) FROM Player)\nORDER BY pa.finishing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT SUM(pa.overall_rating)/COUNT(pa.id) AS avg_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON p.id = pa.player_api_id\nWHERE strftime('%Y', pa.date) >= '2010' AND strftime('%Y', pa.date) <= '2015' AND p.height > 170;\t----- bird -----\teuropean_football_2",
    "145": "SELECT (avg_abdou - avg_aaron) AS difference\nFROM (\n    SELECT AVG(pa.ball_control) AS avg_abdou\n    FROM Player_Attributes pa\n    JOIN Player p ON pa.player_api_id = p.id\n    WHERE p.player_name = 'Abdou Diallo'\n) AS t1,\n(\n    SELECT AVG(pa.ball_control) AS avg_aaron\n    FROM Player_Attributes pa\n    JOIN Player p ON pa.player_api_id = p.id\n    WHERE p.player_name = 'Aaron Appindangoye'\n) AS t2;\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name AS older_player\nFROM Player\nWHERE birthday = (\n    SELECT MIN(birthday)\n    FROM Player\n    WHERE player_name IN ('Aaron Lennon','Abdelaziz Barrada')\n);\t----- bird -----\teuropean_football_2",
    "147": "SELECT \n    player_name, \n    height \nFROM Player \nWHERE height IS NOT NULL \nORDER BY height DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) AS player_count\nFROM Player_Attributes\nWHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT p.id) AS total_players\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.defensive_work_rate = 'high'\n  AND YEAR(p.birthday) < 1986;\t----- bird -----\teuropean_football_2",
    "150": "SELECT DISTINCT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE pa.volleys > 70\n  AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) AS match_count\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Belgium Jupiler League'\n  AND substr(m.date,1,7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT l.name\nFROM League l\nJOIN Match m ON m.league_id = l.id\nWHERE m.season = '2008/2009'\nGROUP BY l.id, l.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((A.overall_rating - B.overall_rating)/B.overall_rating)*100 AS percentage_difference\nFROM\n(SELECT pa.overall_rating\n FROM Player_Attributes pa\n JOIN Player p ON pa.player_api_id = p.player_api_id\n WHERE p.player_name = 'Ariel Borysiuk') AS A,\n(SELECT pb.overall_rating\n FROM Player_Attributes pb\n JOIN Player p2 ON pb.player_api_id = p2.player_api_id\n WHERE p2.player_name = 'Paulin Puel') AS B;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(PA.overall_rating) AS avg_overall_rating\nFROM `Player` P\nJOIN `Player_Attributes` PA ON P.`player_api_id` = PA.`player_api_id`\nWHERE P.`player_name` = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT\n    ta.chanceCreationPassing AS max_score,\n    ta.chanceCreationPassingClass AS classification\nFROM\n    Team AS t\nJOIN\n    Team_Attributes AS ta\n    ON t.team_fifa_api_id = ta.team_fifa_api_id\nWHERE\n    t.team_long_name = 'Ajax'\nORDER BY\n    ta.chanceCreationPassing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "156": "SELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.overall_rating = 77\n  AND pa.date LIKE '2016-06-23%'\nORDER BY p.birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT pa.overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON p.id = pa.player_api_id\nWHERE p.player_name = 'Aaron Mooy'\n  AND pa.date LIKE '2016-02-04%' ;\t----- bird -----\teuropean_football_2",
    "158": "SELECT pa.attacking_work_rate\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Francesco Migliore'\n  AND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT pa.date\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Kevin Constant'\n  AND pa.crossing = (\n      SELECT MAX(crossing)\n      FROM Player_Attributes\n      WHERE player_api_id = p.player_api_id\n  )\nORDER BY pa.date\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "160": "SELECT tpa.buildUpPlayPassingClass\nFROM Team_Attributes tpa\nJOIN Team t ON tpa.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'FC Lorient'\n  AND tpa.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT TAT.defenceAggressionClass\nFROM Team_Attributes AS TAT\nJOIN Team AS T ON TAT.team_api_id = T.team_api_id\nWHERE T.team_long_name = 'Hannover 96'\n  AND TAT.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) AS avg_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Marko Arnautovic'\n  AND LEFT(pa.date,10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT\n    ((la.overall_rating - jo.overall_rating) / la.overall_rating) * 100 AS percentage\nFROM\n    Player AS p1\nJOIN\n    Player_Attributes AS la ON la.player_api_id = p1.player_api_id\nJOIN\n    Player AS p2\nJOIN\n    Player_Attributes AS jo ON jo.player_api_id = p2.player_api_id\nWHERE\n    p1.player_name = 'Landon Donovan'\n    AND p2.player_name = 'Jordan Bowery'\n    AND la.date = '2013/7/12'\n    AND jo.date = '2013/7/12';\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "165": "SELECT P.player_name\nFROM Player_Attributes pa\nJOIN Player P ON pa.player_api_id = P.id\nORDER BY pa.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT P.player_name\nFROM Player AS P\nJOIN Player_Attributes AS PA\n  ON P.player_api_id = PA.player_api_id\nWHERE PA.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT t.team_short_name\nFROM Team AS t\nJOIN Team_Attributes AS a ON t.team_api_id = a.team_api_id\nWHERE a.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \n  AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": "SELECT\n  (SELECT jumping FROM Player_Attributes WHERE id = 6) -\n  (SELECT jumping FROM Player_Attributes WHERE id = 23) AS difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT p.id\nFROM Player AS p\nJOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id\nWHERE pa.preferred_foot = 'right'\n  AND pa.potential = (\n      SELECT MIN(potential)\n      FROM Player_Attributes\n      WHERE preferred_foot = 'right'\n  )\nORDER BY p.id\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) AS num_players\nFROM Player_Attributes\nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes)\n  AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": "SELECT m.home_team_goal, m.away_team_goal\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Belgium Jupiler League'\n  AND m.date LIKE '2008-09-24%';\t----- bird -----\teuropean_football_2",
    "173": "SELECT `buildUpPlaySpeedClass`  \nFROM `Team_Attributes` taa  \nJOIN `Team` t ON taa.`team_api_id` = t.`team_api_id`  \nWHERE t.`team_long_name` = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing AS finishing_rate, pa.curve AS curve_score\nFROM Player_Attributes pa\nJOIN Player p ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "175": "SELECT l.name, COUNT(*) AS games\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.`season` = '2015/2016'\nGROUP BY l.id, l.name\nORDER BY games DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT t.team_long_name\nFROM Team t\nJOIN Match m ON t.team_api_id = m.away_team_api_id\nORDER BY m.away_team_goal DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "177": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": "SELECT \n    SUM(CASE WHEN p.height < 180 AND pa.overall_rating > 70 THEN 1 ELSE 0 END) * 100.0 / COUNT(p.id) AS percentage\nFROM \n    Player p\nJOIN \n    Player_Attributes pa\nON \n    p.player_api_id = pa.player_api_id;\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 20\n  AND q.q1 IS NOT NULL\nORDER BY q.q1 DESC\nLIMIT 5;\t----- bird -----\tformula_1",
    "180": "SELECT d.surname\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 19\n  AND q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19);\t----- bird -----\tformula_1",
    "181": "SELECT r.name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT c.lat, c.lng\nFROM circuits AS c\nJOIN races AS r ON c.circuitId = r.circuitId\nWHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": "SELECT c.`lat`, c.`lng`\nFROM `races` r\nJOIN `circuits` c ON r.`circuitId` = c.`circuitId`\nWHERE r.`name` = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT q1\nFROM qualifying\nINNER JOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 354\n  AND drivers.forename = 'Bruno'\n  AND drivers.surname = 'Senna';\t----- bird -----\tformula_1",
    "185": "SELECT d.number\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 903\n  AND q.q3 LIKE '0:01:54%';\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) AS not_finished\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Bahrain Grand Prix'\n  AND ra.year = 2007\n  AND r.time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 592\n  AND r.time IS NOT NULL\nORDER BY d.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT d.forename, d.surname, d.url\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE lt.raceId = 161\n  AND lt.time LIKE '0:01:27%'\t----- bird -----\tformula_1",
    "189": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT c.url\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE cr.raceId = 9\nORDER BY cr.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "191": "SELECT d.`code`\nFROM `drivers` d\nJOIN `qualifying` q ON d.`driverId` = q.`driverId`\nWHERE q.`raceId` = 45\n  AND q.`q3` LIKE '0:01:33%' ;\t----- bird -----\tformula_1",
    "192": "SELECT s.url\nFROM seasons s\nJOIN races r ON s.year = r.year\nWHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON r.driverId = d.driverId\nWHERE r.raceId = 872\n  AND r.time IS NOT NULL\nORDER BY d.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.fastestLapSpeed = (\n    SELECT MAX(fastestLapSpeed) FROM results\n);\t----- bird -----\tformula_1",
    "195": "SELECT\n    DIVIDE(\n        SUBTRACT(\n            CAST(r853.fastestLapSpeed AS DECIMAL(10,2)),\n            CAST(r854.fastestLapSpeed AS DECIMAL(10,2))\n        ) * 100,\n        CAST(r853.fastestLapSpeed AS DECIMAL(10,2))\n    ) AS percent_faster\nFROM results r853\nJOIN results r854 ON r853.driverId = r854.driverId\nJOIN drivers d ON r853.driverId = d.driverId\nWHERE d.forename = 'Paul'\n  AND d.surname = 'di Resta'\n  AND r853.raceId = 853\n  AND r854.raceId = 854;\t----- bird -----\tformula_1",
    "196": "SELECT\n  (COUNT(CASE WHEN time IS NOT NULL THEN 1 END) * 100.0 / COUNT(*)) AS completion_rate\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.date = '1983-07-16';\t----- bird -----\tformula_1",
    "197": "SELECT r.name\nFROM races r\nJOIN (\n    SELECT YEAR(MIN(date)) AS minYear,\n           MONTH(MIN(date)) AS minMonth\n    FROM races\n) m\nON YEAR(r.date)=m.minYear AND MONTH(r.date)=m.minMonth;\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, ds.points\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nORDER BY ds.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT\n    d.forename,\n    d.surname,\n    r.name AS race,\n    l.milliseconds\nFROM\n    lapTimes l\nJOIN\n    drivers d ON l.driverId = d.driverId\nJOIN\n    races r ON l.raceId = r.raceId\nWHERE\n    l.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time_ms\nFROM lapTimes\nJOIN races ON lapTimes.raceId = races.raceId\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE races.year = 2009\n  AND races.name = 'Malaysian Grand Prix'\n  AND drivers.forename = 'Lewis'\n  AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "201": "SELECT DIVIDE(SUM(CASE WHEN r.position > 1 THEN 1 ELSE 0 END), COUNT(*)) * 100 AS percentage_not_first\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.surname = 'Hamilton'\n  AND ra.year >= 2010;\t----- bird -----\tformula_1",
    "202": "SELECT\n    d.forename,\n    d.surname,\n    d.nationality,\n    SUM(ds.wins) AS total_wins,\n    MAX(ds.points) AS max_points\nFROM\n    drivers d\n    JOIN driverStandings ds ON d.driverId = ds.driverId\nGROUP BY\n    d.driverId, d.forename, d.surname, d.nationality\nORDER BY\n    total_wins DESC,\n    max_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "203": "SELECT YEAR(CURRENT_TIMESTAMP)-YEAR(dob) AS age, CONCAT(forename, ' ', surname) AS name\nFROM drivers\nWHERE nationality = 'Japanese'\nORDER BY age ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT \n    r.`name` AS race_name,\n    c.`name` AS circuit_name,\n    c.`location`\nFROM \n    `races` r\nJOIN \n    `circuits` c\n    ON r.`circuitId` = c.`circuitId`\nWHERE \n    YEAR(r.`date`) = 2005\n    AND MONTH(r.`date`) = 9;\t----- bird -----\tformula_1",
    "205": "SELECT r.raceId, r.name\nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Alex'\n  AND d.surname = 'Yoong'\n  AND res.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT r.name AS race, r.year\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nORDER BY lt.milliseconds\nLIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT r.name AS race_name,\n       res.points\nFROM results AS res\nJOIN races AS r\n  ON res.raceId = r.raceId\nJOIN drivers AS d\n  ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis'\n  AND d.surname = 'Hamilton'\nORDER BY r.year ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT\n    (COUNT(CASE WHEN c.country = 'Germany' THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM\n    races r\nJOIN\n    circuits c\n    ON r.circuitId = c.circuitId\nWHERE\n    r.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng\nFROM circuits\nWHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT d.nationality\nFROM drivers d\nWHERE d.dob = (SELECT MIN(dob) FROM drivers);\t----- bird -----\tformula_1",
    "212": "SELECT d.driverRef\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.year = 2007\n  AND ra.name = 'Canadian Grand Prix'\n  AND r.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT r.name, r.year, res.rank\nFROM `races` r\nJOIN `results` res ON r.`raceId` = res.`raceId`\nJOIN `drivers` d ON res.`driverId` = d.`driverId`\nWHERE d.`forename` = 'Lewis' AND d.`surname` = 'Hamilton'\nORDER BY res.`rank` ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(CAST(results.fastestLapSpeed AS DECIMAL(10,2))) AS max_speed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "215": "SELECT r.positionOrder\nFROM results r\nJOIN races rs ON r.raceId = rs.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE d.forename = 'Lewis'\n  AND d.surname = 'Hamilton'\n  AND rs.year = 2008\n  AND rs.name = 'Chinese Grand Prix';\t----- bird -----\tformula_1",
    "216": "SELECT r.time\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008\n  AND ra.name = 'Chinese Grand Prix'\n  AND r.position = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT r.driverId) AS participated_count\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008\n  AND ra.name = 'Chinese Grand Prix'\n  AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT\n  ROUND(((l.milliseconds - c.milliseconds) / l.milliseconds) * 100, 2) AS percent_faster\nFROM\n  races r\n  JOIN results c ON c.raceId = r.raceId AND c.position = 1\n  JOIN results l ON l.raceId = r.raceId\nWHERE\n  r.year = 2008\n  AND r.name LIKE '%Australian%'\n  AND l.position = (\n    SELECT MAX(position)\n    FROM results r2\n    WHERE r2.raceId = r.raceId\n  );\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) AS circuit_count\nFROM circuits\nWHERE location = 'Adelaide'\n  AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cs.points) AS max_points\nFROM constructors c\nJOIN constructorStandings cs ON c.constructorId = cs.constructorId\nWHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT c.name\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE cr.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) AS japanese_zero_in_two\nFROM (\n    SELECT c.constructorId\n    FROM constructorStandings cs\n    JOIN constructors c ON cs.constructorId = c.constructorId\n    WHERE c.nationality = 'Japanese'\n    GROUP BY c.constructorId\n    HAVING COUNT(DISTINCT cs.raceId) = 2\n       AND SUM(cs.points) = 0\n) AS t;\t----- bird -----\tformula_1",
    "223": "SELECT\n    ROUND((COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END) / COUNT(*)) * 100, 2) AS completion_percentage\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.year BETWEEN 2007 AND 2009\n  AND d.nationality = 'Japanese';\t----- bird -----\tformula_1",
    "224": "SELECT ra.year,\n       AVG(TIME_TO_SEC(LEFT(r.time, 8)) + RIGHT(r.time, 3) / 1000) AS avg_seconds\nFROM races ra\nJOIN results r ON r.raceId = ra.raceId\nWHERE r.position = 1\n  AND r.time IS NOT NULL\n  AND ra.year < 1975\nGROUP BY ra.year\nORDER BY ra.year;\t----- bird -----\tformula_1",
    "225": "SELECT lt.lap\nFROM lapTimes lt\nJOIN races r ON lt.raceId = r.raceId\nWHERE r.year = 2009\n  AND lt.driverId = (\n    SELECT ds.driverId\n    FROM driverStandings ds\n    JOIN races r2 ON ds.raceId = r2.raceId\n    WHERE r2.year = 2009\n    GROUP BY ds.driverId\n    ORDER BY SUM(ds.points) DESC\n    LIMIT 1\n  )\nORDER BY lt.time ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(CAST(fastestLapSpeed AS DECIMAL(10,2))) AS avgFastestLapSpeed\nFROM results\nWHERE raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix');\t----- bird -----\tformula_1",
    "227": "SELECT\n    (COUNT(DISTINCT IF(d.dob < '1985-01-01' AND lt.lap > 50, lt.driverId, NULL)) * 100.0) /\n    COUNT(DISTINCT lt.driverId) AS percentage\nFROM lapTimes lt\nJOIN races r ON lt.raceId = r.raceId\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE r.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverId) AS num_french_drivers\nFROM drivers d\nJOIN lapTimes l ON l.driverId = d.driverId\nWHERE d.nationality = 'French'\n  AND l.milliseconds < 120000;\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT code\nFROM drivers\nORDER BY dob DESC\nLIMIT 3;\n\nSELECT COUNT(*) AS netherlandic_count\nFROM (\n    SELECT nationality\n    FROM drivers\n    ORDER BY dob DESC\n    LIMIT 3\n) AS sub\nWHERE sub.nationality IN ('Netherlandic','Dutch','Netherlands');\t----- bird -----\tformula_1",
    "231": "SELECT driverRef\nFROM drivers\nWHERE nationality = 'German' AND dob IS NOT NULL\nORDER BY dob\nLIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT DISTINCT d.driverId, d.code\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nJOIN (\n    SELECT raceId, MIN(milliseconds) AS min_ms\n    FROM lapTimes\n    GROUP BY raceId\n) AS minlaps ON lt.raceId = minlaps.raceId\n   AND lt.milliseconds = minlaps.min_ms\nWHERE YEAR(d.dob) = 1971;\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) AS disqualified_finishers\nFROM results\nWHERE raceId > 50\n  AND raceId < 100\n  AND statusId = 2\n  AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "234": "SELECT\n    c.location,\n    c.lat,\n    c.lng,\n    COUNT(*) AS times\nFROM circuits c\nWHERE c.country = 'Austria'\nGROUP BY c.circuitId, c.location, c.lat, c.lng;\t----- bird -----\tformula_1",
    "235": "SELECT r.year, r.name, r.date, r.time\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nWHERE d.driverId = (\n    SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1\n)\nAND r.date = (\n    SELECT MIN(r2.date)\n    FROM qualifying q2\n    JOIN races r2 ON q2.raceId = r2.raceId\n    WHERE q2.driverId = d.driverId\n);\t----- bird -----\tformula_1",
    "236": "SELECT\n    CONCAT(d.forename, ' ', d.surname) AS full_name,\n    AVG(p.milliseconds) AS avg_duration_ms\nFROM\n    drivers d\nJOIN\n    pitStops p\n    ON d.driverId = p.driverId\nWHERE\n    d.nationality = 'German'\n    AND YEAR(d.dob) BETWEEN 1980 AND 1985\nGROUP BY\n    d.driverId\nORDER BY\n    avg_duration_ms ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT CONCAT(d.forename, ' ', d.surname) AS champion, r.time AS finish_time\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.year = 2008\n  AND ra.name LIKE '%Canadian Grand Prix%'\n  AND r.position = 1;\t----- bird -----\tformula_1",
    "238": "SELECT c.constructorRef, c.url\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN constructors c ON res.constructorId = c.constructorId\nWHERE r.year = 2009\n  AND r.name LIKE '%Singapore%'\n  AND res.positionOrder = 1;\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT SUM(r.points) AS score, c.name, c.nationality  \nFROM results r  \nJOIN constructors c ON r.constructorId = c.constructorId  \nJOIN races ra ON r.raceId = ra.raceId  \nWHERE ra.name LIKE '%Monaco%' AND ra.year BETWEEN 1980 AND 2010  \nGROUP BY c.constructorId, c.name, c.nationality  \nORDER BY score DESC  \nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.year = 2008\n  AND c.name = 'Marina Bay Street Circuit'\n  AND q.q3 = (\n        SELECT MIN(q3)\n        FROM qualifying q2\n        WHERE q2.raceId = r.raceId\n    );\t----- bird -----\tformula_1",
    "242": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name,\n       d.nationality,\n       r.name AS race_name\nFROM drivers d\nJOIN results res ON res.driverId = d.driverId\nJOIN races r ON r.raceId = res.raceId\nWHERE d.driverId = (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1)\nORDER BY r.date ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) AS accidents\nFROM results r\nJOIN races rs ON r.raceId = rs.raceId\nWHERE rs.name = 'Canadian Grand Prix'\n  AND r.statusId = 3\n  AND r.driverId = (\n      SELECT driverId\n      FROM results r2\n      JOIN races rs2 ON r2.raceId = rs2.raceId\n      WHERE rs2.name = 'Canadian Grand Prix'\n        AND r2.statusId = 3\n      GROUP BY r2.driverId\n      ORDER BY COUNT(*) DESC\n      LIMIT 1\n  );\t----- bird -----\tformula_1",
    "244": "SELECT d.forename, d.surname\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE d.driverId IN (\n      SELECT driverId\n      FROM driverStandings\n      GROUP BY driverId\n      ORDER BY SUM(points) DESC\n      LIMIT 20\n)\n  AND lt.milliseconds = (\n      SELECT MIN(lt2.milliseconds)\n      FROM lapTimes lt2\n      JOIN drivers d2 ON lt2.driverId = d2.driverId\n      WHERE d2.driverId IN (\n            SELECT driverId\n            FROM driverStandings\n            GROUP BY driverId\n            ORDER BY SUM(points) DESC\n            LIMIT 20\n      )\n  );\t----- bird -----\tformula_1",
    "245": "SELECT c.name AS circuit_name,\n       d.forename,\n       d.surname,\n       l.lap,\n       l.time,\n       l.milliseconds\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nJOIN lapTimes l ON r.raceId = l.raceId\nJOIN drivers d ON l.driverId = d.driverId\nJOIN (\n    SELECT r.circuitId, MIN(l.milliseconds) AS min_ms\n    FROM races r\n    JOIN lapTimes l ON r.raceId = l.raceId\n    WHERE r.circuitId IN (\n        SELECT circuitId FROM circuits WHERE country = 'Italy'\n    )\n    GROUP BY r.circuitId\n) m ON r.circuitId = m.circuitId AND l.milliseconds = m.min_ms\nWHERE c.country = 'Italy'\nORDER BY c.name;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) AS super_strength_tall\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength'\n  AND s.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT s.id) AS count\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN hero_power hp ON hp.hero_id = s.id\nJOIN superpower sp ON sp.id = hp.power_id\nWHERE c.colour = 'Blue'\n  AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour eye ON s.eye_colour_id = eye.id AND eye.colour = 'Blue'\nJOIN colour hair ON s.hair_colour_id = hair.id AND hair.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT s.superhero_name, s.height_cm, ROW_NUMBER() OVER (ORDER BY s.height_cm DESC) AS rank\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nORDER BY s.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour AS eye_colour, COUNT(s.id) AS superhero_count\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY c.colour\nORDER BY superhero_count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE p.publisher_name = 'Marvel Comics'\n  AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN superhero s ON ha.hero_id = s.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) AS gold_eyed_marvel_count\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE c.colour = 'Gold'\n  AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "254": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\n  AND ha.attribute_value = (\n      SELECT MIN(ha2.attribute_value)\n      FROM hero_attribute ha2\n      JOIN attribute a2 ON ha2.attribute_id = a2.id\n      WHERE a2.attribute_name = 'Intelligence'\n  );\t----- bird -----\tsuperhero",
    "255": "SELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name, s.full_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability'\n  AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT s.id) AS female_strength_100_count\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON ha.hero_id = s.id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE g.gender = 'Female' AND a.attribute_name = 'Strength' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT\n    ROUND(((SUM(CASE WHEN a.alignment = 'Bad' THEN 1 ELSE 0 END) / COUNT(*) ) * 100), 2) AS percentage_of_bad,\n    SUM(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_bad_count\nFROM superhero s\nLEFT JOIN alignment a ON s.alignment_id = a.id\nLEFT JOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "260": "SELECT\n    SUM(IF(p.publisher_name = 'Marvel Comics', 1, 0)) -\n    SUM(IF(p.publisher_name = 'DC Comics', 1, 0)) AS difference\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "261": "SELECT id\nFROM publisher\nWHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) AS total_no_full_name\nFROM superhero\nWHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) AS average_weight_kg\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female';\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE g.gender = 'Male'\nLIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.height_cm BETWEEN 170 AND 190\n  AND c.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nJOIN colour c ON s.hair_colour_id = c.id\nWHERE s.height_cm = 185 AND r.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT\n    (SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage\nFROM\n    superhero\nINNER JOIN\n    publisher\n    ON superhero.publisher_id = publisher.id\nWHERE\n    superhero.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT s.superhero_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Male'\n  AND s.weight_kg > 0.79 * (SELECT AVG(weight_kg) FROM superhero WHERE weight_kg IS NOT NULL);\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hp.hero_id) AS stealth_hero_count\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON ha.hero_id = s.id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE p.publisher_name = 'Dark Horse Comics'\n  AND a.attribute_name = 'durability'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT eye_colour.colour AS eye_colour,\n       hair_colour.colour AS hair_colour,\n       skin_colour.colour AS skin_colour\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nWHERE gender.gender = 'Female'\n  AND publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN colour e ON s.eye_colour_id = e.id\nJOIN colour h ON s.hair_colour_id = h.id\nJOIN colour skin ON s.skin_colour_id = skin.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.eye_colour_id = s.hair_colour_id\n  AND s.eye_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT \n  ROUND(100 * SUM(CASE WHEN c.colour = 'Blue' THEN 1 ELSE 0 END) / COUNT(*), 2) AS blue_female_percentage\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN colour c ON s.skin_colour_id = c.id\nWHERE g.gender = 'Female';\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) AS number_of_powers\nFROM hero_power hp\nJOIN superhero s ON hp.hero_id = s.id\nWHERE s.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT s.height_cm\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'Black' AND c2.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT s.superhero_name\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT hero_id) AS num_heroes\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Strength'\n  AND ha.attribute_value = (\n        SELECT MAX(ha2.attribute_value)\n        FROM hero_attribute ha2\n        JOIN attribute a2 ON ha2.attribute_id = a2.id\n        WHERE a2.attribute_name = 'Strength'\n      );\t----- bird -----\tsuperhero",
    "281": "SELECT ROUND(\n    SUM(CASE WHEN g.gender_name = 'Female' THEN 1 ELSE 0 END) /\n    NULLIF(COUNT(*), 0) * 100,\n    2) AS female_marvel_percent\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT \n  (SELECT SUM(weight_kg) FROM superhero WHERE full_name='Emil Blonsky') -\n  (SELECT SUM(weight_kg) FROM superhero WHERE full_name='Charles Chandler') AS difference;\t----- bird -----\tsuperhero",
    "283": "SELECT DIVIDE(SUM(height_cm), COUNT(*)) AS average_height\nFROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON hp.hero_id = s.id\nJOIN superpower sp ON sp.id = hp.power_id\nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM attribute a\nJOIN hero_attribute ha ON a.id = ha.attribute_id\nJOIN superhero s ON s.id = ha.hero_id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour ce ON s.eye_colour_id = ce.id\nJOIN colour ch ON s.hair_colour_id = ch.id\nWHERE ce.colour = 'Blue'\n  AND ch.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT 100.0 * SUM(CASE WHEN c.colour = 'Blue' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_blue_eyes\nFROM superhero s\nLEFT JOIN colour c ON s.eye_colour_id = c.id;\t----- bird -----\tsuperhero",
    "290": "SELECT DIVIDE(SUM(gender_id = 1), SUM(gender_id = 2)) AS ratio\nFROM superhero;\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT SUM(colour.id = 7) - SUM(colour.id = 1) AS difference\nFROM superhero s\nJOIN colour colour ON s.eye_colour_id = colour.id\nWHERE s.weight_kg = 0 OR s.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(DISTINCT s.id) AS green_villains\nFROM superhero s\nJOIN colour c ON s.skin_colour_id = c.id\nJOIN alignment al ON s.alignment_id = al.id\nWHERE c.colour = 'Green'\n  AND al.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Wind Control'\nORDER BY s.superhero_name;\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN gender g ON s.gender_id = g.id\nWHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT\n    SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) -\n    SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS difference\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName  \nFROM users  \nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon')  \nORDER BY `Reputation` DESC  \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName\nFROM users\nWHERE YEAR(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) AS user_count\nFROM users\nWHERE `LastAccessDate` > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT OwnerDisplayName\nFROM posts\nWHERE Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) AS post_count\nFROM posts AS p\nJOIN users AS u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) AS num_posts\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Age > 65\n  AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body\nFROM tags t\nJOIN posts p ON t.ExcerptPostId = p.Id\nWHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.`Score`) AS avg_score\nFROM `posts` p\nJOIN `users` u ON p.`OwnerUserId` = u.`Id`\nWHERE u.`DisplayName` = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT ROUND(\n        (SUM(CASE WHEN u.Age > 65 THEN 1 ELSE 0 END) / COUNT(*)) * 100,\n        2\n    ) AS percentage\nFROM posts p\nLEFT JOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.UserId = 3025\n  AND c.CreationDate = '2014/4/23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "308": "SELECT p.Id AS PostId, \n       CASE \n           WHEN p.ClosedDate IS NOT NULL THEN 'well-finished' \n           ELSE 'not well-finished' \n       END AS Status\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 23853\n  AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) AS post_count\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT u.DisplayName\nFROM votes v\nLEFT JOIN users u ON v.UserId = u.Id\nWHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT \n    (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) /\n    (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS ratio;\t----- bird -----\tcodebase_community",
    "312": "SELECT `ViewCount` \nFROM `posts` \nWHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text\nFROM comments\nWHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT u.DisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.`Reputation`\nFROM posts p\nJOIN users u ON p.`OwnerUserId` = u.`Id`\nWHERE p.`Title` = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data?';\t----- bird -----\tcodebase_community",
    "317": "SELECT DISTINCT c.*\nFROM posts p\nJOIN postHistory ph ON ph.PostId = p.Id\nJOIN comments c ON c.PostId = p.Id AND c.UserId = ph.UserId\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName\nFROM users u\nJOIN votes v ON v.UserId = u.Id\nJOIN posts p ON p.Id = v.PostId\nWHERE v.BountyAmount = 50\n  AND p.Title LIKE '%variance%' ;\t----- bird -----\tcodebase_community",
    "319": "SELECT\n    p.Title,\n    c.Text AS Comment,\n    p.ViewCount AS AvgViewCount\nFROM\n    posts p\n    JOIN comments c ON p.Id = c.PostId\nWHERE\n    p.Tags LIKE '%<humor>%';\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) AS UsersWithMoreThanFiveBadges\nFROM (\n    SELECT UserId\n    FROM badges\n    GROUP BY UserId\n    HAVING COUNT(*) > 5\n) AS sub;\t----- bird -----\tcodebase_community",
    "321": "SELECT DISTINCT u.Id, u.DisplayName\nFROM users u\nJOIN posts p ON p.OwnerUserId = u.Id\nWHERE p.ViewCount >= 1000\n  AND EXISTS (\n      SELECT 1\n      FROM postHistory ph\n      WHERE ph.PostId = p.Id\n  )\n  AND NOT EXISTS (\n      SELECT 1\n      FROM postHistory ph\n      WHERE ph.PostId = p.Id\n      GROUP BY ph.PostId\n      HAVING COUNT(*) > 1\n  );\t----- bird -----\tcodebase_community",
    "322": "SELECT\n    100 * SUM(CASE WHEN Name = 'Student' AND YEAR(Date) = 2010 THEN 1 ELSE 0 END) / COUNT(*) -\n    100 * SUM(CASE WHEN Name = 'Student' AND YEAR(Date) = 2011 THEN 1 ELSE 0 END) / COUNT(*) AS percentage_difference\nFROM badges;\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) AS avg_upvotes, AVG(u.Age) AS avg_age\nFROM users u\nJOIN (\n    SELECT OwnerUserId AS UserId, COUNT(*) AS post_count\n    FROM posts\n    GROUP BY OwnerUserId\n    HAVING post_count > 10\n) p ON u.Id = p.UserId;\t----- bird -----\tcodebase_community",
    "324": "SELECT \n    CAST(COUNT(CASE WHEN YEAR(`CreationDate`) = 2010 THEN 1 END) AS DECIMAL(10,4)) / \n    NULLIF(COUNT(CASE WHEN YEAR(`CreationDate`) = 2011 THEN 1 END), 0) AS ratio\nFROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT u.DisplayName, SUM(p.ViewCount) AS TotalViews\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY u.DisplayName\nORDER BY TotalViews DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "WITH numbers AS (\n  SELECT 1 AS n UNION ALL\n  SELECT 2 UNION ALL\n  SELECT 3 UNION ALL\n  SELECT 4 UNION ALL\n  SELECT 5 UNION ALL\n  SELECT 6 UNION ALL\n  SELECT 7 UNION ALL\n  SELECT 8 UNION ALL\n  SELECT 9 UNION ALL\n  SELECT 10\n)\nSELECT DISTINCT REGEXP_SUBSTR(p.Tags, '<([^>]+)>', 1, n, NULL, 1) AS Tag\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nJOIN numbers n ON REGEXP_SUBSTR(p.Tags, '<([^>]+)>', 1, n) IS NOT NULL\nWHERE u.DisplayName = 'Mark Meckes'\n  AND p.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT ROUND(DIVIDE(r_posts, total_posts) * 100, 2) AS r_percentage\nFROM (\n  SELECT COUNT(*) AS r_posts\n  FROM posts\n  WHERE OwnerDisplayName = 'Community'\n    AND Tags LIKE '%<r>%'\n) r\nJOIN (\n  SELECT COUNT(*) AS total_posts\n  FROM posts\n  WHERE OwnerDisplayName = 'Community'\n) c;\t----- bird -----\tcodebase_community",
    "329": "SELECT\n    SUM(CASE WHEN u.DisplayName = 'Mornington' THEN p.ViewCount ELSE 0 END) -\n    SUM(CASE WHEN u.DisplayName = 'Amos' THEN p.ViewCount ELSE 0 END) AS view_count_difference\nFROM\n    posts p\n    JOIN users u ON u.Id = p.OwnerUserId;\t----- bird -----\tcodebase_community",
    "330": "SELECT DIVIDE(COUNT(*), 12) AS avg_monthly_links  \nFROM posts  \nWHERE YEAR(CreationDate) = 2010  \n  AND AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) AS FirstVoteDate\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT u.DisplayName\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Name = 'Autobiographer'\n  AND b.Date = (SELECT MIN(Date) FROM badges WHERE Name = 'Autobiographer');\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(*) AS UserCount\nFROM (\n    SELECT u.Id\n    FROM users u\n    JOIN posts p ON u.Id = p.OwnerUserId\n    WHERE u.Location = 'United Kingdom'\n    GROUP BY u.Id\n    HAVING SUM(COALESCE(p.FavoriteCount,0)) >= 4\n) AS sub;\t----- bird -----\tcodebase_community",
    "334": "SELECT p.`Id`, p.`Title`\nFROM `posts` AS p\nJOIN `users` AS u ON p.`OwnerUserId` = u.`Id`\nWHERE u.`DisplayName` = 'Harvey Motulsky'\nORDER BY p.`ViewCount` DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, COALESCE(p.OwnerDisplayName, u.DisplayName) AS OwnerDisplayName\nFROM posts p\nLEFT JOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreaionDate) = 2010\nORDER BY COALESCE(p.FavoriteCount, 0) DESC, p.Id ASC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT\n    DIVIDE(COUNT(p.Id), (SELECT COUNT(*) FROM posts)) * 100 AS percentage\nFROM\n    posts p\n    JOIN users u ON u.Id = p.OwnerUserId\nWHERE\n    YEAR(p.CreaionDate) = 2011\n    AND u.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "337": "SELECT\n    p.ViewCount AS TotalViews,\n    u.DisplayName AS OwnerDisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets'\nORDER BY p.CreaionDate DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) AS comment_count\nFROM comments\nWHERE PostId = (\n    SELECT Id\n    FROM posts\n    WHERE Score = (SELECT MAX(Score) FROM posts)\n    LIMIT 1\n);\t----- bird -----\tcodebase_community",
    "339": "SELECT\n    c.Text,\n    c.UserDisplayName\nFROM\n    posts AS p\nINNER JOIN\n    comments AS c\n    ON c.PostId = p.Id\nWHERE\n    p.Title = 'Analysing wind data with R'\nORDER BY\n    c.CreationDate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    DIVIDE(SUM(p.Score > 50), COUNT(*)) * 100 AS Percentage\nFROM \n    posts p\nWHERE \n    p.OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName='sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes\nFROM comments AS c\nJOIN users AS u ON c.UserId = u.Id\nWHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text\nFROM comments AS c\nJOIN posts AS p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) AS ZeroScoreComments\nFROM posts p\nJOIN comments c ON c.PostId = p.Id\nWHERE p.CommentCount = 1\n  AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT\n    IFNULL(DIVIDE(\n        COUNT(DISTINCT CASE WHEN u.UpVotes = 0 THEN u.Id END),\n        COUNT(DISTINCT u.Id)\n    ), 0) * 100 AS percentage\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": "SELECT id, name, cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT *\nFROM `cards`\nWHERE `borderColor` = 'borderless'\n  AND (`cardKingdomFoilId` IS NULL OR `cardKingdomId` IS NULL);\t----- bird -----\tcard_games",
    "348": "SELECT c.name\nFROM cards c\nJOIN legalities l ON c.id = l.id\nWHERE c.rarity = 'mythic'\n  AND l.format = 'gladiator'\n  AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "349": "SELECT c.id, c.name, l.status\nFROM cards AS c\nJOIN legalities AS l\n  ON c.id = l.id\nWHERE c.side IS NULL\n  AND FIND_IN_SET('Artifact', c.types) > 0\n  AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.id = l.id\nWHERE l.format = 'commander'\n  AND l.status = 'Legal'\n  AND (c.power = '*' OR c.power IS NULL);\t----- bird -----\tcard_games",
    "351": "SELECT\n    c.id,\n    c.name,\n    r.date,\n    r.text AS ruling_text,\n    c.hasContentWarning AS missing_or_degraded\nFROM\n    cards c\nINNER JOIN\n    rulings r\nON\n    c.id = r.id\nWHERE\n    c.artist = 'Stephen Daniel';\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, c.isPromo\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.uuid, c.name, c.artist, c.isPromo\nORDER BY COUNT(r.uuid) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) / COUNT(id) * 100 AS percentage FROM foreign_data;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) \nFROM cards \nWHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name='Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT l.format, l.status\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT\n    CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS DECIMAL(10,4))\n    / COUNT(*)\n    * 100 AS percentage\nFROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT 100.0 * SUM(CASE WHEN f.language='French' THEN 1 ELSE 0 END) / COUNT(*) AS percentage\nFROM cards c\nLEFT JOIN foreign_data f ON c.id = f.id\nWHERE c.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards\nWHERE originalType = 'Summon - Angel'\n  AND subtypes IS NOT NULL\n  AND subtypes NOT LIKE '%Angel%';\t----- bird -----\tcard_games",
    "360": "SELECT id\nFROM cards\nWHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) AS white_banned_cards\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Banned'\n  AND c.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT c.id, c.name, f.language\nFROM cards AS c\nJOIN foreign_data AS f ON c.id = f.id\nWHERE c.originalType = 'Artifact'\n  AND c.colors = 'B'\n  AND f.language IS NOT NULL;\t----- bird -----\tcard_games",
    "363": "SELECT manaCost\nFROM cards\nWHERE layout = 'normal'\n  AND frameVersion = '2003'\n  AND borderColor = 'black'\n  AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0;\nSELECT DIVIDE(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END), COUNT(*)) * 100 AS percentage FROM cards;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT s.code) AS num_translated_sets\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Commander'\n  AND st.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT cards.subtypes, cards.supertypes\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE foreign_data.language = 'German'\n  AND cards.subtypes IS NOT NULL\n  AND cards.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) AS unknown_power_triggered_cards\nFROM cards\nWHERE (power IS NULL OR power = '*')\n  AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(DISTINCT c.id) AS card_count\nFROM cards c\nJOIN legalities l ON c.id = l.id\nJOIN rulings r ON c.id = r.id\nWHERE l.format = 'premodern'\n  AND r.text = 'This is a triggered mana ability.'\n  AND c.side IS NULL;\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM cards AS c\nJOIN foreign_data AS fd ON c.id = fd.id\nWHERE c.type = 'Creature'\n  AND c.layout = 'normal'\n  AND c.borderColor = 'black'\n  AND c.artist = 'Matthew D. Wilson'\n  AND fd.language = 'French';\t----- bird -----\tcard_games",
    "370": "SELECT st.language\nFROM set_translations AS st\nJOIN sets AS s ON st.setCode = s.code\nWHERE s.baseSetSize = 180\n  AND s.block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": "SELECT 100.0 * SUM(hasContentWarning = 0) / COUNT(*) AS percentage\nFROM cards c\nJOIN legalities l ON c.id = l.id\nWHERE l.format = 'commander' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "372": "SELECT\n    DIVIDE(\n        SUM(IF(f.language='French' AND (c.power IS NULL OR c.power='*'),1,0)),\n        SUM(IF(c.power IS NULL OR c.power='*',1,0))\n    ) * 100 AS percentage\nFROM cards c\nLEFT JOIN foreign_data f ON c.uuid = f.uuid;\t----- bird -----\tcard_games",
    "373": "SELECT language\nFROM foreign_data\nWHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT\n    DIVIDE(\n        COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END),\n        COUNT(CASE WHEN isTextless = 1 THEN 1 END)\n    ) * 100 AS proportion\nFROM cards;\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT language\nFROM set_translations\nWHERE setCode = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT language\nFROM foreign_data\nWHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT name\nFROM cards\nWHERE name IN ('Serra Angel', 'Shrine Keeper')\nORDER BY convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE s.name = 'Commander 2015'\n  AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS(SELECT 1 FROM foreign_data WHERE name='Ancestor''s Chosen' AND language='Korean') AS KoreanVersion;\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) AS num_cards\nFROM cards c\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE st.translation = 'Hauptset Zehnte Edition'\n  AND c.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT st.translation\nFROM set_translations AS st\nJOIN sets AS s ON st.setCode = s.code\nWHERE s.name = 'Eighth Edition'\n  AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT EXISTS (\n    SELECT 1\n    FROM cards c\n    JOIN sets s ON c.setCode = s.code\n    WHERE c.name = 'Angel of Mercy'\n      AND s.mtgoCode IS NOT NULL\n) AS appears_on_mtgo;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.id) AS italian_translations_count\nFROM sets s\nJOIN set_translations st ON st.setCode = s.code\nWHERE s.block = 'Ice Age'\n  AND st.language = 'Italian'\n  AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT\n    CASE WHEN isForeignOnly = 1 THEN 'Yes' ELSE 'No' END AS OnlyAvailableOutsideUSA\nFROM sets\nWHERE name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) AS num_sets\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.language = 'Italian'\n  AND st.translation IS NOT NULL\n  AND s.baseSetSize < 10;\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT c.artist\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\n  AND c.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\nORDER BY c.artist;\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) AS num_cards\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\n  AND c.convertedManaCost > 5\n  AND (c.power = '*' OR c.power IS NULL);\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavorText\nFROM foreign_data fd\nWHERE fd.language = 'Italian'\n  AND fd.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "389": "SELECT fd.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN foreign_data fd ON fd.uuid = c.uuid\n    AND fd.language = 'Italian'\n    AND fd.type = 'Ruling'\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM cards AS c\nJOIN foreign_data AS fd\n  ON fd.uuid = c.uuid\nWHERE c.setCode = 'COL'\n  AND fd.language = 'Italian'\n  AND c.convertedManaCost = (\n    SELECT MAX(convertedManaCost)\n    FROM cards\n    WHERE setCode = 'COL'\n  );\t----- bird -----\tcard_games",
    "391": "SELECT 100 * SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) / COUNT(*) AS percentage\nFROM cards\nWHERE setCode = 'COLD';\t----- bird -----\tcard_games",
    "392": "SELECT ROUND(DIVIDE(SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END), COUNT(*))*100, 2) AS percentage_of_incredibly_powerful\nFROM cards\nWHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap');\t----- bird -----\tcard_games",
    "393": "WITH banned_counts AS (\n    SELECT format, COUNT(*) AS cnt\n    FROM legalities\n    WHERE status = 'Banned'\n    GROUP BY format\n), max_count AS (\n    SELECT MAX(cnt) AS maxcnt\n    FROM banned_counts\n)\nSELECT l.format, c.name\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nJOIN banned_counts bc ON l.format = bc.format\nJOIN max_count mc ON bc.cnt = mc.maxcnt\nWHERE l.status = 'Banned'\nORDER BY l.format, c.name;\t----- bird -----\tcard_games",
    "394": "SELECT\n    c.name,\n    l.format\nFROM\n    cards c\nJOIN\n    legalities l\n    ON c.id = l.id\nWHERE\n    c.edhrecRank = 1\n    AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT DISTINCT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.id = l.id\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Hour of Devastation'\n  AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT DISTINCT s.name\nFROM sets s\nWHERE EXISTS (\n        SELECT 1\n        FROM set_translations t\n        WHERE t.id = s.id\n          AND t.language = 'Korean'\n      )\n  AND NOT EXISTS (\n        SELECT 1\n        FROM set_translations t2\n        WHERE t2.id = s.id\n          AND t2.language LIKE '%Japanese%'\n      );\t----- bird -----\tcard_games",
    "397": "SELECT frameVersion AS FrameStyle, name AS CardName\nFROM cards\nWHERE artist = 'Allen Williams'\nUNION\nSELECT c.frameVersion AS FrameStyle, c.name AS CardName\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Banned';\t----- bird -----\tcard_games",
    "398": "SELECT bond_type\nFROM bond\nGROUP BY bond_type\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) AS avg_oxygen\nFROM (\n    SELECT m.molecule_id, COUNT(a.atom_id) AS oxygen_count\n    FROM (\n            SELECT DISTINCT molecule_id\n            FROM bond\n            WHERE bond_type = '-'\n        ) AS m\n    LEFT JOIN atom AS a\n        ON a.molecule_id = m.molecule_id\n        AND a.element = 'o'\n    GROUP BY m.molecule_id\n) AS sub;\t----- bird -----\ttoxicology",
    "400": "SELECT DIVIDE(COUNT(b.bond_id), COUNT(DISTINCT m.molecule_id)) AS avg_single_bonds_per_carcinogenic_molecule\nFROM molecule AS m\nJOIN bond AS b ON m.molecule_id = b.molecule_id\nWHERE m.label = '+' AND b.bond_type = '-';\t----- bird -----\ttoxicology",
    "401": "SELECT mol.molecule_id, mol.label\nFROM molecule mol\nJOIN bond b ON mol.molecule_id = b.molecule_id\nWHERE b.bond_type = '#'\n  AND mol.label = '+';\t----- bird -----\ttoxicology",
    "402": "SELECT\n    DIVIDE(SUM(element = 'c'), COUNT(a.atom_id)) AS percentage\nFROM atom a\nJOIN molecule m\n    ON a.molecule_id = m.molecule_id\nWHERE EXISTS (\n    SELECT 1\n    FROM bond b\n    WHERE b.molecule_id = m.molecule_id\n      AND b.bond_type = '='\n);\t----- bird -----\ttoxicology",
    "403": "SELECT element\nFROM atom\nWHERE atom_id IN (\n      SELECT atom_id FROM connected WHERE bond_id = 'TR004_8_9'\n)\nUNION\nSELECT element\nFROM atom\nWHERE atom_id IN (\n      SELECT atom_id2 FROM connected WHERE bond_id = 'TR004_8_9'\n);\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.`element`\nFROM `bond` b\nJOIN `connected` c ON b.`bond_id` = c.`bond_id`\nJOIN `atom` a ON (a.`atom_id` = c.`atom_id` OR a.`atom_id` = c.`atom_id2`)\nWHERE b.`bond_type` = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT m.label, COUNT(*) AS cnt\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'h'\nGROUP BY m.label\nORDER BY cnt DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT element\nFROM (\n    SELECT a.element, COUNT(*) AS cnt\n    FROM atom a\n    JOIN molecule m ON a.molecule_id = m.molecule_id\n    WHERE m.label = '-'\n    GROUP BY a.element\n) c\nWHERE c.cnt = (\n    SELECT MIN(cnt)\n    FROM (\n        SELECT a.element, COUNT(*) AS cnt\n        FROM atom a\n        JOIN molecule m ON a.molecule_id = m.molecule_id\n        WHERE m.label = '-'\n        GROUP BY a.element\n    ) sub\n);\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20')\n   OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) AS atom_count\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '-'\n  AND a.element IN ('i','s');\t----- bird -----\ttoxicology",
    "409": "SELECT\n  DIVIDE(COUNT(DISTINCT `m`.`molecule_id`) * 100,\n    (SELECT COUNT(DISTINCT `m2`.`molecule_id`)\n     FROM `molecule` AS `m2`\n     WHERE `m2`.`label` = '+') ) AS `percentage_no_fluorine`\nFROM `molecule` AS `m`\nLEFT JOIN `atom` AS `a`\n  ON `m`.`molecule_id` = `a`.`molecule_id`\n  AND `a`.`element` = 'f'\nWHERE `m`.`label` = '+'\n  AND `a`.`atom_id` IS NULL;\t----- bird -----\ttoxicology",
    "410": "SELECT DIVIDE(SUM(bond_type = '#') * 100, COUNT(bond_id)) AS percent\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "411": "SELECT DISTINCT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element ASC\nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT FORMAT(100 * DIVIDE(SUM(bond_type = '='), COUNT(bond_id)), 5) AS percent\nFROM bond\nWHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(DIVIDE(SUM(label = '+'), COUNT(molecule_id)) * 100, 3) AS percentage\nFROM molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT \n    ROUND(DIVIDE(SUM(element = 'h'), COUNT(atom_id)) * 100, 4) AS hydrogen_percentage\nFROM \n    atom\nWHERE \n    molcule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT a.element, m.label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT \n    b.bond_type,\n    'false' AS is_carcinogenic\nFROM bond b\nWHERE b.molecule_id = 'TR010'\nGROUP BY b.bond_type\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON b.molecule_id = m.molecule_id\nJOIN connected c ON c.bond_id = b.bond_id\nWHERE m.label = '-'\n  AND b.bond_type = '-'\nORDER BY m.molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT c.bond_id) AS bond_count\nFROM connected AS c\nJOIN bond AS b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR009'\n  AND (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "419": "SELECT\n    b.bond_type,\n    c.atom_id AS atom1,\n    c.atom_id2 AS atom2\nFROM\n    bond b\nJOIN\n    connected c\n    ON b.bond_id = c.bond_id\nWHERE\n    b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(DISTINCT bond_id) AS connection_count\nFROM connected\nWHERE atom_id LIKE 'TR%_19'\n   OR atom_id2 LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT DISTINCT element\nFROM atom\nWHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON a.molecule_id = m.molecule_id\nWHERE m.label = '+'\n  AND SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25';\t----- bird -----\ttoxicology",
    "423": "SELECT b.*\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a1.element = 'p' AND a2.element = 'n')\n   OR (a1.element = 'n' AND a2.element = 'p');\t----- bird -----\ttoxicology",
    "424": "SELECT (m.label = '+') AS is_carcinogenic\nFROM molecule m\nJOIN (\n    SELECT molcule_id, COUNT(*) AS double_bonds\n    FROM bond\n    WHERE bond_type = '='\n    GROUP BY molcule_id\n    ORDER BY double_bonds DESC\n    LIMIT 1\n) b ON m.molecule_id = b.molecule_id;\t----- bird -----\ttoxicology",
    "425": "SELECT DIVIDE(COUNT(connected.bond_id), COUNT(DISTINCT atom.atom_id)) AS avg_bonds\nFROM connected\nJOIN atom ON (connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id)\nWHERE atom.element = 'i';\t----- bird -----\ttoxicology",
    "426": "SELECT DISTINCT a.element\nFROM atom a\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM connected c\n    WHERE c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\n);\t----- bird -----\ttoxicology",
    "427": "SELECT c.atom_id, c.atom_id2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = '#'\n  AND b.molecule_id = 'TR041';\t----- bird -----\ttoxicology",
    "428": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON (a.atom_id = c.atom_id OR a.atom_id = c.atom_id2)\nWHERE c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT element\nFROM (\n    SELECT a.element\n    FROM bond b\n    JOIN connected c ON b.bond_id = c.bond_id\n    JOIN atom a ON a.atom_id = c.atom_id\n    WHERE b.bond_type = '#'\n    UNION\n    SELECT a.element\n    FROM bond b\n    JOIN connected c ON b.bond_id = c.bond_id\n    JOIN atom a ON a.atom_id = c.atom_id2\n    WHERE b.bond_type = '#'\n) AS sub;\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(DIVIDE(SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100, COUNT(b.bond_id)), 5) AS carcinogenic_percentage\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*) FROM atom\nWHERE `molecule_id` IN (\n  SELECT DISTINCT b.`molecule_id`\n  FROM bond b\n  JOIN atom a ON b.`molecule_id` = a.`molecule_id`\n  WHERE b.`bond_type` = '#'\n    AND a.`element` IN ('p','br')\n);\t----- bird -----\ttoxicology",
    "432": "SELECT 100 * SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END) / COUNT(*) AS percent\nFROM atom\nWHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-');\t----- bird -----\ttoxicology",
    "433": "SELECT a1.element AS element1, a2.element AS element2\nFROM connected c\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT DIVIDE(SUM(CASE WHEN a.element='cl' THEN 1 ELSE 0 END), COUNT(DISTINCT m.molecule_id)) AS percentage\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label='+';\t----- bird -----\ttoxicology",
    "435": "SELECT a.element, COUNT(*) AS count\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '+'\n  AND SUBSTRING(a.atom_id, 7, 1) = '4'\nGROUP BY a.element;\t----- bird -----\ttoxicology",
    "436": "SELECT\n  DIVIDE(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END), COUNT(*)) AS ratio,\n  m.label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "437": "SELECT `molecule_id`, `label`\nFROM `molecule` m\nJOIN `atom` a ON a.`molecule_id` = m.`molecule_id`\nWHERE m.`label` = '-'\nGROUP BY `molecule_id`, `label`\nHAVING COUNT(a.`atom_id`) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) AS num_virtual_schools_with_math_gt400\nFROM satscores s\nJOIN frpm f ON s.cds = f.`CDSCode`\nWHERE f.`Virtual` = 'F'\n  AND s.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "439": "SELECT `CDSCode` \nFROM frpm \nWHERE (COALESCE(`Enrollment (K-12)`, 0) + COALESCE(`Enrollment (Ages 5-17)`, 0)) > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS MaxEligibleFreeRate\nFROM frpm\nJOIN satscores ON frpm.`CDSCode` = satscores.`cds`\nWHERE `NumGE1500` / `NumTstTakr` > 0.3\n  AND `Enrollment (Ages 5-17)` > 0;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT \n    s.CharterNum,\n    sc.AvgScrWrite\nFROM \n    schools s\nJOIN \n    satscores sc ON s.CDSCode = sc.cds\nWHERE \n    sc.AvgScrWrite > 499\nORDER BY \n    sc.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT `School`,\n       CONCAT_WS(' ', `Street`, `StreetAbr`, `City`, `Zip`) AS `FullAddress`\nFROM `schools`\nWHERE (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > 30\n  AND `Enrollment (K-12)` IS NOT NULL\n  AND `Enrollment (Ages 5-17)` IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT f.`School Name`\nFROM frpm f\nJOIN satscores s ON f.`CDSCode` = s.cds\nWHERE f.`Enrollment (K-12)` > 0\n  AND f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)` > 0.1\n  AND s.`NumGE1500` > 0;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType\nFROM satscores sa\nJOIN schools s ON sa.cds = s.CDSCode\nWHERE s.County = 'Riverside'\nGROUP BY s.CDSCode, s.School, s.FundingType\nHAVING AVG(sa.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT f.`School Name` AS SchoolName,\n       s.`Street` AS Street,\n       s.`City` AS City,\n       s.`State` AS State,\n       s.`Zip` AS Zip\nFROM frpm f\nJOIN schools s ON f.`CDSCode` = s.`CDSCode`\nWHERE f.`County` = 'Monterey'\n  AND f.`School Type` LIKE '%High%'\n  AND f.`FRPM Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "446": "SELECT\n    s.School AS SchoolName,\n    s.Phone AS PhoneNumber,\n    sc.AvgScrWrite AS WritingScore\nFROM\n    schools s\nJOIN\n    satscores sc\n    ON s.CDSCode = sc.cds\nWHERE\n    (s.OpenDate > '1991-12-31' OR s.ClosedDate < '2000-01-01');\t----- bird -----\tcalifornia_schools",
    "447": "SELECT `School`, DOC\nFROM schools\nWHERE `FundingType` = 'Local'\n  AND `Enrollment (K-12)` IS NOT NULL\n  AND `Enrollment (Ages 5-17)` IS NOT NULL\n  AND (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`)\n      > (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`)\n          FROM schools\n          WHERE `FundingType` = 'Local'\n            AND `Enrollment (K-12)` IS NOT NULL\n            AND `Enrollment (Ages 5-17)` IS NOT NULL);\t----- bird -----\tcalifornia_schools",
    "448": "SELECT\n    `CDSCode`,\n    CAST(`Free Meal Count (K-12)` AS DECIMAL(10,4)) / `Enrollment (K-12)` AS eligible_free_rate\nFROM\n    `frpm`\nORDER BY\n    `Enrollment (K-12)` DESC\nLIMIT 2 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT\n  `CDSCode`,\n  `FRPM Count (K-12)` AS FRPMCount,\n  `Enrollment (K-12)` AS Enrollment,\n  (`FRPM Count (K-12)`/NULLIF(`Enrollment (K-12)`,0)) AS EligibleRate\nFROM frpm\nWHERE `County Code` = '66'\nORDER BY `FRPM Count (K-12)` DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.`Street`, s.`City`, s.`Zip`, s.`State`\nFROM `satscores` sc\nJOIN `schools` s ON sc.`cds` = s.`CDSCode`\nORDER BY 1.0 * sc.`NumGE1500` / sc.`NumTstTakr` ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT\n    CASE WHEN s.AdmFName1 IS NOT NULL THEN CONCAT(s.AdmFName1,' ',s.AdmLName1) END AS Admin1,\n    CASE WHEN s.AdmFName2 IS NOT NULL THEN CONCAT(s.AdmFName2,' ',s.AdmLName2) END AS Admin2,\n    CASE WHEN s.AdmFName3 IS NOT NULL THEN CONCAT(s.AdmFName3,' ',s.AdmLName3) END AS Admin3\nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE sc.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(s.NumTstTakr) AS avg_test_takers\nFROM satscores s\nJOIN schools sch ON s.cds = sch.CDSCode\nWHERE sch.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\n  AND sch.County = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.`Phone`  \nFROM `satscores` sc  \nJOIN `schools` s ON sc.`cds` = s.`CDSCode`  \nWHERE sc.`dname` = 'Fresno Unified'  \nORDER BY sc.`AvgScrRead` ASC  \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT School\nFROM (\n    SELECT s.School,\n           ss.AvgScrRead,\n           ROW_NUMBER() OVER (PARTITION BY s.County ORDER BY ss.AvgScrRead DESC) AS rn\n    FROM schools s\n    JOIN satscores ss ON ss.cds = s.CDSCode\n    WHERE s.Virtual = 'F'\n      AND ss.AvgScrRead IS NOT NULL\n) t\nWHERE rn <= 5;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT\n    s.School AS SchoolName,\n    sc.AvgScrWrite AS AvgWritingScore\nFROM\n    schools s\nJOIN\n    satscores sc\n    ON s.CDSCode = sc.cds\nWHERE\n    s.AdmFName1 = 'Ricci'\n    AND s.AdmLName1 = 'Ulrich';\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.`State`, s.`School`, f.`Enrollment (K-12)`\nFROM schools s\nJOIN frpm f ON s.`CDSCode` = f.`CDSCode`\nWHERE s.`DOC` = 31\nORDER BY f.`Enrollment (K-12)` DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS monthly_average\nFROM schools\nWHERE OpenDate IS NOT NULL\n  AND YEAR(OpenDate) = 1980\n  AND County = 'Alameda'\n  AND DOC = '52';\t----- bird -----\tcalifornia_schools",
    "458": "SELECT\n  (SELECT COUNT(*) FROM schools WHERE DOC = '54' AND County = 'Orange' AND StatusType = 'merged') /\n  (SELECT COUNT(*) FROM schools WHERE DOC = '52' AND County = 'Orange' AND StatusType = 'merged') AS ratio;\t----- bird -----\tcalifornia_schools",
    "459": "SELECT sc.`Street` AS postal_street, sc.`School` AS school_name\nFROM satscores s\nJOIN schools sc ON s.`cds` = sc.`CDSCode`\nORDER BY s.`AvgScrMath` DESC\nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) AS total_non_chartered\nFROM frpm\nWHERE `County Name` = 'Los Angeles'\n  AND `Charter School (Y/N)` = 0\n  AND `Free Meal Count (K-12)` IS NOT NULL\n  AND `Enrollment (K-12)` IS NOT NULL\n  AND (`Free Meal Count (K-12)` * 100 / `Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT SUM(`Enrollment (Ages 5-17)`) AS TotalEnrollment\nFROM frpm\nJOIN schools ON frpm.`CDSCode` = schools.`CDSCode`\nWHERE schools.`School` = 'State Special School'\n  AND schools.`City` = 'Fremont'\n  AND schools.`EdOpsCode` = 'SSS'\n  AND frpm.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT `School Name`,\n       (`FRPM Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) * 100 AS `Percent (%) Eligible FRPM (Ages 5-17)`\nFROM frpm\nWHERE `County` = 'Los Angeles'\n  AND `Low Grade` = 'Kindergarten'\n  AND `High Grade` = '9th grade';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS school_count\nFROM schools\nWHERE Virtual = 'F'\n  AND County IN ('San Diego', 'Santa Barbara')\nGROUP BY County\nORDER BY school_count DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered \nFROM schools \nORDER BY ABS(Longitude) DESC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(*) AS TotalMultipleProvision\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Magnet = 1\n  AND s.GSserved = 'K-8'\n  AND f.`NSLP Provision Status` = 'Multiple Provision Types';\n\nSELECT s.City, COUNT(*) AS SchoolsCount\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Magnet = 1\n  AND s.GSserved = 'K-8'\nGROUP BY s.City;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT \n    f.`District Code`, \n    (f.`Free Meal Count (K-12)` / NULLIF(f.`Enrollment (K-12)`, 0)) * 100 AS `Percent (%) Eligible Free (K-12)`\nFROM \n    frpm f \n    JOIN schools s ON f.`CDSCode` = s.`CDSCode`\nWHERE \n    s.`AdmFName1` = 'Alusine' \n    OR s.`AdmFName2` = 'Alusine' \n    OR s.`AdmFName3` = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT DISTINCT AdminEmail\nFROM (\n    SELECT AdmEmail1 AS AdminEmail\n    FROM schools\n    WHERE County = 'San Bernardino'\n      AND District = 'San Bernardino City Unified'\n      AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n      AND SOC = '62'\n      AND DOC = '54'\n      AND AdmEmail1 REGEXP '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'\n    \n    UNION ALL\n    \n    SELECT AdmEmail2 AS AdminEmail\n    FROM schools\n    WHERE County = 'San Bernardino'\n      AND District = 'San Bernardino City Unified'\n      AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n      AND SOC = '62'\n      AND DOC = '54'\n      AND AdmEmail2 REGEXP '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'\n    \n    UNION ALL\n    \n    SELECT AdmEmail3 AS AdminEmail\n    FROM schools\n    WHERE County = 'San Bernardino'\n      AND District = 'San Bernardino City Unified'\n      AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n      AND SOC = '62'\n      AND DOC = '54'\n      AND AdmEmail3 REGEXP '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'\n) AS t;\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(*)  \nFROM account a  \nJOIN district d ON a.district_id = d.district_id  \nWHERE a.frequency = 'POPLATEK PO OBRATU'  \n  AND d.`A3` = 'East Bohemia';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) AS num_districts\nFROM district\nWHERE A11 > 6000 AND A11 < 10000;\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) AS male_count\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M'\n  AND d.A3 = 'North Bohemia'\n  AND d.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT a.account_id,\n       gap.gap\nFROM account a\nJOIN client c\n  ON a.client_id = c.client_id\nJOIN district d\n  ON c.district_id = d.district_id\nCROSS JOIN (\n    SELECT MAX(A11) AS max_salary,\n           MIN(A11) AS min_salary,\n           (MAX(A11)-MIN(A11)) AS gap\n    FROM district\n    WHERE district_id IN (SELECT district_id FROM client WHERE gender='F')\n) gap\nWHERE c.gender = 'F'\n  AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender='F')\n  AND d.A11 = (SELECT MIN(A11) FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender='F'));\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.client_id = c.client_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.birth_date = (SELECT MAX(birth_date) FROM client)\n  AND d.A11 = (SELECT MAX(A11) FROM district);\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, a.frequency, l.amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status = 'approved'\n  AND YEAR(l.date) = 1997\n  AND l.amount = (\n      SELECT MIN(amount)\n      FROM loan\n      WHERE status = 'approved' AND YEAR(date) = 1997\n  )\n  AND a.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "474": "SELECT\n    a.account_id,\n    a.date,\n    l.amount\nFROM\n    account a\n    INNER JOIN loan l ON a.account_id = l.account_id\nWHERE\n    YEAR(a.date) = 1993\n    AND l.duration > 12\n    AND l.amount = (\n        SELECT\n            MAX(l2.amount)\n        FROM\n            loan l2\n            INNER JOIN account a2 ON a2.account_id = l2.account_id\n        WHERE\n            YEAR(a2.date) = 1993\n            AND l2.duration > 12\n    );\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT client.client_id) AS female_clients_count\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\n  AND client.birth_date < '1950-01-01'\n  AND district.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": "SELECT d.A2\nFROM client c\nJOIN disp d2 ON c.client_id = d2.client_id\nJOIN account a ON d2.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT DIVIDE(COUNT(CASE WHEN gender='M' THEN 1 END), COUNT(*)) * 100 AS male_percentage\nFROM client\nWHERE district_id = (\n    SELECT district_id\n    FROM district\n    WHERE A3 = 'south Bohemia'\n    ORDER BY A4 DESC\n    LIMIT 1\n);\t----- bird -----\tfinancial",
    "478": "SELECT ((t_end.balance - t_start.balance) / t_start.balance) * 100 AS increase_rate\nFROM loan l\nJOIN disp d ON l.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN trans t_start ON t_start.account_id = l.account_id AND t_start.date = '1993-03-22'\nJOIN trans t_end ON t_end.account_id = l.account_id AND t_end.date = '1998-12-27'\nWHERE l.date = '1993-07-05'\nLIMIT 1;\t----- bird -----\tfinancial",
    "479": "SELECT\n    (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage\nFROM\n    loan;\t----- bird -----\tfinancial",
    "480": "SELECT IFNULL(ROUND(100 * SUM(CASE WHEN status = 'C' THEN amount END) / SUM(amount), 2), 0) AS percentage\nFROM loan\nWHERE amount < 100000;\t----- bird -----\tfinancial",
    "481": "SELECT d.`district_id`,\n       d.`A2` AS district_name,\n       ((d.`A13` - d.`A12`)/d.`A12`) * 100 AS unemployment_increment\nFROM `loan` l\nJOIN `account` a ON l.`account_id` = a.`account_id`\nJOIN `disp` dis ON a.`account_id` = dis.`account_id`\nJOIN `client` c ON dis.`client_id` = c.`client_id`\nJOIN `district` d ON c.`district_id` = d.`district_id`\nWHERE l.`status` = 'D';\t----- bird -----\tfinancial",
    "482": "SELECT d.A2 AS district, COUNT(DISTINCT disp.client_id) AS female_account_holders\nFROM account AS a\nJOIN disp ON disp.account_id = a.account_id\nJOIN client ON client.client_id = disp.client_id\nJOIN district AS d ON d.district_id = a.district_id\nWHERE client.gender = 'F'\nGROUP BY d.district_id, d.A2\nORDER BY female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT \n    a.account_id, \n    COUNT(l.loan_id) AS approved_loans\nFROM \n    loan l\nJOIN \n    account a ON l.account_id = a.account_id\nWHERE \n    l.amount >= 250000\n    AND l.date BETWEEN '1995-01-01' AND '1997-12-31'\n    AND a.frequency = 'POPLATEK MESICNE'\n    AND l.status IN ('schvaleny', 'approved')\nGROUP BY \n    a.account_id;\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT a.account_id) AS running_contract_accounts\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.status IN ('C','D')\n  AND d.district_id = 1;\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) AS male_clients\nFROM client\nWHERE gender = 'M'\n  AND district_id IN (\n    SELECT district_id\n    FROM district\n    WHERE A15 = (\n      SELECT MAX(A15)\n      FROM district\n      WHERE A15 IS NOT NULL\n        AND A15 < (\n          SELECT MAX(A15)\n          FROM district\n          WHERE A15 IS NOT NULL\n        )\n    )\n  );\t----- bird -----\tfinancial",
    "486": "SELECT d.`A2` AS district_name, SUM(t.`amount`) AS total_amount\nFROM trans t\nJOIN account a ON t.`account_id` = a.`account_id`\nJOIN district d ON a.`district_id` = d.`district_id`\nWHERE t.`type` = 'VYDAJ'\n  AND t.`date` LIKE '1996-01%'\nGROUP BY d.`A2`\nORDER BY total_amount DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT account.account_id) AS running_accounts\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE account.district_id = 1\n  AND loan.status IN ('C','D');\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(DISTINCT client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A15 = (\n    SELECT MAX(A15)\n    FROM district d2\n    WHERE d2.A15 < (\n        SELECT MAX(A15) FROM district\n    )\n);\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT t.account_id\nFROM trans t\nWHERE t.operation = 'VYBER KARTOU'\n  AND YEAR(t.date) = 1998\n  AND t.amount < (\n        SELECT AVG(amount)\n        FROM trans\n        WHERE operation = 'VYBER KARTOU'\n          AND YEAR(date) = 1998\n      );\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT a.frequency AS account_type, d.A11 AS average_income\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE a.frequency <> 'OWNER'\n  AND d.A11 > 8000\n  AND d.A11 <= 9000;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.A15) AS avg_crimes\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.A15 > 4000\n  AND YEAR(a.date) >= 1997;\t----- bird -----\tfinancial",
    "492": "SELECT t.*\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.client_id = 3356\n  AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": "SELECT\n  ROUND(\n    100 * SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) /\n          COUNT(DISTINCT c.client_id),\n    2\n  ) AS percentage_of_women\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dist ON a.district_id = dist.district_id\nWHERE dist.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT ((SUM(CASE WHEN YEAR(l.date)=1997 THEN l.amount ELSE 0 END) - \n          SUM(CASE WHEN YEAR(l.date)=1996 THEN l.amount ELSE 0 END)) /\n         NULLIF(SUM(CASE WHEN YEAR(l.date)=1996 THEN l.amount ELSE 0 END),0)) * 100 AS growth_rate\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nWHERE c.gender='M' AND YEAR(l.date) IN (1996,1997);\t----- bird -----\tfinancial",
    "495": "SELECT frequency\nFROM account\nWHERE account_id = 3;\n\nSELECT k_symbol\nFROM trans\nWHERE operation = 'debit'\n  AND amount = 3539;\t----- bird -----\tfinancial",
    "496": "SELECT ROUND(100 * male / total, 2) AS percentage\nFROM\n  (SELECT COUNT(DISTINCT c.client_id) male\n   FROM client c\n   JOIN disp d ON c.client_id = d.client_id\n   JOIN account a ON d.account_id = a.account_id\n   WHERE c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE') m\nCROSS JOIN\n  (SELECT COUNT(DISTINCT c.client_id) total\n   FROM client c\n   JOIN disp d ON c.client_id = d.client_id\n   JOIN account a ON d.account_id = a.account_id\n   WHERE a.frequency = 'POPLATEK TYDNE') t;\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nJOIN disp ds ON c.client_id = ds.client_id\nJOIN account a ON ds.account_id = a.account_id\nWHERE c.gender = 'F'\n  AND c.birth_date = (\n      SELECT MIN(birth_date)\n      FROM client\n      WHERE gender = 'F'\n  )\n  AND d.A11 = (\n      SELECT MIN(d2.A11)\n      FROM client c2\n      JOIN district d2 ON c2.district_id = d2.district_id\n      WHERE c2.gender = 'F'\n        AND c2.birth_date = (\n            SELECT MIN(birth_date)\n            FROM client\n            WHERE gender = 'F'\n        )\n  );\t----- bird -----\tfinancial",
    "498": "SELECT AVG(l.amount) AS avg_loan_amount\nFROM loan l\nJOIN trans t ON l.account_id = t.account_id\nWHERE l.status = 'C'\n  AND t.k_symbol = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": "SELECT \n    c.client_id, \n    TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age\nFROM \n    client c\n    JOIN disp d ON d.client_id = c.client_id\n    JOIN card ca ON ca.disp_id = d.disp_id\nWHERE \n    ca.type = 'gold' AND \n    d.type = 'OWNER';\t----- bird -----\tfinancial"
}