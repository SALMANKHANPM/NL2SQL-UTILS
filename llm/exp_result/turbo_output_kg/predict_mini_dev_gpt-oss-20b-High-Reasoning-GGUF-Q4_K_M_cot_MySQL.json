{
    "0": "SELECT\n    SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) /\n    SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS ratio\nFROM customers;\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT ym.CustomerID\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'LAM'\n  AND ym.Date >= '201201'\n  AND ym.Date <= '201212'\nORDER BY ym.Consumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE customers.Segment = 'SME'\n  AND yearmonth.Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT\n  (SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) -\n   SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END)) AS Difference\nFROM\n  yearmonth ym\nJOIN\n  customers c\n  ON ym.CustomerID = c.CustomerID\nWHERE\n  ym.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT \n    LEFT(Date,4) AS Year,\n    SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nGROUP BY Year\nORDER BY TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT\n    SUBSTRING(y.Date, 5, 2) AS PeakMonth\nFROM\n    yearmonth y\n    JOIN customers c ON y.CustomerID = c.CustomerID\nWHERE\n    c.Segment = 'SME'\n    AND y.Date BETWEEN '201301' AND '201312'\nGROUP BY\n    PeakMonth\nORDER BY\n    SUM(y.Consumption) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT\n  (SME.MinCons - LAM.MinCons) AS diff_SME_LAM,\n  (LAM.MinCons - KAM.MinCons) AS diff_LAM_KAM,\n  (KAM.MinCons - SME.MinCons) AS diff_KAM_SME\nFROM\n  (SELECT MIN(p.TotalConsumption) AS MinCons FROM\n      (SELECT ym.CustomerID, SUM(ym.Consumption) AS TotalConsumption\n       FROM yearmonth ym\n       JOIN customers c ON ym.CustomerID = c.CustomerID\n       WHERE LEFT(ym.Date,4) = '2013' AND c.Currency = 'CZK'\n       GROUP BY ym.CustomerID) p\n    JOIN customers c2 ON p.CustomerID = c2.CustomerID\n    WHERE c2.Segment = 'SME') SME,\n  (SELECT MIN(p.TotalConsumption) AS MinCons FROM\n      (SELECT ym.CustomerID, SUM(ym.Consumption) AS TotalConsumption\n       FROM yearmonth ym\n       JOIN customers c ON ym.CustomerID = c.CustomerID\n       WHERE LEFT(ym.Date,4) = '2013' AND c.Currency = 'CZK'\n       GROUP BY ym.CustomerID) p\n    JOIN customers c2 ON p.CustomerID = c2.CustomerID\n    WHERE c2.Segment = 'LAM') LAM,\n  (SELECT MIN(p.TotalConsumption) AS MinCons FROM\n      (SELECT ym.CustomerID, SUM(ym.Consumption) AS TotalConsumption\n       FROM yearmonth ym\n       JOIN customers c ON ym.CustomerID = c.CustomerID\n       WHERE LEFT(ym.Date,4) = '2013' AND c.Currency = 'CZK'\n       GROUP BY ym.CustomerID) p\n    JOIN customers c2 ON p.CustomerID = c2.CustomerID\n    WHERE c2.Segment = 'KAM') KAM;\t----- bird -----\tdebit_card_specializing",
    "7": "WITH seg_data AS (\n    SELECT c.Segment,\n           SUM(CASE WHEN SUBSTRING(y.Date,1,4) = '2012' THEN y.Consumption ELSE 0 END) AS cons_2012,\n           SUM(CASE WHEN SUBSTRING(y.Date,1,4) = '2013' THEN y.Consumption ELSE 0 END) AS cons_2013,\n           ((SUM(CASE WHEN SUBSTRING(y.Date,1,4) = '2013' THEN y.Consumption ELSE 0 END)) -\n             SUM(CASE WHEN SUBSTRING(y.Date,1,4) = '2012' THEN y.Consumption ELSE 0 END))\n            / NULLIF(SUM(CASE WHEN SUBSTRING(y.Date,1,4) = '2013' THEN y.Consumption ELSE 0 END),0) * 100\n           AS percent_increase\n    FROM yearmonth y\n    JOIN customers c ON y.CustomerID = c.CustomerID\n    WHERE c.Currency = 'EUR'\n      AND c.Segment IN ('SME', 'LAM', 'KAM')\n    GROUP BY c.Segment\n),\nranked AS (\n    SELECT *,\n           ROW_NUMBER() OVER (ORDER BY percent_increase DESC) AS r_desc,\n           ROW_NUMBER() OVER (ORDER BY percent_increase ASC) AS r_asc\n    FROM seg_data\n)\nSELECT CASE WHEN r_desc = 1 THEN 'biggest'\n            WHEN r_asc = 1 THEN 'lowest' END AS type,\n           Segment,\n           percent_increase\nFROM ranked\nWHERE r_desc = 1 OR r_asc = 1;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS total_consumption\nFROM yearmonth\nWHERE CustomerID = 6\n  AND LEFT(Date,6) BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT\n  (SELECT COUNT(*) FROM gasstations WHERE Country='CZE' AND Segment='discount') -\n  (SELECT COUNT(*) FROM gasstations WHERE Country='SVK' AND Segment='discount') AS discount_difference;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT\n  CASE\n    WHEN SUM(CASE WHEN c.Currency = 'CZK' THEN t.Amount ELSE 0 END) >\n         SUM(CASE WHEN c.Currency = 'EUR' THEN t.Amount ELSE 0 END)\n    THEN 'Yes'\n    ELSE 'No'\n  END AS MoreInCZK,\n  SUM(CASE WHEN c.Currency = 'CZK' THEN t.Amount ELSE 0 END) -\n  SUM(CASE WHEN c.Currency = 'EUR' THEN t.Amount ELSE 0 END) AS Difference\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT\n    SUM(CASE WHEN total_consumption > 46.73 THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS percentage_of_LAM_consumed_gt_46_73\nFROM (\n    SELECT c.CustomerID, COALESCE(SUM(ym.Consumption), 0) AS total_consumption\n    FROM customers c\n    LEFT JOIN yearmonth ym ON c.CustomerID = ym.CustomerID\n    WHERE c.Segment = 'LAM'\n    GROUP BY c.CustomerID\n) AS sub;\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT ROUND((100.0 * SUM(CASE WHEN `Consumption` > 528.3 THEN 1 ELSE 0 END) / COUNT(*)), 2) AS `percentage`\nFROM `yearmonth`\nWHERE `Date` LIKE '201202%' ;\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT SUM(Consumption) AS highest_monthly_consumption\nFROM yearmonth\nWHERE SUBSTRING(Date,1,4) = '2012'\nGROUP BY SUBSTRING(Date,5,2)\nORDER BY SUM(Consumption) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT p.Description\nFROM yearmonth ym\nJOIN transactions_1k t ON t.CustomerID = ym.CustomerID\nJOIN products p ON p.ProductID = t.ProductID\nWHERE LEFT(ym.Date, 6) = '201309';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.Country\nFROM gasstations AS g\nJOIN transactions_1k AS t ON g.GasStationID = t.GasStationID\nWHERE YEAR(t.Date) = 2013\n  AND MONTH(t.Date) = 6;\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT c.CustomerID) AS NumberOfCustomers\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Currency = 'EUR' AND y.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations gs ON t.GasStationID = gs.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE gs.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT t.Time\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) AS total_transactions\nFROM transactions_1k AS t\nJOIN gasstations AS g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE'\n  AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-24'\n  AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.`Segment`\nFROM `customers` AS c\nJOIN `transactions_1k` AS t\n  ON c.`CustomerID` = t.`CustomerID`\nWHERE t.`Date` = '2012-08-23'\n  AND t.`Time` = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) AS transaction_count\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-26'\n  AND t.Time BETWEEN '08:00:00' AND '09:00:00'\n  AND g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT c.Currency AS Nationality\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Price = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT\n    ROUND(100 * COUNT(DISTINCT c.CustomerID) / (SELECT COUNT(*) FROM customers), 2) AS percentage\nFROM\n    customers AS c\nJOIN\n    transactions_1k AS t ON c.CustomerID = t.CustomerID\nWHERE\n    t.`Date` = '2012-08-25'\n    AND c.`Currency` = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT \n  ((t2012.sum2012 - t2013.sum2013) / t2012.sum2012) AS decrease_rate\nFROM\n  (SELECT SUM(Consumption) AS sum2012\n   FROM yearmonth\n   WHERE CustomerID = (\n     SELECT CustomerID\n     FROM transactions_1k\n     WHERE Price = 634.8\n       AND Date = '2012-08-25'\n   )\n     AND Date LIKE '2012-%') t2012,\n  (SELECT SUM(Consumption) AS sum2013\n   FROM yearmonth\n   WHERE CustomerID = (\n     SELECT CustomerID\n     FROM transactions_1k\n     WHERE Price = 634.8\n       AND Date = '2012-08-25'\n   )\n     AND Date LIKE '2013-%') t2013;\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT (COUNT(CASE WHEN Segment = 'premium' THEN 1 END) / COUNT(*)) * 100 AS premium_percentage\nFROM gasstations\nWHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT\n    SUM(Amount * Price) AS total_spent,\n    SUM(CASE WHEN DATE_FORMAT(Date, '%Y%m') = '201201' THEN Amount * Price ELSE 0 END) AS january_2012_spent\nFROM transactions_1k\nWHERE CustomerID = 38508\n  AND GasStationID IS NOT NULL;\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.CustomerID, SUM(t.Price)/SUM(t.Amount) AS AvgPricePerItem, c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nGROUP BY c.CustomerID\nORDER BY SUM(t.Price) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT DISTINCT t.CustomerID, y.Consumption\nFROM transactions_1k t\nJOIN yearmonth y ON t.CustomerID = y.CustomerID\nWHERE t.ProductID = 5\n  AND t.Price / t.Amount > 29.00\n  AND y.Date = '201208';\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT `major`.`major_name`\nFROM `member`\nJOIN `major` ON `member`.`link_to_major` = `major`.`major_id`\nWHERE `member`.`first_name` = 'Angela'\n  AND `member`.`last_name` = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(DISTINCT m.member_id) AS num_medium_shirts\nFROM member AS m\nJOIN major AS ma ON m.link_to_major = ma.major_id\nJOIN attendance AS a ON a.link_to_member = m.member_id\nJOIN event AS e ON e.event_id = a.link_to_event\nWHERE ma.major_name = 'Student_Club'\n  AND e.event_name = 'Women''s Soccer'\n  AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) AS meeting_events\nFROM (\n    SELECT e.event_id\n    FROM event e\n    JOIN attendance a ON e.event_id = a.link_to_event\n    WHERE e.type = 'Meeting'\n    GROUP BY e.event_id\n    HAVING COUNT(DISTINCT a.link_to_member) > 10\n) AS sub;\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON a.link_to_event = e.event_id\nWHERE e.type <> 'fundraiser'\nGROUP BY e.event_id, e.event_name\nHAVING COUNT(DISTINCT a.link_to_member) > 20;\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(amount) AS total_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": "SELECT CONCAT(first_name, ' ', last_name) AS full_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT\n  CASE WHEN NOT EXISTS (\n      SELECT 1\n      FROM expense e\n      JOIN budget b ON e.link_to_budget = b.budget_id\n      JOIN event ev ON b.link_to_event = ev.event_id\n      WHERE ev.event_name = 'October Meeting'\n        AND ev.event_date = '2019-10-08'\n        AND e.approved <> 'True'\n  ) THEN 'All expenses approved' ELSE 'Some expenses not approved' END AS approval_status;\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(cost) AS average_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah'\n  AND m.last_name = 'Allen'\n  AND SUBSTRING(e.expense_date, 6, 2) IN ('09', '10');\t----- bird -----\tstudent_club",
    "38": "SELECT\n  COALESCE(\n    SUM(\n      CASE\n        WHEN CAST(SUBSTRING(`event`.`event_date`, 1, 4) AS UNSIGNED) = 2019\n        THEN `budget`.`spent`\n      END\n    ), 0\n  ) -\n  COALESCE(\n    SUM(\n      CASE\n        WHEN CAST(SUBSTRING(`event`.`event_date`, 1, 4) AS UNSIGNED) = 2020\n        THEN `budget`.`spent`\n      END\n    ), 0\n  ) AS difference\nFROM `budget`\nJOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`\nWHERE `event`.`status` = 'Student_Club';\t----- bird -----\tstudent_club",
    "39": "SELECT notes\nFROM income\nWHERE source = 'Fundraising'\n  AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name='Carlo' AND last_name='Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT b.event_status\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nWHERE e.expense_description = 'Post Cards, Posters'\n  AND e.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Brent'\n  AND member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) AS medium_tshirt_count\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business'\n  AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM major\nJOIN member ON member.link_to_major = major.major_id\nWHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM income AS i\nJOIN member AS m ON i.link_to_member = m.member_id\nWHERE m.first_name = 'Connor'\n  AND m.last_name = 'Hilton'\n  AND i.source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT DIVIDE(\n    SUM(CASE WHEN e.`event_name` = 'Yearly Kickoff' THEN b.`amount` ELSE 0 END),\n    SUM(CASE WHEN e.`event_name` = 'October Meeting' THEN b.`amount` ELSE 0 END)\n) AS ratio\nFROM `budget` b\nJOIN `event` e ON b.`link_to_event` = e.`event_id`\nWHERE b.`category` = 'Advertisement';\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_pizza_cost FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) AS number_of_cities\nFROM zip_code\nWHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT a.`link_to_member`) AS member_count\nFROM attendance AS a\nJOIN event AS e ON a.`link_to_event` = e.`event_id`\nWHERE e.`event_name` = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name\nFROM member AS m\nJOIN major AS j ON m.link_to_major = j.major_id\nWHERE j.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT e.`event_id`, e.`event_name`, DIVIDE(SUM(b.`spent`), SUM(b.`amount`)) AS ratio\nFROM event e\nJOIN budget b ON e.`event_id` = b.`link_to_event`\nWHERE e.`status` = 'Closed'\nGROUP BY e.`event_id`, e.`event_name`\nORDER BY DIVIDE(SUM(b.`spent`), SUM(b.`amount`)) DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(b.spent) AS max_spent\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent_food\nFROM budget\nWHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id, m.first_name, m.last_name\nHAVING COUNT(DISTINCT a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense ex ON ex.link_to_budget = b.budget_id\nORDER BY ex.cost ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": "SELECT\n    DIVIDE(\n        SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END),\n        SUM(ex.cost)\n    ) * 100 AS percentage\nFROM\n    expense ex\nJOIN\n    budget b ON ex.link_to_budget = b.budget_id\nJOIN\n    event e ON b.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "59": "SELECT source\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nORDER BY amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) AS num_members\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'Advertisement'\nORDER BY b.spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT CASE WHEN COUNT(*)>0 THEN 'Yes' ELSE 'No' END AS attended\nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nJOIN event e ON a.link_to_event = e.event_id\nWHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "63": "SELECT e.`cost`\nFROM `expense` e\nJOIN `budget` b ON e.`link_to_budget` = b.`budget_id`\nJOIN `event` ev ON b.`link_to_event` = ev.`event_id`\nWHERE e.`expense_description` = 'Posters'\n  AND ev.`event_name` = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN (\n   SELECT link_to_event, MIN(remaining) AS min_remaining\n   FROM budget\n   GROUP BY link_to_event\n) AS bmin ON e.event_id = bmin.link_to_event\nWHERE e.status = 'Closed' AND bmin.min_remaining < 0\nORDER BY bmin.min_remaining\nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT e.expense_description AS expense_type,\n       SUM(e.cost) AS total_approved_cost\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting'\n  AND e.approved = 'yes'\nGROUP BY e.expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT SUM(amount) AS total_budgeted\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker';\n\nSELECT category, SUM(amount) AS category_amount\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY category\nORDER BY category_amount ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name, m.last_name, COALESCE(SUM(e.cost), 0) AS total_cost\nFROM member AS m\nLEFT JOIN expense AS e ON e.link_to_member = m.member_id\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member_id, m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT DISTINCT e.expense_description\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT type AS category\nFROM event\nWHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, maj.department, maj.college\nFROM member m\nJOIN major maj ON m.link_to_major = maj.major_id\nWHERE maj.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT DISTINCT b.category\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.location = 'MU 215'\n  AND e.type = 'Guest Speaker'\n  AND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT DIVIDE(COUNT(CASE WHEN i.amount = 50 THEN 1 END), COUNT(*)) * 100 AS percentage\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.t_shirt_size = 'Medium' AND m.position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT DISTINCT CONCAT(m.first_name, ' ', m.last_name) AS full_name, m.phone\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, e.cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, i.amount\nFROM `income` i\nJOIN `member` m ON i.`link_to_member` = m.`member_id`\nWHERE i.`date_received` = '9/9/2019';\t----- bird -----\tstudent_club",
    "78": "SELECT\n  SUM(CASE WHEN `SEX`='M' AND `Admission`='+' THEN 1 ELSE 0 END) AS MaleInPatientCount,\n  SUM(CASE WHEN `SEX`='M' AND `Admission`='-' THEN 1 ELSE 0 END) AS MaleOutPatientCount,\n  DIVIDE(\n    SUM(CASE WHEN `SEX`='M' AND `Admission`='+' THEN 1 ELSE 0 END),\n    SUM(CASE WHEN `SEX`='M' AND `Admission`='-' THEN 1 ELSE 0 END)\n  ) AS DeviationPercentage\nFROM `Patient`;\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT (SUM(IF(SEX = 'F' AND YEAR(Birthday) > 1930, 1, 0)) / NULLIF(SUM(IF(SEX = 'F', 1, 0)), 0)) * 100 AS Percentage\nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT DIVIDE(\n    SUM(IF(Admission = '+', 1, 0)),\n    SUM(IF(Admission = '-', 1, 0))\n) AS ratio\nFROM Patient\nWHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT p.Diagnosis, l.Date\nFROM Patient p\nJOIN Laboratory l ON l.ID = p.ID\nWHERE p.ID = 30609\nORDER BY l.Date;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT p.ID, p.SEX, p.Birthday\nFROM Patient AS p\nJOIN Laboratory AS l ON p.ID = l.ID\nWHERE l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT DISTINCT p.ID,\n       TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) AS Age\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT p.ID,\n       p.SEX,\n       e.Diagnosis\nFROM Patient AS p\nJOIN Examination AS e\n  ON p.ID = e.ID\nWHERE e.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) AS FemalePatients1997Outpatient\nFROM Patient\nWHERE SEX = 'F'\n  AND YEAR(`Description`) = 1997\n  AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(DISTINCT p.`ID`) AS NumberOfWomen\nFROM `Patient` p\nJOIN `Examination` e ON p.`ID` = e.`ID`\nWHERE e.`Thrombosis` = 1\n  AND YEAR(e.`Examination Date`) = 1997\n  AND p.`SEX` = 'F';\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT e.`Symptoms`, e.`Diagnosis`\nFROM `Examination` e\nJOIN `Patient` p ON e.`ID` = p.`ID`\nWHERE p.`Birthday` = (SELECT MAX(`Birthday`) FROM `Patient`)\n  AND e.`Symptoms` IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT L.`Date` AS LabDate,\n       (YEAR(P.`First Date`) - YEAR(P.`Birthday`)) AS AgeAtArrival\nFROM Patient P\nJOIN Examination E ON E.`ID` = P.`ID`\nJOIN Laboratory L ON L.`ID` = P.`ID`\nWHERE E.`Diagnosis` = 'SJS'\nORDER BY P.`Birthday` ASC, L.`Date` ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT DIVIDE(\n    SUM(CASE WHEN p.SEX = 'M' AND l.UA <= 8.0 THEN 1 ELSE 0 END),\n    SUM(CASE WHEN p.SEX = 'F' AND l.UA <= 6.5 THEN 1 ELSE 0 END)\n) AS male_to_female_ratio\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT p.ID) AS UnderagePatientsExamined\nFROM Patient p\nINNER JOIN Examination e ON p.ID = e.ID\nWHERE e.`Examination Date` IS NOT NULL\n  AND YEAR(e.`Examination Date`) BETWEEN 1990 AND 1993\n  AND p.Birthday IS NOT NULL\n  AND TIMESTAMPDIFF(YEAR, p.Birthday, e.`Examination Date`) < 18;\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT\n    YEAR(E.`Examination Date`) - YEAR(P.Birthday) AS Age,\n    E.Diagnosis\nFROM Laboratory L\nJOIN Examination E ON L.ID = E.ID\nJOIN Patient P ON P.ID = E.ID\nORDER BY L.HGB DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT e.`aCL IgM`\nFROM Examination e\nJOIN Patient p ON e.`ID` = p.`ID`\nWHERE p.`Diagnosis` = 'SLE'\n  AND p.`Description` = '1994-02-19'\n  AND e.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n    (SUM(IF(l.`Date` LIKE '1981-11-%', l.`T-CHO`, 0)) -\n     SUM(IF(l.`Date` LIKE '1981-12-%', l.`T-CHO`, 0))\n    ) / \n    SUM(IF(l.`Date` LIKE '1981-12-%', l.`T-CHO`, 0)) AS decrease_rate\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT E.ID\nFROM Examination E\nJOIN Laboratory L ON E.ID = L.ID\nWHERE E.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31'\n  AND L.GPT > 30\n  AND L.ALB < 4\nORDER BY E.ID;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(DISTINCT e.ID) AS num_patients\nFROM Examination e\nWHERE e.`Thrombosis` = 2\n  AND e.`ANA Pattern` = 'S'\n  AND e.`aCL IgM` > 1.2 * (SELECT AVG(`aCL IgM`) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.`First Date`, p.Admission, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '-'\n  AND l.Date LIKE '1991-10%'\n  AND l.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(L.ALB) AS avg_alb\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'F'\n  AND L.PLT > 400\n  AND P.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) AS Female_APS_Count\nFROM Patient\nWHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT DIVIDE(SUM(`SEX` = 'F'), COUNT(`SEX`)) * 100 AS percentage\nFROM `Patient`\nWHERE YEAR(`Birthday`) = 1980\n  AND `Diagnosis` = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT\n  CASE\n    WHEN l.`UA` > 8.0 AND p.`SEX` = 'M' THEN 'Yes'\n    WHEN l.`UA` > 6.5 AND p.`SEX` = 'F' THEN 'Yes'\n    ELSE 'No'\n  END AS `Uric Acid Normal`\nFROM `Patient` p\nLEFT JOIN `Laboratory` l ON p.`ID` = l.`ID`\nWHERE p.`ID` = 57266;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\n  AND Laboratory.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` \nFROM `Patient` \nINNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` \nWHERE `Laboratory`.`UN` = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT P.SEX, L.ID, L.`T-BIL` \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.`T-BIL` >= 2.0 \nORDER BY P.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT DIVIDE(SUM(YEAR(NOW()) - YEAR(p.Birthday)), COUNT(p.ID)) AS average_age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.TG >= 200\n  AND (YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT l.ID) AS male_patients\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE p.SEX = 'M'\n  AND YEAR(p.Birthday) BETWEEN 1936 AND 1956\n  AND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT p.`ID`, p.`SEX`, (YEAR(CURRENT_TIMESTAMP()) - YEAR(p.`Birthday`)) AS `age`\nFROM `Patient` p\nJOIN `Laboratory` l ON p.`ID` = l.`ID`\nWHERE l.`GLU` >= 180 AND l.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.ID, p.Diagnosis, (YEAR(CURDATE()) - YEAR(p.Birthday)) AS Age\nFROM Patient p\nJOIN Laboratory l ON l.ID = p.ID\nWHERE l.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT p.ID, p.SEX\nFROM Patient p\nWHERE p.Diagnosis = 'SLE'\n  AND EXISTS (\n    SELECT 1\n    FROM Laboratory l\n    WHERE l.ID = p.ID\n      AND l.HGB > 10\n      AND l.HGB < 17\n  )\nORDER BY p.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT L.ID, YEAR(CURRENT_DATE) - YEAR(P.Birthday) AS age\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE L.HCT >= 52\nGROUP BY L.ID\nHAVING COUNT(*) >= 2;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT\n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END)          AS lower_count,\n    SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END)          AS higher_count,\n    (SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) -\n     SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END))      AS difference\nFROM Laboratory;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT p.ID,\n       p.SEX,\n       p.Birthday,\n       l.Date,\n       l.PLT\nFROM Patient p\nJOIN Laboratory l\n  ON p.ID = l.ID\nWHERE YEAR(l.Date) = 1984\n  AND (YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday)) < 50\n  AND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT DIVIDE(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END), COUNT(*)) * 100 AS FemalePercentage\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE YEAR(CURRENT_TIMESTAMP()) - YEAR(Birthday) > 55\n  AND PT >= 14;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT p.ID) AS male_patients_abnormal_fibrinogen\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.WBC > 3.5\n  AND l.WBC < 9.0\n  AND (l.FG <= 150 OR l.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT l.ID) AS patient_count\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE l.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(DISTINCT l.ID) AS patient_count_with_symptoms\nFROM Laboratory l\nJOIN Examination e ON l.ID = e.ID\nWHERE l.IGG > 900\n  AND l.IGG < 2000\n  AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.IGA > 80\n  AND e.IGA < 500\n  AND YEAR(p.`First Date`) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis\nFROM Examination\nWHERE aCL_IgM <= 40 OR aCL_IgM >= 400\n  AND Diagnosis IS NOT NULL\nGROUP BY Diagnosis\nORDER BY COUNT(DISTINCT ID) DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(DISTINCT p.ID) AS num_patients\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE l.CRP = '+'\n  AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) AS num_patients\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE L.CRE >= 1.5\n  AND (YEAR(CURDATE()) - YEAR(P.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT p.ID) AS patient_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.RNP IN ('-', '+-')\n  AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT e.ID) AS Normal_SM_No_Thrombosis\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE l.SM IN ('-', '+-', 'negative', '0')\n  AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT P.ID) AS FemaleNormalAntiScl70NoSymptoms\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nJOIN Examination E ON P.ID = E.ID\nWHERE P.SEX = 'F'\n  AND L.SC170 IN ('negative', '0')\n  AND E.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT p.ID) AS male_normal_count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.CENTROMEA IN ('-','+-')\n  AND l.SSB IN ('-','+-');\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MAX(P.Birthday) AS youngest_birthdate\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT l.ID) AS NumPatients\nFROM Patient p\nJOIN Laboratory l ON l.ID = p.ID\nJOIN Examination e ON e.ID = p.ID\nWHERE l.CPK < 250\n  AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.`season` = '2015/2016'\nGROUP BY l.id, l.name\nORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT T.team_long_name\nFROM Match M\nJOIN League L ON M.league_id = L.id\nJOIN Team T ON M.away_team_api_id = T.team_api_id\nWHERE L.name = 'Scotland Premier League'\n  AND M.season = '2009/2010'\n  AND M.away_team_goal > M.home_team_goal\nGROUP BY T.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT t.`team_long_name`, ta.`buildUpPlaySpeed`\nFROM `Team` t\nJOIN `Team_Attributes` ta ON t.`team_api_id` = ta.`team_api_id`\nORDER BY ta.`buildUpPlaySpeed` DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT l.name\nFROM League l\nJOIN Match m ON m.league_id = l.id\nWHERE m.season = '2015/2016'\nGROUP BY l.id, l.name\nORDER BY SUM(m.home_team_goal = m.away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT p.player_name,\n       TIMESTAMPDIFF(YEAR, p.birthday, CURDATE()) AS age\nFROM Player_Attributes pa\nJOIN Player p\n  ON pa.player_api_id = p.player_api_id\nWHERE pa.sprint_speed >= 97\n  AND YEAR(pa.date) BETWEEN 2013 AND 2015;\t----- bird -----\teuropean_football_2",
    "133": "SELECT l.name AS league_name, COUNT(*) AS total_matches\nFROM Match m\nJOIN League l ON m.league_id = l.id\nGROUP BY l.id, l.name\nORDER BY total_matches DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50\n  AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT DISTINCT t.team_long_name\nFROM Team_Attributes t\nWHERE strftime('%Y', t.date) = '2012'\n  AND t.buildUpPlayPassing IS NOT NULL\n  AND t.buildUpPlayPassing > (\n    SELECT DIVIDE(SUM(buildUpPlayPassing), COUNT(team_long_name))\n    FROM Team_Attributes\n    WHERE strftime('%Y', date) = '2012'\n      AND buildUpPlayPassing IS NOT NULL\n  );\t----- bird -----\teuropean_football_2",
    "136": "SELECT DIVIDE(SUM(CASE WHEN pa.preferred_foot = 'left' THEN 1 ELSE 0 END) * 100, COUNT(pa.player_fifa_api_id)) AS left_foot_percentage\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE YEAR(p.birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "137": "SELECT DIVIDE(SUM(pa.long_shots), COUNT(pa.player_fifa_api_id)) AS avg_long_shots\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id\nWHERE p.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": "SELECT\n  p.player_name\nFROM\n  Player p\nJOIN\n  Player_Attributes pa\nON\n  p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE\n  p.height > 180\nGROUP BY\n  p.id, p.player_name\nORDER BY\n  DIVIDE(SUM(pa.heading_accuracy), COUNT(pa.player_fifa_api_id)) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT `League`.`name`\nFROM `League`\nJOIN `Match` ON `Match`.`league_id` = `League`.`id`\nWHERE `Match`.`season` = '2009/2010'\nGROUP BY `League`.`id`, `League`.`name`\nHAVING SUM(`Match`.`home_team_goal`) / COUNT(DISTINCT `Match`.`id`) > SUM(`Match`.`away_team_goal`) / COUNT(DISTINCT `Match`.`id`);\t----- bird -----\teuropean_football_2",
    "140": "SELECT * FROM Player WHERE SUBSTR(birthday,1,7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating\nFROM Player AS p\nJOIN Player_Attributes AS pa\n  ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.player_name = 'Gabriel Tamas'\n  AND DATE_FORMAT(pa.date, '%Y') = '2011';\t----- bird -----\teuropean_football_2",
    "142": "SELECT SUM(home_team_goal) / COUNT(DISTINCT Match.id) AS avg_home_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Poland' AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT P.player_name\nFROM Player P\nJOIN Player_Attributes PA ON P.id = PA.player_api_id\nWHERE P.height BETWEEN (SELECT MIN(height) FROM Player) AND (SELECT MAX(height) FROM Player)\nGROUP BY P.id\nORDER BY AVG(PA.finishing) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT SUM(t2.overall_rating)/COUNT(t2.id) AS avg_overall_rating\nFROM Player_Attributes t2\nJOIN Player p ON t2.player_api_id = p.player_api_id\nWHERE LEFT(t2.date,4) >= '2010'\n  AND LEFT(t2.date,4) <= '2015'\n  AND p.height > 170;\t----- bird -----\teuropean_football_2",
    "145": "SELECT\n  (SELECT AVG(pa.ball_control)\n   FROM Player p\n   LEFT JOIN Player_Attributes pa ON pa.player_api_id = p.player_api_id\n   WHERE p.player_name = 'Abdou Diallo') -\n  (SELECT AVG(pa.ball_control)\n   FROM Player p\n   LEFT JOIN Player_Attributes pa ON pa.player_api_id = p.player_api_id\n   WHERE p.player_name = 'Aaron Appindangoye') AS difference;\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name\nFROM Player\nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada')\nORDER BY birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) AS number_of_players\nFROM Player_Attributes\nWHERE preferred_foot = 'left'\n  AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT p.id) AS number_of_players\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE YEAR(p.birthday) < 1986\n  AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": "SELECT P.player_name\nFROM Player_Attributes PA\nJOIN Player P ON PA.player_api_id = P.player_api_id\nWHERE PA.volleys > 70\n  AND PA.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) AS matches\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgium Jupiler League'\n  AND SUBSTR(Match.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT l.name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.`season` = '2008/2009'\nGROUP BY l.id, l.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((a.overall_rating - b.overall_rating) / b.overall_rating) * 100 AS percentage_increase\nFROM (\n    SELECT pa.overall_rating\n    FROM Player_Attributes pa\n    JOIN Player p ON pa.player_api_id = p.player_api_id\n    WHERE p.player_name = 'Ariel Borysiuk'\n    ORDER BY pa.date DESC\n    LIMIT 1\n) a\nCROSS JOIN (\n    SELECT pa.overall_rating\n    FROM Player_Attributes pa\n    JOIN Player p ON pa.player_api_id = p.player_api_id\n    WHERE p.player_name = 'Paulin Puel'\n    ORDER BY pa.date DESC\n    LIMIT 1\n) b;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) AS avg_overall_rating\nFROM Player p\nJOIN Player_Attributes pa\n  ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT ta.chanceCreationPassing, ta.chanceCreationPassingClass\nFROM Team_Attributes ta\nJOIN Team t ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Ajax'\nORDER BY ta.chanceCreationPassing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "156": "SELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON p.player_api_id = pa.player_api_id\nWHERE pa.overall_rating = 77\n  AND pa.date LIKE '2016-06-23%'\nORDER BY p.birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Aaron Mooy'\n  AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": "SELECT pa.attacking_work_rate\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Francesco Migliore'\n  AND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT MIN(pa.`date`) AS first_date_of_highest_crossing\nFROM `Player` p\nJOIN `Player_Attributes` pa ON p.`player_api_id` = pa.`player_api_id`\nWHERE p.`player_name` = 'Kevin Constant'\nAND pa.`crossing` = (\n    SELECT MAX(pa2.`crossing`)\n    FROM `Player_Attributes` pa2\n    WHERE pa2.`player_api_id` = p.`player_api_id`\n);\t----- bird -----\teuropean_football_2",
    "160": "SELECT TA.buildUpPlayPassingClass\nFROM Team_Attributes TA\nJOIN Team T ON T.team_api_id = TA.team_api_id\nWHERE T.team_long_name = 'FC Lorient' AND TA.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT ta.`defenceAggressionClass`\nFROM Team AS t\nJOIN Team_Attributes AS ta\n  ON t.`team_api_id` = ta.`team_api_id`\nWHERE t.`team_long_name` = 'Hannover 96'\n  AND ta.`date` LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) AS avg_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Marko Arnautovic'\n  AND LEFT(pa.date, 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT DIVIDE((ld.overall_rating - jb.overall_rating), ld.overall_rating) * 100 AS percentage\nFROM\n  (SELECT pa.overall_rating\n   FROM Player_Attributes pa\n   JOIN Player p ON pa.player_api_id = p.player_api_id\n   WHERE p.player_name = 'Landon Donovan'\n     AND pa.date = '2013/7/12') AS ld,\n  (SELECT pa.overall_rating\n   FROM Player_Attributes pa\n   JOIN Player p ON pa.player_api_id = p.player_api_id\n   WHERE p.player_name = 'Jordan Bowery'\n     AND pa.date = '2013/7/12') AS jb;\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "165": "SELECT P.player_name\nFROM Player P\nJOIN Player_Attributes PA ON P.player_fifa_api_id = PA.player_fifa_api_id\nORDER BY PA.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT DISTINCT p.player_name\nFROM Player AS p\nJOIN Player_Attributes AS pa\n  ON p.player_api_id = pa.player_api_id\nWHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT t.team_short_name\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) AS player_count\nFROM Player\nWHERE player_name LIKE 'Aaron%'\n  AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) AS difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id\nFROM Player_Attributes\nWHERE preferred_foot = 'right'\nORDER BY potential ASC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) AS num_players\nFROM Player_Attributes\nWHERE preferred_foot = 'left'\n  AND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE preferred_foot = 'left');\t----- bird -----\teuropean_football_2",
    "172": "SELECT M.home_team_goal, M.away_team_goal\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE L.name = 'Belgium Jupiler League'\n  AND M.date LIKE '2008-09-24%';\t----- bird -----\teuropean_football_2",
    "173": "SELECT ta.buildUpPlaySpeedClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing, pa.curve\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "175": "SELECT L.name\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2015/2016'\nGROUP BY L.id, L.name\nORDER BY COUNT(*) DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT t.team_long_name\nFROM `Match` m\nJOIN `Team` t ON m.away_team_api_id = t.team_api_id\nORDER BY m.away_team_goal DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "177": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_api_id\nORDER BY pa.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": "SELECT ROUND(100.0 * SUM(CASE WHEN pa.overall_rating > 70 THEN 1 ELSE 0 END) / COUNT(*), 2) AS percentage\nFROM Player p\nJOIN Player_Attributes pa ON pa.player_api_id = p.player_api_id\nWHERE p.height < 180\n  AND p.height IS NOT NULL\n  AND pa.overall_rating IS NOT NULL;\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 20\nORDER BY q.q1 DESC\nLIMIT 5;\t----- bird -----\tformula_1",
    "180": "SELECT d.surname\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 19\nORDER BY TIME_TO_SEC(STR_TO_DATE(q.q2, '%i:%s.%f')) ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "181": "SELECT r.name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT DISTINCT c.lat, c.lng\nFROM circuits AS c\nJOIN races AS r ON c.circuitId = r.circuitId\nWHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": "SELECT c.lat, c.lng\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT q.q1\nFROM qualifying q\nINNER JOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 354\n  AND d.forename = 'Bruno'\n  AND d.surname = 'Senna';\t----- bird -----\tformula_1",
    "185": "SELECT number\nFROM qualifying\nWHERE raceId = 903\n  AND q3 LIKE '1:54%';\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) AS not_finished\nFROM results\nWHERE raceId = (\n    SELECT raceId\n    FROM races\n    WHERE year = 2007\n      AND name = 'Bahrain Grand Prix'\n)\n  AND time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 592 AND r.time IS NOT NULL\nORDER BY d.dob\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT d.forename, d.surname, d.url\nFROM lapTimes l\nJOIN drivers d ON l.driverId = d.driverId\nWHERE l.raceId = 161\n  AND l.time LIKE '0:01:27%';\t----- bird -----\tformula_1",
    "189": "SELECT circuits.lat, circuits.lng\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT c.url\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE cr.raceId = 9\nORDER BY cr.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "191": "SELECT d.code\nFROM drivers d\nJOIN qualifying q ON q.driverId = d.driverId\nWHERE q.raceId = 45\n  AND q.q3 LIKE '0:01:33%';\t----- bird -----\tformula_1",
    "192": "SELECT s.year, s.url\nFROM seasons s\nJOIN races r ON s.year = r.year\nWHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM drivers AS d\nINNER JOIN results AS r\n  ON d.driverId = r.driverId\nWHERE r.raceId = 872\n  AND r.time IS NOT NULL\n  AND d.dob = (\n    SELECT MAX(d2.dob)\n    FROM drivers AS d2\n    INNER JOIN results AS r2\n      ON d2.driverId = r2.driverId\n    WHERE r2.raceId = 872\n      AND r2.time IS NOT NULL\n  )\nLIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results);\t----- bird -----\tformula_1",
    "195": "SELECT DIVIDE(\n    ((CAST((SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 853) AS DECIMAL(10,2)) -\n      CAST((SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 854) AS DECIMAL(10,2)))\n    ) * 100,\n    CAST((SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 853) AS DECIMAL(10,2))\n  ) AS percent_faster;\t----- bird -----\tformula_1",
    "196": "SELECT DIVIDE(\n    COUNT(CASE WHEN r.`time` IS NOT NULL THEN 1 END),\n    COUNT(r.`driverId`)\n) AS completion_rate\nFROM `results` r\nJOIN `races` ra ON r.`raceId` = ra.`raceId`\nWHERE ra.`date` = '1983-07-16';\t----- bird -----\tformula_1",
    "197": "SELECT name\nFROM races\nWHERE YEAR(date) = (SELECT YEAR(MIN(date)) FROM races)\n  AND MONTH(date) = (SELECT MONTH(MIN(date)) FROM races);\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, ds.points AS points\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nORDER BY ds.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT d.forename, d.surname, r.name\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE lt.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time_ms\nFROM lapTimes\nJOIN races ON lapTimes.raceId = races.raceId\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis'\n  AND drivers.surname = 'Hamilton'\n  AND races.year = 2009\n  AND races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "201": "SELECT DIVIDE(\n    SUM(CASE WHEN results.position > 1 THEN 1 ELSE 0 END),\n    COUNT(DISTINCT results.raceId)\n) AS percentage\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.surname = 'Hamilton'\n  AND races.year >= 2010;\t----- bird -----\tformula_1",
    "202": "SELECT CONCAT(d.forename,' ',d.surname) AS full_name,\n       d.nationality,\n       ds.max_points\nFROM drivers AS d\nJOIN (\n      SELECT driverId,\n             SUM(wins)   AS win_count,\n             MAX(points) AS max_points\n      FROM driverStandings\n      GROUP BY driverId\n     ) AS ds\n  ON d.driverId = ds.driverId\nORDER BY ds.win_count DESC, ds.max_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "203": "SELECT YEAR(CURRENT_TIMESTAMP) - YEAR(dob) AS age, CONCAT(forename, ' ', surname) AS name\nFROM drivers\nWHERE nationality = 'Japanese' AND dob IS NOT NULL\nORDER BY dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT r.name AS race_name, c.name AS circuit_name, c.location\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005;\t----- bird -----\tformula_1",
    "205": "SELECT DISTINCT r.name\nFROM results AS res\nJOIN drivers AS d ON res.driverId = d.driverId\nJOIN races AS r ON res.raceId = r.raceId\nWHERE d.forename = 'Alex'\n  AND d.surname = 'Yoong'\n  AND res.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT r.name AS race, r.year\nFROM races r\nJOIN lapTimes lt ON r.raceId = lt.raceId\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nORDER BY lt.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT r.name AS race_name, res.points\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY r.year, r.round\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT ROUND((SUM(CASE WHEN c.country = 'Germany' THEN 1 ELSE 0 END) / COUNT(*)) * 100, 2) AS percentage\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng\nFROM circuits\nWHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef\nFROM circuits\nWHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "212": "SELECT d.driverRef\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.year = 2007\n  AND ra.name = 'Canadian Grand Prix'\n  AND r.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT r.year, r.round, r.name AS race_name\nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY res.rank ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(r.fastestLapSpeed) AS max_fastestLapSpeed\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2009\n  AND ra.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "215": "SELECT r.positionOrder AS final_rank\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.forename = 'Lewis'\n  AND d.surname = 'Hamilton'\n  AND ra.year = 2008\n  AND ra.name = 'Chinese Grand Prix';\t----- bird -----\tformula_1",
    "216": "SELECT r.time AS finish_time\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008\n  AND ra.name = 'Chinese Grand Prix'\n  AND r.position = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT r.driverId) AS driver_count\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008\n  AND ra.name LIKE '%Chinese Grand Prix%'\n  AND r.position IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT\n    ROUND(((TIME_TO_SEC(last_driver.time) - TIME_TO_SEC(champ.time)) / TIME_TO_SEC(last_driver.time)) * 100, 2) AS pct_faster\nFROM\n    (SELECT time\n     FROM results\n     WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')\n       AND position = 1\n       AND time IS NOT NULL\n     LIMIT 1) AS champ\nCROSS JOIN\n    (SELECT time\n     FROM results\n     WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')\n       AND time IS NOT NULL\n     ORDER BY position DESC\n     LIMIT 1) AS last_driver;\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) AS number_of_circuits\nFROM circuits\nWHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(total_points) AS max_points\nFROM (\n  SELECT c.constructorId, c.name, SUM(cs.points) AS total_points\n  FROM constructors c\n  JOIN constructorStandings cs ON c.constructorId = cs.constructorId\n  WHERE c.nationality = 'British'\n  GROUP BY c.constructorId, c.name\n) AS sub;\t----- bird -----\tformula_1",
    "221": "SELECT DISTINCT c.name\nFROM constructors AS c\nJOIN constructorStandings AS cs ON c.constructorId = cs.constructorId\nWHERE cs.raceId = 291\n  AND cs.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) \nFROM (\n    SELECT cr.constructorId \n    FROM constructorResults cr\n    JOIN constructors c ON cr.constructorId = c.constructorId\n    WHERE c.nationality = 'Japanese' AND cr.points = 0\n    GROUP BY cr.constructorId \n    HAVING COUNT(DISTINCT cr.raceId) = 2\n) AS t;\t----- bird -----\tformula_1",
    "223": "SELECT\n  (COUNT(DISTINCT res.driverId) * 100.0 /\n   (SELECT COUNT(DISTINCT res2.driverId)\n    FROM results res2\n    JOIN races r2 ON res2.raceId = r2.raceId\n    JOIN drivers d2 ON res2.driverId = d2.driverId\n    WHERE d2.nationality = 'Japanese' AND r2.year BETWEEN 2007 AND 2009)\n  ) AS race_completion_percentage\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.nationality = 'Japanese'\n  AND r.year BETWEEN 2007 AND 2009\n  AND res.time IS NOT NULL;\t----- bird -----\tformula_1",
    "224": "SELECT r.year,\n       AVG( TIME_TO_SEC(SUBSTRING(res.time, 1, 8))\n            + CAST(SUBSTRING_INDEX(res.time, '.', -1) AS DECIMAL(10,3))/1000\n       ) AS avg_seconds\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nWHERE res.position = 1\n  AND r.year < 1975\n  AND res.time IS NOT NULL\nGROUP BY r.year;\t----- bird -----\tformula_1",
    "225": "SELECT lt.lap\nFROM lapTimes lt\nJOIN races r ON lt.raceId = r.raceId\nWHERE r.year = 2009\n  AND lt.driverId = (\n    SELECT ds.driverId\n    FROM driverStandings ds\n    JOIN races r2 ON ds.raceId = r2.raceId\n    WHERE r2.year = 2009\n    GROUP BY ds.driverId\n    ORDER BY SUM(ds.points) DESC\n    LIMIT 1\n  )\nORDER BY lt.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(CAST(SUBSTRING_INDEX(results.fastestLapSpeed, ' ', 1) AS DECIMAL(10,2))) AS avg_fastest_lap_speed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2009\n  AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "227": "SELECT\n    100.0 *\n    (SELECT COUNT(DISTINCT res.driverId)\n     FROM results res\n     JOIN races r ON res.raceId = r.raceId\n     JOIN drivers d ON res.driverId = d.driverId\n     WHERE r.year BETWEEN 2000 AND 2005\n       AND YEAR(d.dob) < 1985\n       AND res.laps > 50)\n    /\n    (SELECT COUNT(DISTINCT res.driverId)\n     FROM results res\n     JOIN races r ON res.raceId = r.raceId\n     WHERE r.year BETWEEN 2000 AND 2005) AS percentage;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverId) AS FrenchDriversCount\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE d.nationality = 'French'\n  AND lt.milliseconds < 120000;\t----- bird -----\tformula_1",
    "229": "SELECT driverRef FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT\n    GROUP_CONCAT(code ORDER BY dob DESC SEPARATOR ', ') AS codes,\n    SUM(CASE WHEN nationality IN ('Netherlands', 'Dutch') THEN 1 ELSE 0 END) AS netherlandic_count\nFROM (\n    SELECT code, nationality, dob\n    FROM drivers\n    ORDER BY dob DESC\n    LIMIT 3\n) sub;\t----- bird -----\tformula_1",
    "231": "SELECT driverRef\nFROM drivers\nWHERE nationality = 'German'\n  AND YEAR(dob) = (\n    SELECT MIN(YEAR(dob))\n    FROM drivers\n    WHERE nationality = 'German'\n  );\t----- bird -----\tformula_1",
    "232": "SELECT DISTINCT d.driverId, d.code\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE YEAR(d.dob) = 1971\n  AND lt.milliseconds = (\n        SELECT MIN(l2.milliseconds)\n        FROM lapTimes l2\n        WHERE l2.raceId = lt.raceId\n    );\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) AS disqualified_finishers\nFROM results\nWHERE raceId > 50\n  AND raceId < 100\n  AND statusId = 2\n  AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "234": "SELECT c.location, c.lat, c.lng, COUNT(*) OVER () AS total_circuits\nFROM circuits c\nWHERE c.country = 'Austria';\t----- bird -----\tformula_1",
    "235": "SELECT r.year, r.name, r.date, r.time\nFROM qualifying q\nJOIN races r ON r.raceId = q.raceId\nJOIN drivers d ON d.driverId = q.driverId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY r.date\nLIMIT 1;\t----- bird -----\tformula_1",
    "236": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name, SUM(p.duration)/COUNT(p.duration) AS avg_duration\nFROM drivers d\nJOIN pitStops p ON d.driverId = p.driverId\nWHERE d.nationality = 'German'\n  AND YEAR(d.dob) BETWEEN 1980 AND 1985\nGROUP BY d.driverId, d.forename, d.surname\nORDER BY avg_duration ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT CONCAT(d.forename, ' ', d.surname) AS champion, r.time AS finish_time\nFROM races race\nJOIN results r ON race.raceId = r.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE race.year = 2008\n  AND race.name LIKE '%Canadian%'\n  AND r.position = 1;\t----- bird -----\tformula_1",
    "238": "SELECT c.constructorRef, c.url\nFROM constructors AS c\nJOIN results AS r ON c.constructorId = r.constructorId\nJOIN races AS rs ON r.raceId = rs.raceId\nWHERE rs.year = 2009\n  AND rs.round = 18\n  AND rs.name = 'Singapore Grand Prix'\n  AND r.position = 1;\t----- bird -----\tformula_1",
    "239": "SELECT DISTINCT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT SUM(cr.points) AS score, c.name, c.nationality\nFROM constructorResults cr\nJOIN races r ON r.raceId = cr.raceId\nJOIN circuits ci ON r.circuitId = ci.circuitId\nJOIN constructors c ON c.constructorId = cr.constructorId\nWHERE ci.circuitRef = 'monaco'\n  AND r.year BETWEEN 1980 AND 2010\nGROUP BY cr.constructorId\nORDER BY score DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name\nFROM circuits c\nJOIN races r ON r.circuitId = c.circuitId\nJOIN qualifying q ON q.raceId = r.raceId\nJOIN drivers d ON d.driverId = q.driverId\nWHERE r.year = 2008\n  AND c.name = 'Marina Bay Street Circuit'\n  AND q.q3 IS NOT NULL\nORDER BY q.q3\nLIMIT 1;\t----- bird -----\tformula_1",
    "242": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name,\n       d.nationality,\n       r.name AS race_name\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.driverId = (\n    SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1\n)\nORDER BY r.date ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "243": "SELECT MAX(accidents) AS accidents\nFROM (\n    SELECT r.driverId, SUM(r.statusId = 3) AS accidents\n    FROM results r\n    JOIN races rs ON r.raceId = rs.raceId\n    WHERE rs.name = 'Canadian Grand Prix'\n    GROUP BY r.driverId\n) sub;\t----- bird -----\tformula_1",
    "244": "SELECT d.forename, d.surname\nFROM drivers d\nJOIN lapTimes l ON d.driverId = l.driverId\nWHERE l.driverId IN (\n    SELECT driverId\n    FROM driverStandings\n    GROUP BY driverId\n    ORDER BY SUM(points) DESC\n    LIMIT 20\n)\nAND l.milliseconds = (\n    SELECT MIN(milliseconds)\n    FROM lapTimes\n    WHERE driverId IN (\n        SELECT driverId\n        FROM driverStandings\n        GROUP BY driverId\n        ORDER BY SUM(points) DESC\n        LIMIT 20\n    )\n);\t----- bird -----\tformula_1",
    "245": "SELECT c.circuitRef, c.name, r.year, r.round, d.forename, d.surname, l.time\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nJOIN lapTimes l ON r.raceId = l.raceId\nJOIN drivers d ON l.driverId = d.driverId\nWHERE c.country = 'Italy'\n  AND l.milliseconds = (\n      SELECT MIN(l2.milliseconds)\n      FROM lapTimes l2\n      JOIN races r2 ON l2.raceId = r2.raceId\n      WHERE r2.circuitId = c.circuitId\n  );\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(DISTINCT h.id) AS total_heroes\nFROM superhero h\nJOIN hero_power hp ON h.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength'\n  AND h.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT s.id) AS number_of_superheroes\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE c.colour = 'Blue'\n  AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c_eye ON s.eye_colour_id = c_eye.id\nJOIN colour c_hair ON s.hair_colour_id = c_hair.id\nWHERE c_eye.colour = 'Blue'\n  AND c_hair.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT s.superhero_name,\n       s.height_cm,\n       RANK() OVER (ORDER BY s.height_cm DESC) AS rank\nFROM superhero AS s\nJOIN publisher AS p\n     ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nORDER BY s.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour AS eye_color,\n       COUNT(s.id) AS superhero_count\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY c.colour\nORDER BY superhero_count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nJOIN publisher pu ON s.publisher_id = pu.id\nWHERE pu.publisher_name = 'Marvel Comics'\n  AND p.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN superhero s ON ha.hero_id = s.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) AS `gold_eyed_marvel_count`\nFROM `superhero` s\nJOIN `colour` c ON s.eye_colour_id = c.id\nJOIN `publisher` p ON s.publisher_id = p.id\nWHERE c.colour = 'Gold'\n  AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "254": "SELECT\n    s.superhero_name,\n    s.full_name,\n    ha.attribute_value\nFROM\n    superhero s\nJOIN\n    hero_attribute ha ON s.id = ha.hero_id\nJOIN\n    attribute a ON ha.attribute_id = a.id\nWHERE\n    a.attribute_name = 'Intelligence'\nORDER BY\n    ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "255": "SELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON ha.hero_id = s.id\nJOIN attribute a ON a.id = ha.attribute_id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE p.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT s.id) AS female_heroes_with_strength_100\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON ha.hero_id = s.id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE g.gender = 'Female'\n  AND a.attribute_name = 'Strength'\n  AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT\n    (SUM(CASE WHEN a.alignment = 'Bad' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS bad_percentage,\n    SUM(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS bad_marvel_count\nFROM superhero\nLEFT JOIN alignment a ON superhero.alignment_id = a.id\nLEFT JOIN publisher p ON superhero.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "260": "SELECT\n  SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) -\n  SUM(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS difference\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "261": "SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) AS total_without_full_name\nFROM superhero\nWHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) AS average_weight\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female';\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superhero S\nJOIN gender g ON S.gender_id = g.id\nJOIN hero_power hp ON hp.hero_id = S.id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE g.gender = 'Male';\t----- bird -----\tsuperhero",
    "265": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.height_cm BETWEEN 170 AND 190\n  AND c.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nJOIN colour c ON s.hair_colour_id = c.id\nWHERE s.height_cm = 185\n  AND r.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT 100 * SUM(p.id = 13) / COUNT(*) AS percentage\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT s.superhero_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Male'\n  AND s.weight_kg > 0.79 * (SELECT AVG(weight_kg) FROM superhero);\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hp.hero_id) AS stealth_hero_count\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Stealth'\n  AND hp.hero_id IS NOT NULL;\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON a.id = ha.attribute_id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE a.attribute_name = 'durability' AND p.publisher_name = 'Dark Horse Comics'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT eye_colour.colour AS eye_colour, hair_colour.colour AS hair_colour, skin_colour.colour AS skin_colour\nFROM `superhero` s\nLEFT JOIN `colour` eye_colour ON s.eye_colour_id = eye_colour.id\nLEFT JOIN `colour` hair_colour ON s.hair_colour_id = hair_colour.id\nLEFT JOIN `colour` skin_colour ON s.skin_colour_id = skin_colour.id\nJOIN `gender` g ON s.gender_id = g.id\nJOIN `publisher` p ON s.publisher_id = p.id\nWHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name,\n       p.publisher_name\nFROM   superhero AS s\nJOIN   publisher AS p\n       ON s.publisher_id = p.id\nWHERE  s.eye_colour_id = s.hair_colour_id\n  AND s.eye_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT 100 * SUM(CASE WHEN c.colour = 'Blue' THEN 1 ELSE 0 END) / COUNT(*) AS percentage\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nLEFT JOIN colour c ON s.skin_colour_id = c.id\nWHERE g.gender = 'Female';\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(DISTINCT hp.power_id) AS power_count\nFROM hero_power hp\nJOIN superhero s ON hp.hero_id = s.id\nWHERE s.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT s.height_cm\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour ec ON s.eye_colour_id = ec.id\nJOIN colour hc ON s.hair_colour_id = hc.id\nWHERE ec.colour = 'Black'\n  AND hc.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT s.superhero_name\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT ha.hero_id) AS hero_count\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Strength'\n  AND ha.attribute_value = (\n      SELECT MAX(ha2.attribute_value)\n      FROM hero_attribute ha2\n      JOIN attribute a2 ON ha2.attribute_id = a2.id\n      WHERE a2.attribute_name = 'Strength'\n  );\t----- bird -----\tsuperhero",
    "281": "SELECT\n    100 * SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) / COUNT(*) AS female_marvel_percentage\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT\n  (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') -\n  (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS difference;\t----- bird -----\tsuperhero",
    "283": "SELECT DIVIDE(SUM(height_cm), COUNT(*)) AS average_height\nFROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON a.id = ha.attribute_id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM hero_attribute ha\nJOIN superhero s ON ha.hero_id = s.id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": "SELECT s.`superhero_name`\nFROM `superhero` s\nJOIN `colour` eye ON s.`eye_colour_id` = eye.`id`\nJOIN `colour` hair ON s.`hair_colour_id` = hair.`id`\nWHERE eye.`colour` = 'Blue'\n  AND hair.`colour` = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT\n  (b.blue_count * 100.0 / t.total_count) AS percentage\nFROM\n  (SELECT COUNT(*) AS blue_count\n   FROM superhero s\n   JOIN colour c ON s.eye_colour_id = c.id\n   WHERE c.colour = 'Blue') AS b,\n  (SELECT COUNT(*) AS total_count\n   FROM superhero) AS t;\t----- bird -----\tsuperhero",
    "290": "SELECT DIVIDE(SUM(gender_id = 1), SUM(gender_id = 2)) AS ratio FROM superhero;\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour AS eye_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT SUM(c.id = 7) - SUM(c.id = 1) AS difference\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.weight_kg = 0 OR s.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) AS green_villains\nFROM superhero s\nJOIN colour c ON s.skin_colour_id = c.id\nJOIN alignment a ON s.alignment_id = a.id\nWHERE c.colour = 'Green' AND a.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON hp.hero_id = s.id\nJOIN superpower sp ON sp.id = hp.power_id\nWHERE sp.power_name = 'Wind Control'\nORDER BY s.superhero_name;\t----- bird -----\tsuperhero",
    "295": "SELECT g.`gender`\nFROM `superhero` s\nJOIN `hero_power` hp ON s.`id` = hp.`hero_id`\nJOIN `superpower` sp ON hp.`power_id` = sp.`id`\nJOIN `gender` g ON s.`gender_id` = g.`id`\nWHERE sp.`power_name` = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT SUM(p.publisher_name = 'DC Comics') - SUM(p.publisher_name = 'Marvel Comics') AS difference\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName \nFROM users \nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon') \nORDER BY Reputation DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName\nFROM users\nWHERE YEAR(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) AS `user_count`\nFROM `users`\nWHERE `LastAccessDate` > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) AS post_count\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) AS `num_posts`\nFROM `posts` p\nJOIN `users` u ON p.`OwnerUserId` = u.`Id`\nWHERE u.`Age` > 65 AND p.`Score` >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Id, p.Body\nFROM posts p\nWHERE p.Id = (SELECT t.ExcerptPostId\n              FROM tags t\n              WHERE t.TagName = 'bayesian');\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) AS avg_score\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT\n    (COUNT(CASE WHEN u.Age > 65 THEN 1 END) * 100.0) / COUNT(*) AS elder_percentage\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM comments c\nJOIN posts p ON p.Id = c.PostId\nWHERE c.UserId = 3025\n  AND c.CreationDate = '2014-04-23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "308": "SELECT p.Id AS PostId,\n       CASE WHEN p.ClosedDate IS NOT NULL THEN 'Well-finished' ELSE 'Not well-finished' END AS Status\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 23853\n  AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) AS PostCount\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT u.`DisplayName`\nFROM `votes` v\nJOIN `users` u ON v.`UserId` = u.`Id`\nWHERE v.`Id` = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT\n    (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) /\n    NULLIF((SELECT COUNT(*) FROM votes WHERE UserId = 24), 0) AS ratio;\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount\nFROM posts\nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT DISTINCT u.DisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT OwnerDisplayName\nFROM posts\nWHERE Title = 'Open source tools for visualizing multi-dimensional data?';\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN postHistory ph ON ph.PostId = p.Id AND ph.UserId = c.UserId\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nJOIN users u ON v.UserId = u.Id\nWHERE v.VoteTypeId = 8\n  AND v.BountyAmount = 50\n  AND p.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": "SELECT p.`Title`, c.`Text`, AVG(p.`ViewCount`) OVER () AS AvgViewCount\nFROM posts p\nJOIN comments c ON p.`Id` = c.`PostId`\nWHERE p.`Tags` LIKE '%<humor>%';\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) \nFROM ( \n    SELECT UserId \n    FROM badges \n    GROUP BY UserId \n    HAVING COUNT(*) > 5\n) AS t;\t----- bird -----\tcodebase_community",
    "321": "SELECT OwnerUserId\nFROM (\n    SELECT p.Id, p.OwnerUserId, p.ViewCount, COUNT(ph.Id) AS histCount\n    FROM posts p\n    LEFT JOIN postHistory ph ON p.Id = ph.PostId\n    GROUP BY p.Id, p.OwnerUserId, p.ViewCount\n) sub\nGROUP BY OwnerUserId\nHAVING COUNT(*) = SUM(CASE WHEN histCount = 1 AND ViewCount >= 1000 THEN 1 ELSE 0 END);\t----- bird -----\tcodebase_community",
    "322": "SELECT\n    (100.0 * COUNT(CASE WHEN YEAR(`Date`) = 2010 AND `Name` = 'Student' THEN 1 END) / COUNT(*))\n    - (100.0 * COUNT(CASE WHEN YEAR(`Date`) = 2011 AND `Name` = 'Student' THEN 1 END) / COUNT(*))\n    AS PercentageDifference\nFROM badges;\t----- bird -----\tcodebase_community",
    "323": "SELECT\n  SUM(u.UpVotes) / COUNT(u.Id) AS AvgUpVotes,\n  SUM(u.Age) / COUNT(u.Id) AS AvgAge\nFROM users u\nJOIN (\n  SELECT OwnerUserId\n  FROM posts\n  GROUP BY OwnerUserId\n  HAVING COUNT(*) > 10\n) p ON u.Id = p.OwnerUserId;\t----- bird -----\tcodebase_community",
    "324": "SELECT DIVIDE(COUNT(CASE WHEN YEAR(CreationDate) = 2010 THEN 1 END), COUNT(CASE WHEN YEAR(CreationDate) = 2011 THEN 1 END)) AS ratio FROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY COALESCE(p.AnswerCount,0) DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT u.DisplayName, SUM(p.ViewCount) AS TotalViewCount\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY u.DisplayName\nORDER BY TotalViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT REPLACE(REPLACE(tag, '<', ''), '>', '') AS tag\nFROM (\n    SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(p.Tags, '><', n.n), '>', -1) AS tag\n    FROM posts p\n    JOIN users u ON p.OwnerUserId = u.Id\n    JOIN (\n        SELECT 1 n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10\n    ) AS n\n    ON n.n <= (LENGTH(p.Tags) - LENGTH(REPLACE(p.Tags, '><', ''))) / 3 + 1\n    WHERE u.DisplayName = 'Mark Meckes'\n      AND p.CommentCount = 0\n) AS t;\t----- bird -----\tcodebase_community",
    "328": "SELECT DIVIDE(\n    SUM(CASE WHEN Tags LIKE '%<r>%' THEN 1 ELSE 0 END),\n    COUNT(*)\n) AS percentage\nFROM posts\nWHERE OwnerDisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "329": "SELECT \n    SUM(CASE WHEN OwnerDisplayName = 'Mornington' THEN ViewCount ELSE 0 END) - \n    SUM(CASE WHEN OwnerDisplayName = 'Amos' THEN ViewCount ELSE 0 END) AS difference\nFROM posts;\t----- bird -----\tcodebase_community",
    "330": "SELECT DIVIDE(COUNT(pl.Id), 12) AS avg_links_per_month\nFROM postLinks pl\nJOIN posts p ON p.Id = pl.PostId\nWHERE YEAR(pl.CreationDate) = 2010\n  AND p.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) AS FirstVoteDate\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT u.`DisplayName`\nFROM `badges` AS b\nJOIN `users` AS u ON u.`Id` = b.`UserId`\nWHERE b.`Name` = 'Autobiographer'\nORDER BY b.`Date` ASC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.`Id`) AS user_count\nFROM `users` u\nJOIN `posts` p ON p.`OwnerUserId` = u.`Id`\nWHERE u.`Location` = 'United Kingdom'\n  AND p.`FavoriteCount` >= 4;\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT Id, OwnerDisplayName\nFROM posts\nWHERE YEAR(CreaionDate) = 2010\nORDER BY FavoriteCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT\n  DIVIDE(\n    SUM(\n      CASE\n        WHEN YEAR(p.CreaionDate) = 2011 AND u.Reputation > 1000\n        THEN 1\n        ELSE 0\n      END\n    ),\n    COUNT(*)\n  ) * 100 AS percentage\nFROM posts p\nLEFT JOIN users u\n  ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount AS total_views,\n       u.DisplayName AS posted_by\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets'\nORDER BY p.CreaionDate DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(c.Id) AS comment_count\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Score = (SELECT MAX(Score) FROM posts);\t----- bird -----\tcodebase_community",
    "339": "SELECT c.`Text`, u.`DisplayName`  \nFROM `comments` c  \nJOIN `posts` p ON c.`PostId` = p.`Id`  \nLEFT JOIN `users` u ON c.`UserId` = u.`Id`  \nWHERE p.`Title` = 'Analysing wind data with R'  \nORDER BY c.`CreationDate` DESC  \nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT\n    DIVIDE(\n        SUM(CASE WHEN p.Score > 50 THEN 1 ELSE 0 END),\n        COUNT(*)\n    ) AS percentage\nFROM posts p\nWHERE p.OwnerUserId = (\n    SELECT u.Id\n    FROM users u\n    ORDER BY u.Reputation DESC\n    LIMIT 1\n);\t----- bird -----\tcodebase_community",
    "341": "SELECT `ExcerptPostId`, `WikiPostId` FROM tags WHERE `TagName` = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text\nFROM comments AS c\nJOIN posts AS p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) AS zero_score_comments\nFROM comments c\nJOIN posts p ON p.Id = c.PostId\nWHERE p.CommentCount = 1\n  AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT \n    DIVIDE(COUNT(CASE WHEN u.UpVotes = 0 THEN 1 END) * 100, COUNT(c.UserId)) AS percentage\nFROM \n    comments c\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": "SELECT id, name, cardKingdomFoilId, cardKingdomId\nFROM cards\nWHERE cardKingdomFoilId IS NOT NULL\n  AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT id, name\nFROM cards\nWHERE borderColor = 'borderless'\n  AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL);\t----- bird -----\tcard_games",
    "348": "SELECT c.id, c.name, c.rarity, l.format, l.status\nFROM cards AS c\nJOIN legalities AS l ON c.uuid = l.uuid\nWHERE c.rarity = 'mythic'\n  AND l.format = 'gladiator'\n  AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "349": "SELECT c.id, c.name, l.status\nFROM `cards` c\nJOIN `legalities` l ON c.uuid = l.uuid\nWHERE c.type = 'Artifact'\n  AND c.side IS NULL\n  AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE (c.power = '*' OR c.power IS NULL)\n  AND l.format = 'commander'\n  AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "351": "SELECT\n    c.id AS card_id,\n    c.name AS card_name,\n    GROUP_CONCAT(r.text SEPARATOR '\\n') AS rulings_text,\n    CASE WHEN c.hasContentWarning = 1 THEN 'Yes' ELSE 'No' END AS missing_or_degraded\nFROM\n    cards c\nLEFT JOIN\n    rulings r ON c.id = r.id\nWHERE\n    c.artist = 'Stephen Daniele'\nGROUP BY\n    c.id, c.name, c.hasContentWarning;\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, c.isPromo\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.id, c.name, c.artist, c.isPromo\nORDER BY COUNT(r.uuid) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT (SUM(id) / (SELECT COUNT(*) FROM cards)) * 100 AS percentage FROM foreign_data WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) AS infinite_power_count FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen' LIMIT 1;\t----- bird -----\tcard_games",
    "356": "SELECT l.format, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT ROUND((SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) / COUNT(*)) * 100, 2) AS borderless_percentage FROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT \n    ROUND(100 * SUM(CASE WHEN fd.language = 'French' THEN 1 ELSE 0 END) / COUNT(*), 2) AS FrenchPercentage\nFROM \n    cards c\nJOIN \n    foreign_data fd ON c.id = fd.id\nWHERE \n    c.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) AS total_cards\nFROM cards\nWHERE originalType = 'Summon - Angel'\n  AND (subtypes <> 'Angel' OR subtypes IS NULL);\t----- bird -----\tcard_games",
    "360": "SELECT id\nFROM cards\nWHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(DISTINCT c.id) AS banned_white_cards\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.borderColor = 'white'\n  AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "362": "SELECT DISTINCT c.*\nFROM cards AS c\nJOIN foreign_data AS f\n  ON c.uuid = f.uuid\nWHERE c.originalType = 'Artifact'\n  AND c.colors = 'B'\n  AND f.language IS NOT NULL;\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards\nWHERE layout = 'normal'\n  AND frameVersion = '2003'\n  AND borderColor = 'black'\n  AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT\n    DIVIDE(\n        SUM(CASE WHEN `isStorySpotlight` = 1 AND `isTextless` = 0 THEN 1 ELSE 0 END),\n        SUM(CASE WHEN `isStorySpotlight` = 1 THEN 1 ELSE 0 END)\n    ) * 100 AS percentage\nFROM cards;\n\nSELECT\n    `id`\nFROM cards\nWHERE `isStorySpotlight` = 1 AND `isTextless` = 0\nORDER BY `id`;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT st.setCode) \nFROM set_translations st \nJOIN sets s ON s.code = st.setCode \nWHERE s.block = 'Commander' \n  AND st.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT fd.type\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE fd.language = 'German'\n  AND c.subtypes IS NOT NULL\n  AND c.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) AS count\nFROM `cards`\nWHERE (`power` IS NULL OR `power` = '*')\n  AND `text` LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(DISTINCT c.id) AS num_cards\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nJOIN legalities l ON c.uuid = l.uuid\nWHERE r.text = 'This is a triggered mana ability.'\n  AND l.format = 'premodern'\n  AND c.side IS NULL;\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.artist = 'Matthew D. Wilson'\n  AND c.type LIKE '%Creature%'\n  AND c.layout = 'normal'\n  AND c.borderColor = 'black'\n  AND fd.language = 'French';\t----- bird -----\tcard_games",
    "370": "SELECT st.language\nFROM sets s\nJOIN set_translations st ON st.setCode = s.code\nWHERE s.baseSetSize = 180\n  AND s.block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": "SELECT DIVIDE(COUNT(`hasContentWarning` = 0), COUNT(`cards`.`id`)) * 100 AS `percentage_no_content_warning`\nFROM `cards`\nINNER JOIN `legalities` ON `cards`.`id` = `legalities`.`id`\nWHERE `legalities`.`format` = 'commander' AND `legalities`.`status` = 'legal';\t----- bird -----\tcard_games",
    "372": "SELECT DIVIDE(\n  (SELECT COUNT(DISTINCT c.id)\n   FROM cards c\n   JOIN foreign_data f ON f.uuid = c.uuid\n   WHERE f.language = 'French'\n     AND (c.power IS NULL OR c.power = '*')\n  ),\n  (SELECT COUNT(DISTINCT c.id)\n   FROM cards c\n   WHERE c.power IS NULL OR c.power = '*'\n  )\n) * 100 AS percentage_of_french_cards_without_power;\t----- bird -----\tcard_games",
    "373": "SELECT language\nFROM foreign_data\nWHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT\n  SUM(CASE WHEN textless = 1 AND layout = 'normal' THEN 1 ELSE 0 END)\n  /\n  NULLIF(SUM(CASE WHEN textless = 1 THEN 1 ELSE 0 END),0)\n  * 100 AS proportion\nFROM cards;\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT st.language\nFROM set_translations AS st\nJOIN sets AS s ON s.code = st.setCode\nWHERE s.mcmName = 'Archenemy'\n  AND s.code = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT language\nFROM foreign_data\nWHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost\nFROM cards\nWHERE name IN ('Serra Angel', 'Shrine Keeper')\nORDER BY convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM cards c\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE c.name = 'Ancestor''s Chosen'\n  AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "379": "SELECT\n    CASE\n        WHEN EXISTS (\n            SELECT 1\n            FROM cards c\n            JOIN set_translations st ON c.setCode = st.setCode\n            WHERE c.name = 'Ancestor''s Chosen'\n              AND st.language = 'Korean'\n        )\n        THEN 'Yes'\n        ELSE 'No'\n    END AS KoreanVersion;\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) AS number_of_cards\nFROM cards c\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE st.translation = 'Hauptset Zehnte Edition'\n  AND c.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT st.translation\nFROM set_translations AS st\nJOIN sets AS s ON s.code = st.setCode\nWHERE s.name = 'Eighth Edition'\n  AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT \n    CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS appeared_on_mtgo\nFROM cards\nWHERE name = 'Angel of Mercy' AND mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.code) AS Italian_Translation_Count\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE s.block = 'Ice Age'\n  AND st.language = 'Italian'\n  AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT CASE \n           WHEN EXISTS (SELECT 1 FROM sets \n                        WHERE name = 'Adarkar Valkyrie' \n                          AND isForeignOnly = 1) \n           THEN 'Yes' \n           ELSE 'No' \n       END AS OnlyOutsideUS;\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(DISTINCT s.id) AS num_sets\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.language = 'Italian'\n  AND st.translation IS NOT NULL\n  AND s.baseSetSize < 10;\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT c.artist\nFROM cards AS c\nJOIN sets AS s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\n  AND c.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)  \nFROM cards c  \nJOIN sets s ON c.setCode = s.code  \nWHERE c.convertedManaCost > 5  \n  AND s.name = 'Coldsnap'  \n  AND (c.power = '*' OR c.power IS NULL);\t----- bird -----\tcard_games",
    "388": "SELECT flavorText\nFROM foreign_data\nWHERE language = 'Italian'\n  AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "389": "SELECT rulings.text\nFROM rulings\nJOIN cards ON rulings.uuid = cards.uuid\nJOIN sets ON cards.setCode = sets.code\nJOIN foreign_data ON foreign_data.uuid = cards.uuid\nWHERE sets.name = 'Coldsnap'\n  AND foreign_data.language = 'Italian';\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\n  AND fd.language = 'Italian'\n  AND c.convertedManaCost = (\n    SELECT MAX(c2.convertedManaCost)\n    FROM cards c2\n    JOIN sets s2 ON c2.setCode = s2.code\n    WHERE s2.name = 'Coldsnap'\n  );\t----- bird -----\tcard_games",
    "391": "SELECT DIVIDE(SUM(convertedManaCost = 7), SUM(convertedManaCost)) * 100 AS percentage\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "392": "SELECT \n    DIVIDE(SUM(IF(cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL, 1, 0)), COUNT(*)) * 100 AS percentage\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "393": "SELECT l.format, c.name\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\n  AND l.format = (\n    SELECT l2.format\n    FROM legalities l2\n    WHERE l2.status = 'Banned'\n    GROUP BY l2.format\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n  );\t----- bird -----\tcard_games",
    "394": "SELECT DISTINCT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecRank = 1\n  AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format\nFROM cards AS c\nJOIN sets AS s ON c.setCode = s.code\nJOIN legalities AS l ON c.uuid = l.uuid\nWHERE s.name = 'Hour of Devastation'\n  AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT s.name\nFROM sets s\nWHERE NOT EXISTS (\n        SELECT 1\n        FROM set_translations st\n        WHERE st.setCode = s.code\n          AND st.language LIKE '%Japanese%'\n      )\n  AND EXISTS (\n        SELECT 1\n        FROM set_translations st2\n        WHERE st2.setCode = s.code\n          AND st2.language = 'Korean'\n      );\t----- bird -----\tcard_games",
    "397": "SELECT c.id, c.name, c.frameVersion\nFROM cards c\nWHERE c.artist='Allen Williams';\n\nSELECT c.id, c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid=l.uuid\nWHERE l.status='Banned';\t----- bird -----\tcard_games",
    "398": "SELECT bond_type, COUNT(*) AS count\nFROM bond\nGROUP BY bond_type\nORDER BY count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(cnt) AS avg_oxygen\nFROM (\n    SELECT b.`molecule_id`, COALESCE(a.cnt,0) AS cnt\n    FROM bond b\n    LEFT JOIN (\n        SELECT `molecule_id`, COUNT(*) AS cnt\n        FROM atom\n        WHERE `element`='o'\n        GROUP BY `molecule_id`\n    ) a ON a.`molecule_id` = b.`molecule_id`\n    WHERE b.`bond_type`='-'\n    GROUP BY b.`molecule_id`\n) sub;\t----- bird -----\ttoxicology",
    "400": "SELECT DIVIDE(SUM(CASE WHEN bond.bond_type = '-' THEN 1 ELSE 0 END), COUNT(DISTINCT atom.atom_id)) AS avg_single_bonds\nFROM molecule\nLEFT JOIN atom ON atom.molecule_id = molecule.molecule_id\nLEFT JOIN bond ON bond.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE m.label = '+'\n  AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "402": "SELECT DIVIDE(SUM(element = 'c'), COUNT(DISTINCT atom_id)) AS carbon_percentage\nFROM atom\nWHERE EXISTS (\n    SELECT 1\n    FROM bond\n    WHERE bond.molecule_id = atom.molecule_id\n      AND bond.bond_type = '='\n);\t----- bird -----\ttoxicology",
    "403": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c\n  ON a.atom_id = c.atom_id\n  OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON (a.atom_id = c.atom_id OR a.atom_id = c.atom_id2)\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT m.label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'h'\nGROUP BY m.label\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '-'\nGROUP BY a.element\nORDER BY COUNT(*) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20')\n   OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT a.element, COUNT(DISTINCT a.atom_id) AS count\nFROM atom a\nJOIN (\n    SELECT DISTINCT molecule_id\n    FROM bond\n    WHERE bond_type = '-'\n) AS m ON a.molecule_id = m.molecule_id\nWHERE a.element IN ('i', 's')\nGROUP BY a.element;\t----- bird -----\ttoxicology",
    "409": "SELECT\n  DIVIDE(SUM(has_f = 0) * 100, COUNT(*)) AS percentage_not_fluorine\nFROM\n  (SELECT m.molecule_id,\n          IFNULL(MAX(a.element = 'f'), 0) AS has_f\n   FROM molecule m\n   LEFT JOIN atom a ON a.molecule_id = m.molecule_id\n   WHERE m.label = '+'\n   GROUP BY m.molecule_id) AS sub;\t----- bird -----\ttoxicology",
    "410": "SELECT DIVIDE(SUM(bond_type = '#') * 100, COUNT(bond_id)) AS percent\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM atom\nWHERE molcule_id = 'TR000'\n  AND element IN ('Arsenic', 'Lead', 'Mercury')\nORDER BY element\nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT FORMAT(DIVIDE(SUM(bond_type = '='), COUNT(bond_id)),5) AS percent\nFROM bond\nWHERE molcule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(DIVIDE(SUM(label = '+'), COUNT(molecule_id)) * 100, 3) AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(DIVIDE(SUM(element = 'h'), COUNT(*)) * 100, 4) AS percent\nFROM atom\nWHERE molcule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT m.label, a.element\nFROM molecule m\nLEFT JOIN atom a ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT b.bond_type AS majority_bond_type,\n       CASE WHEN m.label LIKE '%carcinogenic%' THEN 'Yes' ELSE 'No' END AS is_carcinogenic\nFROM bond b\nJOIN molecule m ON m.molecule_id = b.molecule_id\nWHERE b.molecule_id = 'TR010'\nGROUP BY b.bond_type\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT m.`molecule_id`\nFROM `molecule` m\nJOIN `bond` b ON m.`molecule_id` = b.`molecule_id`\nWHERE m.`label` = '-'\n  AND b.`bond_type` = '-'\nGROUP BY m.`molecule_id`\nORDER BY m.`molecule_id`\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT b.bond_id) AS bond_count\nFROM connected AS c\nJOIN bond AS b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR009'\n  AND (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(DISTINCT bond_id) AS connections\nFROM connected\nWHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT DISTINCT element\nFROM atom\nWHERE molcule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id\nFROM molecule AS m\nJOIN atom AS a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+'\n  AND SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25';\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT b.bond_id, b.bond_type\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a1.element = 'p' AND a2.element = 'n')\n   OR (a1.element = 'n' AND a2.element = 'p');\t----- bird -----\ttoxicology",
    "424": "SELECT CASE WHEN m.label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic\nFROM molecule m\nWHERE m.molecule_id = (\n  SELECT molecule_id\n  FROM bond\n  WHERE bond_type = '='\n  GROUP BY molecule_id\n  ORDER BY COUNT(*) DESC\n  LIMIT 1\n);\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(cnt) AS avg_bonds\nFROM (\n  SELECT a.atom_id,\n         COUNT(c.bond_id) AS cnt\n  FROM atom a\n  LEFT JOIN connected c ON a.atom_id = c.atom_id\n  WHERE a.element = 'i'\n  GROUP BY a.atom_id\n) sub;\t----- bird -----\ttoxicology",
    "426": "SELECT DISTINCT a.element\nFROM atom a\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM connected c\n    WHERE c.atom_id = a.atom_id\n       OR c.atom_id2 = a.atom_id\n);\t----- bird -----\ttoxicology",
    "427": "SELECT c.atom_id, c.atom_id2\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR041'\n  AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "428": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON (a.atom_id = c.atom_id OR a.atom_id = c.atom_id2)\nWHERE c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT a.element\nFROM `atom` a\nJOIN `connected` c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN `bond` b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(DIVIDE(SUM(molecule.label = '+') * 100, COUNT(bond.bond_id)), 5) AS proportion\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*) AS total_atoms\nFROM atom\nWHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '#')\n  AND molecule_id IN (SELECT molecule_id FROM atom WHERE element IN ('p','br'));\t----- bird -----\ttoxicology",
    "432": "SELECT DIVIDE(SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END), COUNT(*)) AS percent\nFROM atom\nWHERE molcule_id IN (\n  SELECT DISTINCT molcule_id FROM bond WHERE bond_type = '-'\n);\t----- bird -----\ttoxicology",
    "433": "SELECT a1.element AS element1, a2.element AS element2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT DIVIDE(SUM(a.element = 'cl'), COUNT(m.molecule_id)) AS percentage\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT a.element, COUNT(*) AS tally\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '+' AND SUBSTRING(a.atom_id, 7, 1) = '4'\nGROUP BY a.element;\t----- bird -----\ttoxicology",
    "436": "SELECT DIVIDE(SUM(element = 'h'), COUNT(element)) AS ratio, m.label AS label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.molecule_id = 'TR006'\nGROUP BY m.label;\t----- bird -----\ttoxicology",
    "437": "SELECT a.molecule_id\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '-'\nGROUP BY a.molecule_id\nHAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) AS total_schools\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE s.AvgScrMath > 400 AND sc.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT `CDSCode` \nFROM `frpm` \nWHERE COALESCE(`Enrollment (K-12)`, 0) + COALESCE(`Enrollment (Ages 5-17)`, 0) > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` ) AS highest_eligible_free_rate\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE satscores.NumTstTakr <> 0\n  AND satscores.NumGE1500 / satscores.NumTstTakr > 0.3\n  AND frpm.`Enrollment (Ages 5-17)` > 0;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT\n    f.`Charter School Number` AS CharterNumber,\n    s.AvgScrWrite AS AvgWritingScore,\n    ROW_NUMBER() OVER (ORDER BY s.AvgScrWrite DESC) AS Rank\nFROM satscores s\nJOIN frpm f ON s.cds = f.`CDSCode`\nWHERE s.AvgScrWrite > 499\n  AND f.`Charter School Number` IS NOT NULL\nORDER BY Rank;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT `School`,\n       CONCAT_WS(' ', `Street`, `StreetAbr`, `City`, `Zip`) AS `FullStreetAddress`\nFROM `schools`\nWHERE COALESCE(`Enrollment (K-12)`, 0) - COALESCE(`Enrollment (Ages 5-17)`, 0) > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT DISTINCT s.`School` AS `SchoolName`\nFROM schools s\nJOIN frpm f ON s.`CDSCode` = f.`CDSCode`\nJOIN satscores sc ON s.`CDSCode` = sc.`cds`\nWHERE f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)` > 0.1\n  AND sc.`NumGE1500` > 0;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType\nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE s.City = 'Riverside'\nGROUP BY s.CDSCode, s.School, s.FundingType\nHAVING AVG(sc.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.`School` AS SchoolName,\n       CONCAT_WS(', ', s.`Street`, s.`City`, s.`State`, s.`Zip`) AS Address\nFROM schools s\nJOIN frpm f ON s.`CDSCode` = f.`CDSCode`\nWHERE s.`StatusType` LIKE '%High School%'\n  AND s.`County` = 'Monterey'\n  AND f.`FRPM Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "446": "SELECT `schools`.`School` AS `SchoolName`,\n       AVG(`satscores`.`AvgScrWrite`) AS `AvgWriteScore`,\n       `schools`.`Phone` AS `PhoneNumber`\nFROM `schools`\nJOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds`\nWHERE (`schools`.`OpenDate` > '1991-12-31')\n   OR (`schools`.`ClosedDate` < '2000-01-01')\nGROUP BY `schools`.`School`, `schools`.`Phone`;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT `School`, `DOC`\nFROM `schools`\nWHERE `FundingType` = 'Local'\n  AND (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > (\n    SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) \n    FROM `schools` \n    WHERE `FundingType` = 'Local'\n  );\t----- bird -----\tcalifornia_schools",
    "448": "SELECT\n  `CDSCode`,\n  `Enrollment (K-12)` AS enrollment,\n  `Free Meal Count (K-12)` AS free_meal_count,\n  (`Free Meal Count (K-12)` / NULLIF(`Enrollment (K-12)`, 0)) AS eligible_free_rate\nFROM (\n  SELECT\n    `CDSCode`,\n    `Enrollment (K-12)`,\n    `Free Meal Count (K-12)`,\n    ROW_NUMBER() OVER (ORDER BY `Enrollment (K-12)` DESC) AS rn\n  FROM frpm\n) AS ranked\nWHERE rn IN (10, 11);\t----- bird -----\tcalifornia_schools",
    "449": "SELECT\n    f.`CDSCode`,\n    f.`School Name`,\n    f.`FRPM Count (K-12)` AS `FRPM Count`,\n    f.`Enrollment (K-12)` AS `Enrollment`,\n    f.`FRPM Count (K-12)` / f.`Enrollment (K-12)` AS `Eligible FRPM Rate`\nFROM frpm AS f\nWHERE f.`Charter School Number` = '66'\nORDER BY f.`FRPM Count (K-12)` DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State\nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE sc.NumGE1500 IS NOT NULL AND sc.NumTstTakr <> 0\nORDER BY sc.NumGE1500 / sc.NumTstTakr\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT CONCAT(AdmFName1, ' ', AdmLName1) AS AdminFullName\nFROM schools\nWHERE CDSCode IN (\n    SELECT cds\n    FROM satscores\n    WHERE NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\n)\nUNION ALL\nSELECT CONCAT(AdmFName2, ' ', AdmLName2)\nFROM schools\nWHERE CDSCode IN (\n    SELECT cds\n    FROM satscores\n    WHERE NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\n)\nUNION ALL\nSELECT CONCAT(AdmFName3, ' ', AdmLName3)\nFROM schools\nWHERE CDSCode IN (\n    SELECT cds\n    FROM satscores\n    WHERE NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\n);\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(s.`NumTstTakr`) AS avg_test_takers\nFROM `satscores` s\nJOIN `schools` sc ON s.`cds` = sc.`CDSCode`\nWHERE sc.`City` = 'Fresno'\n  AND YEAR(sc.`OpenDate`) = 1980;\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.Phone\nFROM satscores AS sc\nJOIN schools AS s ON sc.cds = s.CDSCode\nWHERE s.District = 'Fresno Unified'\n  AND sc.AvgScrRead IS NOT NULL\nORDER BY sc.AvgScrRead ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.School\nFROM (\n    SELECT s.CDSCode, s.School, sc.AvgScrRead,\n           ROW_NUMBER() OVER (PARTITION BY s.County ORDER BY sc.AvgScrRead DESC) AS rn\n    FROM schools s\n    JOIN satscores sc ON s.CDSCode = sc.cds\n    WHERE s.`Virtual` = 'F'\n      AND sc.AvgScrRead IS NOT NULL\n) AS ranked\nWHERE ranked.rn <= 5;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.CDSCode,\n       s.School,\n       AVG(sc.AvgScrWrite) AS avg_write_score\nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE (s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich')\n   OR (s.AdmFName2 = 'Ricci' AND s.AdmLName2 = 'Ulrich')\n   OR (s.AdmFName3 = 'Ricci' AND s.AdmLName3 = 'Ulrich')\nGROUP BY s.CDSCode, s.School;\t----- bird -----\tcalifornia_schools",
    "456": "SELECT School, `Enrollment (K-12)`\nFROM schools\nWHERE DOC = 31\n  AND `Enrollment (K-12)` = (\n    SELECT MAX(`Enrollment (K-12)`)\n    FROM schools\n    WHERE DOC = 31\n);\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*)/12.0 AS monthly_average\nFROM schools\nWHERE County = 'Alameda'\n  AND DOC = '52'\n  AND YEAR(OpenDate) = 1980;\t----- bird -----\tcalifornia_schools",
    "458": "SELECT\n  COUNT(CASE WHEN DOC = 54 AND StatusType = 'merged' AND County = 'Orange' THEN 1 END) AS unified_orange_count,\n  COUNT(CASE WHEN DOC = 52 AND StatusType = 'merged' THEN 1 END) AS elementary_total_count,\n  COUNT(CASE WHEN DOC = 54 AND StatusType = 'merged' AND County = 'Orange' THEN 1 END) /\n    NULLIF(COUNT(CASE WHEN DOC = 52 AND StatusType = 'merged' THEN 1 END), 0) AS ratio\nFROM schools;\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.Street AS postal_street_address, s.School AS school_name\nFROM satscores sc\nJOIN schools s ON sc.cds = s.CDSCode\nORDER BY sc.AvgScrMath DESC, sc.cds\nLIMIT 6,1;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) AS total_non_chartered_schools\nFROM frpm\nWHERE `County` = 'Los Angeles'\n  AND `Charter School (Y/N)` = 0\n  AND `Enrollment (K-12)` IS NOT NULL\n  AND `Enrollment (K-12)` > 0\n  AND `Free Meal Count (K-12)` IS NOT NULL\n  AND (`Free Meal Count (K-12)` * 100 / `Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT `Enrollment (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.`CDSCode` = schools.`CDSCode`\nWHERE schools.`City` = 'Fremont'\n  AND schools.`EdOpsCode` = 'SSS'\n  AND frpm.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.`School` AS School_Name,\n       (f.`FRPM Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)` * 100) AS `Percent (%) Eligible FRPM (Ages 5-17)`\nFROM frpm f\nJOIN schools s ON f.`School Code` = s.`CDSCode`\nWHERE f.`Low Grade` = 'Kindergarten'\n  AND f.`High Grade` = '9th'\n  AND f.`County Name` = 'Los Angeles';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT `County`, COUNT(*) AS `SchoolCount`\nFROM `schools`\nWHERE `Virtual` = 'F' AND `County` IN ('San Diego', 'Santa Barbara')\nGROUP BY `County`\nORDER BY `SchoolCount` DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT CONCAT(f.`Low Grade`, ' - ', f.`High Grade`) AS `Grade Span`\nFROM schools s\nJOIN frpm f ON f.`CDSCode` = s.`CDSCode`\nWHERE ABS(s.`Longitude`) = (SELECT MAX(ABS(`Longitude`)) FROM schools);\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(*) AS total_schools_with_multiple_provision_types\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Magnet = 1\n  AND s.GSserved LIKE '%Kindergarten%'\n  AND f.`NSLP Provision Status` = 'Multiple Provision Types';\n\nSELECT COUNT(DISTINCT s.City) AS num_cities_with_k8\nFROM schools s\nWHERE s.Magnet = 1\n  AND s.GSserved LIKE '%Kindergarten%';\n\nSELECT s.City, COUNT(*) AS num_k8_schools\nFROM schools s\nWHERE s.Magnet = 1\n  AND s.GSserved LIKE '%Kindergarten%'\nGROUP BY s.City\nORDER BY s.City;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT\n    (`Free Meal Count (K-12)` / `Enrollment (K-12)` * 100) AS PercentEligibleFree,\n    `District Code`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE `AdmFName1` = 'Alusine'\n   OR `AdmFName2` = 'Alusine'\n   OR `AdmFName3` = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT DISTINCT email\nFROM (\n    SELECT AdmEmail1 AS email FROM schools\n    WHERE County = 'San Bernardino'\n      AND District = 'San Bernardino City Unified'\n      AND SOC = '62'\n      AND DOC = '54'\n      AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n    UNION ALL\n    SELECT AdmEmail2 FROM schools\n    WHERE County = 'San Bernardino'\n      AND District = 'San Bernardino City Unified'\n      AND SOC = '62'\n      AND DOC = '54'\n      AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n    UNION ALL\n    SELECT AdmEmail3 FROM schools\n    WHERE County = 'San Bernardino'\n      AND District = 'San Bernardino City Unified'\n      AND SOC = '62'\n      AND DOC = '54'\n      AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n) AS emails\nWHERE email IS NOT NULL\n  AND email <> ''\n  AND email LIKE '%@%.%';\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT account.account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN disp ON account.account_id = disp.account_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE district.A3 = 'East Bohemia'\n  AND disp.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) FROM district d\nWHERE d.`A11` > 6000\n  AND d.`A11` < 10000\n  AND EXISTS (SELECT 1 FROM client c\n              WHERE c.`district_id` = d.`district_id`\n                AND c.`gender` = 'F');\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) AS male_customers_with_salary_greater_than_8000\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M'\n  AND d.A3 = 'North Bohemia'\n  AND d.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT a.account_id,\n       (SELECT MAX(A11) FROM district) -\n       (SELECT MIN(d3.A11)\n          FROM district d3\n          JOIN client c3 ON d3.district_id = c3.district_id\n          WHERE c3.gender='F'\n          AND c3.birth_date = (SELECT MIN(birth_date)\n                                  FROM client\n                                  WHERE gender='F')) AS gap\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district d2 ON c.district_id = d2.district_id\nWHERE c.gender='F'\n  AND c.birth_date = (SELECT MIN(birth_date)\n                       FROM client\n                       WHERE gender='F')\n  AND d2.A11 = (SELECT MIN(d3.A11)\n                  FROM district d3\n                  JOIN client c3 ON d3.district_id = c3.district_id\n                  WHERE c3.gender='F'\n                  AND c3.birth_date = (SELECT MIN(birth_date)\n                                          FROM client\n                                          WHERE gender='F'));\t----- bird -----\tfinancial",
    "472": "SELECT d.account_id\nFROM disp d\nJOIN client c ON d.client_id = c.client_id\nJOIN district di ON c.district_id = di.district_id\nWHERE c.birth_date = (SELECT MAX(birth_date) FROM client)\n  AND di.A11 = (SELECT MAX(A11) FROM district);\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, l.amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status = 'approved'\n  AND YEAR(l.date) = 1997\n  AND a.frequency = 'POPLATEK TYDNE'\n  AND l.amount = (\n    SELECT MIN(l2.amount)\n    FROM loan l2\n    JOIN account a2 ON l2.account_id = a2.account_id\n    WHERE l2.status = 'approved'\n      AND YEAR(l2.date) = 1997\n      AND a2.frequency = 'POPLATEK TYDNE'\n  );\t----- bird -----\tfinancial",
    "474": "SELECT a.account_id, a.date, l.amount\nFROM account a\nJOIN loan l ON l.account_id = a.account_id\nWHERE l.duration > 12\n  AND YEAR(a.date) = 1993\n  AND l.amount = (\n    SELECT MAX(l2.amount)\n    FROM loan l2\n    JOIN account a2 ON l2.account_id = a2.account_id\n    WHERE l2.duration > 12\n      AND YEAR(a2.date) = 1993\n  );\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT client.`client_id`) AS female_customer_count\nFROM client\nJOIN district ON client.`district_id` = district.`district_id`\nJOIN account ON client.`district_id` = account.`district_id`\nWHERE district.`A2` = 'Sokolov'\n  AND client.`gender` = 'F'\n  AND client.`birth_date` < '1950-01-01';\t----- bird -----\tfinancial",
    "476": "SELECT d.A2\nFROM `client` c\nJOIN `disp` dp ON c.client_id = dp.client_id\nJOIN `account` a ON dp.account_id = a.account_id\nJOIN `district` d ON a.district_id = d.district_id\nWHERE c.gender = 'F'\n  AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT 100.0 * COUNT(CASE WHEN gender='M' THEN 1 END) / COUNT(*) AS male_percentage\nFROM client\nWHERE district_id = (\n    SELECT district_id FROM district\n    WHERE A3='south Bohemia'\n    ORDER BY CAST(A4 AS UNSIGNED) DESC\n    LIMIT 1\n);\t----- bird -----\tfinancial",
    "478": "SELECT d.client_id,\n       ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate\nFROM loan l\nJOIN disp d ON l.account_id = d.account_id\nJOIN trans t1 ON l.account_id = t1.account_id AND t1.date = '1993-03-22'\nJOIN trans t2 ON l.account_id = t2.account_id AND t2.date = '1998-12-27'\nWHERE l.date = '1993-07-05'\nORDER BY l.loan_id\nLIMIT 1;\t----- bird -----\tfinancial",
    "479": "SELECT\n  ROUND(\n    (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) / SUM(amount)) * 100,\n    2\n  ) AS percentage_of_loan_amount_fully_paid\nFROM loan;\t----- bird -----\tfinancial",
    "480": "SELECT ROUND((SUM(CASE WHEN amount < 100000 AND status = 'C' THEN amount ELSE 0 END) / SUM(CASE WHEN amount < 100000 THEN amount ELSE 0 END)) * 100, 2) AS percentage FROM loan;\t----- bird -----\tfinancial",
    "481": "SELECT DISTINCT d.A2 AS district,\n       ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.status = 'D'\n  AND d.A12 IS NOT NULL\n  AND d.A13 IS NOT NULL;\t----- bird -----\tfinancial",
    "482": "SELECT d.A2 AS district_name,\n       COUNT(DISTINCT c.client_id) AS female_account_holders\nFROM client c\nJOIN disp d1 ON c.client_id = d1.client_id\nJOIN account a ON d1.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F'\nGROUP BY d.A2\nORDER BY female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) AS approved_loan_count\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.status = 'APPROVED'\n  AND l.amount >= 250000\n  AND l.date BETWEEN '1995-01-01' AND '1997-12-31'\n  AND a.frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT a.account_id) AS running_contract_accounts\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE a.district_id = 1\n  AND l.status = 'C';\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) AS male_client_count\nFROM client\nWHERE gender = 'M'\n  AND district_id IN (\n    SELECT district_id\n    FROM district\n    WHERE A15 = (\n      SELECT A15\n      FROM (\n        SELECT DISTINCT A15\n        FROM district\n        WHERE A15 IS NOT NULL\n        ORDER BY A15 DESC\n        LIMIT 1 OFFSET 1\n      ) AS t\n    )\n  );\t----- bird -----\tfinancial",
    "486": "SELECT\n    d.A2 AS district_name,\n    t.trans_id,\n    t.amount,\n    t.date\nFROM\n    trans t\n    INNER JOIN account a ON t.account_id = a.account_id\n    INNER JOIN district d ON a.district_id = d.district_id\nWHERE\n    t.type = 'VYDAJ'\n    AND t.date LIKE '1996-01%'\nORDER BY\n    t.amount DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT a.account_id) AS running_contract_accounts\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status IN ('C','D')\n  AND a.district_id = 1;\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) AS male_client_count\nFROM client\nWHERE gender = 'M'\n  AND district_id IN (\n    SELECT district_id\n    FROM district\n    WHERE A15 = (\n      SELECT A15\n      FROM district\n      WHERE A15 IS NOT NULL\n      GROUP BY A15\n      ORDER BY A15 DESC\n      LIMIT 1,1\n    )\n  );\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT d.client_id\nFROM `trans` t\nJOIN `disp` d ON t.account_id = d.account_id\nWHERE t.operation = 'VYBER KARTOU'\n  AND YEAR(t.`date`) = 1998\n  AND t.amount < (\n    SELECT AVG(amount)\n    FROM `trans`\n    WHERE operation = 'VYBER KARTOU'\n      AND YEAR(`date`) = 1998\n  );\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT a.type\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE a.type <> 'OWNER'\n  AND d.A11 > 8000\n  AND d.A11 <= 9000;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.A15) AS avg_crimes\nFROM district d\nWHERE d.A8 > 4000\n  AND EXISTS (\n    SELECT 1\n    FROM account a\n    WHERE a.district_id = d.district_id\n      AND a.date >= '1997-01-01'\n  );\t----- bird -----\tfinancial",
    "492": "SELECT t.trans_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account\nFROM trans t\nINNER JOIN account a ON t.account_id = a.account_id\nINNER JOIN disp d ON a.account_id = d.account_id\nINNER JOIN client c ON d.client_id = c.client_id\nWHERE c.client_id = 3356\n  AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": "SELECT 100.0 * SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) / COUNT(*) AS female_percentage\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE d.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT\n  ((SUM(CASE WHEN YEAR(sub.date)=1997 THEN sub.amount ELSE 0 END) -\n    SUM(CASE WHEN YEAR(sub.date)=1996 THEN sub.amount ELSE 0 END))\n   / NULLIF(SUM(CASE WHEN YEAR(sub.date)=1996 THEN sub.amount ELSE 0 END),0)) * 100\n   AS growth_rate\nFROM (\n    SELECT DISTINCT l.loan_id, l.amount, l.date\n    FROM loan l\n    JOIN account a ON l.account_id = a.account_id\n    JOIN client c ON a.district_id = c.district_id\n    WHERE c.gender='M'\n) sub;\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(*) AS statement_requests\nFROM trans\nWHERE account_id = 3\n  AND operation LIKE '%statement%';\n\nSELECT k_symbol, SUM(amount) AS total_debit\nFROM trans\nWHERE amount = 3539\n  AND type = 'debit'\nGROUP BY k_symbol;\t----- bird -----\tfinancial",
    "496": "SELECT\n  ROUND(\n    100 * SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) / COUNT(*),\n    2\n  ) AS male_weekly_statement_percentage\nFROM client c\nJOIN account a ON a.district_id = c.district_id\nWHERE a.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "497": "SELECT DISTINCT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district di ON c.district_id = di.district_id\nWHERE c.gender = 'F'\n  AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\n  AND di.A11 = (\n      SELECT MIN(A11)\n      FROM district\n      WHERE district_id IN (\n          SELECT district_id\n          FROM client\n          WHERE gender = 'F'\n            AND birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\n      )\n  );\t----- bird -----\tfinancial",
    "498": "SELECT AVG(`amount`) AS avg_loan_amount\nFROM `loan`\nWHERE `status` IN ('C', 'D')\n  AND `account_id` IN (\n    SELECT `account_id`\n    FROM `trans`\n    WHERE `operation` = 'POPLATEK PO OBRATU'\n  );\t----- bird -----\tfinancial",
    "499": "SELECT DISTINCT\n    c.client_id,\n    TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age\nFROM client c\nJOIN disp d ON d.client_id = c.client_id\nJOIN card ca ON ca.disp_id = d.disp_id\nWHERE d.type = 'OWNER'\n  AND ca.type = 'gold';\t----- bird -----\tfinancial"
}